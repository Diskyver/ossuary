var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","try_from","try_into","borrow","borrow_mut","type_id","typeid","u32x4","u64x2","errorkind","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","rand_core","Implement `fill_bytes` by reading chunks from the output…","rand_core::block","to_owned","clone_into","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","seed_from_u64","from_rng","rngcore","blockrng","blockrng64","formatter","description","stderror","ErrorKind","BlockRng","BlockRng64","BlockRngCore","SeedableRng","context","backtrace","compat","Attempts to downcast this failure to a concrete type by…","option","Backtrace","ResultExt","constant_time_eq","choice","This returns the underlying value if it is `Some` or the…","ctoption","Returns a `None` value if the option is `None`, otherwise…","conditional_select","ConstantTimeEq","ConditionallySelectable","ConditionallyNegatable","CtOption","paderror","unpaderror","pad_block","PadError","UnpadError","ZeroPadding","AnsiX923","decrypterror","DecryptError","to_string","Reads an unsigned n-bytes integer from `buf`.","Writes an unsigned integer `n` to `buf` using only `nbytes`.","Reads a signed n-bytes integer from `buf`.","Writes a signed integer `n` to `buf` using only `nbytes`.","Reads IEEE754 single-precision (4 bytes) floating point…","DEPRECATED.","read_u16","read_u32","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u32","write_u64","write_u128","write_uint","write_uint128","read_u16_into","read_u32_into","read_u64_into","read_u128_into","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","bigendian","littleendian","ordering","partial_cmp","ByteOrder","BigEndian","LittleEndian","A potential output from `Cmp`, this is the type equivalent…","Instantiates a singleton representing this bit.","Instantiates a singleton representing this unsigned integer.","Instantiates a singleton representing this strictly…","typenum","This function isn't used in this crate, but may be useful…","The type representing either `True` or `False`","Method returning `True` or `False`.","typenum::bit","is_greater","is_less_or_equal","is_not_equal","is_greater_or_equal","is_equal","typenum::uint","partial_div","typenum::int","is_less","typenum::array","to_ordering","to_isize","to_usize","default","PartialDiv","IsGreater","IsLessOrEqual","IsNotEqual","IsGreaterOrEqual","cpusubtype","sizeofcmds","sin_family","sigaction","if_nameindex","mach_timebase_info","ipv6_mreq","itimerval","sockaddr_in6","sockaddr_un","pthread_mutexattr_t","pthread_condattr_t","pthread_rwlockattr_t","siginfo_t","radvisory","sockaddr_in","kevent64_s","if_msghdr","proc_taskinfo","proc_bsdinfo","proc_taskallinfo","xsw_usage","mach_header","mach_header_64","segment_command","segment_command_64","load_command","sockaddr_dl","sockaddr_inarp","sockaddr_ctl","in_pktinfo","in6_pktinfo","proc_threadinfo","pthread_rwlock_t","pthread_mutex_t","pthread_cond_t","sockaddr_storage","timeval32","pthread_attr_t","timespec","protoent","sockaddr","addrinfo","fstore_t","sigevent","ipc_perm","semid_ds","shmid_ds","in6_addr","locale_t","timezone","Lcg64Xsh32","Mcg128Xsl64","chachacore","ChaChaRng","ChaChaCore","rand_isaac","new_from_u64","Create an ISAAC-64 random number generator using an `u64`…","rand_isaac::isaac","rand_isaac::isaac64","generate","Refills the output buffer, `results`. See also the…","isaacarray","Create an ISAAC random number generator using an `u64` as…","Isaac64Rng","Isaac64Core","IsaacCore","A cryptographically secure random number generator that…","Hc128Core","XorShiftRng","Calls a closure and overwrites its stack on return.","clear_on_drop","clearondrop","InitializableFromZeroed","ClearOnDrop","generic_array","mappedsequence","as_mut_slice","genericarray","into_iter","generic_array::iter","pop_front","deref_mut","AddLength","MappedGenericSequence","FunctionalSequence","GenericArrayIter","GenericSequence","ArrayLength","GenericArray","jitterrng","timererror","TimerError","JitterRng","blockbuffer","BlockBuffer","Digest input data.","result_reset","Reset hasher instance to its initial state.","output_size","Get output size of the hasher","Digest input data in a chained manner.","OutputSize","Retrieve result and consume hasher instance.","invalidoutputsize","vec_result","DynDigest","BlockInput","FixedOutput","VariableOutput","XofReader","ExtendableOutput","InvalidOutputSize","A distribution to sample floating point numbers uniformly…","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","rand::distributions","bernoulli","weightedindex","weightederror","dirichlet","rand::rngs","sample_iter","rand::seq","choose_multiple","Collects `amount` values at random from the iterator into…","distribution","Fill `dest` entirely with random bytes (uniform value…","choose_mut","Shuffle a mutable slice in place.","rand::distributions::uniform","from_entropy","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","uniform","unitspheresurface","unitcircle","chisquared","lognormal","triangular","threadrng","indexvec","indexvecintoiter","size_hint","WeightedError","SampleUniform","UniformSampler","SampleBorrow","Bernoulli","WeightedIndex","UnitSphereSurface","UnitCircle","ChiSquared","LogNormal","Dirichlet","Triangular","Distribution","WeightedChoice","ReseedingRng","EntropyRng","SliceRandom","IteratorRandom","AsByteSliceMut","FromEntropy","Alphanumeric","OpenClosed01","StandardNormal","UniformInt","UniformFloat","UniformDuration","ThreadRng","SliceChooseIter","IndexVecIter","IndexVecIntoIter","Error kind which can be matched over.","Unavailable","Feature is not available; not recoverable.","Unexpected","General failure; there may be a chance of recovery on retry.","Transient","A transient failure which likely can be resolved or worked…","Not ready yet: recommended to try again a little later.","Error type of random number generators","The error kind","The error message","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` with random data.","Fill `dest` entirely with random data.","CryptoRng","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","should_retry","True if this kind of error may resolve itself on retry.","should_wait","True if we should retry but wait before retrying","A description of this error kind","Create a new instance, with specified kind and a message.","with_cause","Create a new instance, with specified kind, message, and a…","take_cause","Take the cause, if any. This allows the embedded cause to…","A true random number generator based on jitter in the CPU…","An error that can occur when [`JitterRng::test_timer`]…","No timer available.","CoarseTimer","Timer too coarse to use as an entropy source.","NotMonotonic","Timer is not monotonically increasing.","TinyVariantions","Variations of deltas of time too small.","TooManyStuck","Too many stuck results (indicating no added entropy).","Create a new `JitterRng`. Makes use of `std::time` for a…","new_with_timer","Create a new `JitterRng`. A custom timer can be supplied,…","set_rounds","Configures how many rounds are used to generate each…","test_timer","Basic quality tests on the timer, by measuring CPU timing…","timer_stats","Statistical test: return the timer delta of one normal run…","A random number generator that retrieves randomness…","Create a new `OsRng`.","The `Digest` trait specifies an interface common for…","Create new hasher instance","Retrieve result and reset hasher instance.","Convenience function to compute hash of the `data`. It…","Retrieve result and reset hasher instance","Retrieve result and consume boxed hasher instance","fixed_result","Sha512Trunc224","Sha512Trunc256","curve25519_dalek","edwardspoint","as_bytes","to_bytes","compressededwardsy","Precomputation for variable-time multiscalar…","from_slice","decompress","ristrettopoint","compressedristretto","hash_from_bytes","from_hash","vartime_double_scalar_mul_basepoint","Compute \\(aA + bB\\) in variable time, where \\(B\\) is the…","basepoint","The type of point being multiplied, e.g., `RistrettoPoint`.","Given an iterator of public scalars and an iterator of…","vartime_multiscalar_mul","Given `static_scalars`, an iterator of public scalars…","curve25519_dalek::scalar","initialize","curve25519_dalek::montgomery","is_identity","curve25519_dalek::edwards","conditional_negate","curve25519_dalek::ristretto","identity","multiscalar_mul","optional_multiscalar_mul","optional_mixed_multiscalar_mul","montgomerypoint","add_assign","sub_assign","mul_assign","edwardsbasepointtable","ristrettobasepointtable","MontgomeryPoint","CompressedEdwardsY","EdwardsPoint","EdwardsBasepointTable","CompressedRistretto","RistrettoPoint","RistrettoBasepointTable","IsIdentity","MultiscalarMul","VartimeMultiscalarMul","VartimePrecomputedMultiscalarMul","VartimeEdwardsPrecomputation","VartimeRistrettoPrecomputation","Note that docs will only build on nightly Rust until RFC…","diffie_hellman","Perform a Diffie-Hellman key agreement between `self` and…","publickey","sharedsecret","staticsecret","PublicKey","EphemeralSecret","StaticSecret","SharedSecret","The SHA-512 hash algorithm with the SHA-512 initial hash…","signatureerror","signature","from_bytes","Verify a signature on a message with this keypair's public…","verify_prehashed","Verify a `signature` on a `prehashed_message` using the…","secretkey","expandedsecretkey","sign_prehashed","SecretKey","ExpandedSecretKey","Signature","SignatureError","View this public key as a byte array.","ossuaryerror","ossuaryconnection","connectiontype","OssuaryError","ConnectionType","OssuaryConnection"];
searchIndex["block_buffer"]={"doc":E,"i":[[3,R[230],"block_buffer","Buffer for block processing of data",N,N],[11,"input",E,"Process data in `input` in blocks of size `BlockSize`…",0,[[["self"],["f"]]]],[11,"input_lazy",E,"Variant that doesn't flush the buffer until there's…",0,[[["self"],["f"]]]],[11,"len64_padding",E,"Pad message with 0x80, zeros and 64-bit message length in…",0,[[["self"],["u64"],["f"]]]],[11,"len128_padding_be",E,"Pad message with 0x80, zeros and 128-bit message length in…",0,[[["self"],["u64"],["f"]]]],[11,"pad_with",E,"Pad message with a given padding `P`",0,[[["self"]],[[R[0],[R[213],R[57]]],[R[213]],[R[57]]]]],[11,"size",E,"Return size of the internall buffer in bytes",0,[[["self"]],["usize"]]],[11,"position",E,"Return current cursor position",0,[[["self"]],["usize"]]],[11,"remaining",E,"Return number of remaining bytes in the internall buffer",0,[[["self"]],["usize"]]],[11,"reset",E,"Reset buffer by setting cursor position to zero",0,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"clone",E,E,0,[[["self"]],[R[229]]]],[11,R[128],E,E,0,[[],[R[229]]]]],"p":[[3,R[230]]]};
searchIndex["block_padding"]={"doc":"Padding and unpadding of messages divided into blocks.","i":[[3,R[60],"block_padding","Error for indicating failed padding operation",N,N],[3,R[61],E,"Error for indicating failed unpadding operation",N,N],[4,R[62],E,"Pad block with zeros.",N,N],[4,"Pkcs7",E,"Pad block with bytes with value equal to the number of…",N,N],[4,R[63],E,"Pad block with zeros except the last byte which will be…",N,N],[4,"Iso7816",E,"Pad block with byte sequence `\\x80 00...00 00`.",N,N],[8,"Padding",E,"Trait for padding messages divided into blocks",N,N],[10,R[59],E,"Pads `block` filled with data up to `pos`.",0,[[["usize"]],[[R[0],[R[57]]],[R[57]]]]],[11,"pad",E,"Pads message with length `pos` in the provided buffer.",0,[[["usize"]],[[R[57]],[R[0],[R[57]]]]]],[10,"unpad",E,"Unpad given `data` by truncating it according to the used…",0,[[],[[R[58]],[R[0],[R[58]]]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,"into",E,E,4,[[],[U]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[1],E,E,5,[[[U]],[R[0]]]],[11,"into",E,E,5,[[],[U]]],[11,R[2],E,E,5,[[],[R[0]]]],[11,R[3],E,E,5,[[["self"]],[T]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[R[6]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[1],E,E,6,[[[U]],[R[0]]]],[11,"into",E,E,6,[[],[U]]],[11,R[2],E,E,6,[[],[R[0]]]],[11,R[3],E,E,6,[[["self"]],[T]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[R[6]]]],[11,R[59],E,E,3,[[["usize"]],[[R[0],[R[57]]],[R[57]]]]],[11,"pad",E,E,3,[[["usize"]],[[R[57]],[R[0],[R[57]]]]]],[11,"unpad",E,E,3,[[],[[R[58]],[R[0],[R[58]]]]]],[11,R[59],E,E,4,[[["usize"]],[[R[0],[R[57]]],[R[57]]]]],[11,"unpad",E,E,4,[[],[[R[58]],[R[0],[R[58]]]]]],[11,R[59],E,E,5,[[["usize"]],[[R[0],[R[57]]],[R[57]]]]],[11,"unpad",E,E,5,[[],[[R[58]],[R[0],[R[58]]]]]],[11,R[59],E,E,6,[[["usize"]],[[R[0],[R[57]]],[R[57]]]]],[11,"unpad",E,E,6,[[],[[R[58]],[R[0],[R[58]]]]]],[11,"fmt",E,E,1,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,2,[[[R[32]],["self"]],[R[0]]]],[11,"clone",E,E,1,[[["self"]],[R[57]]]],[11,"clone",E,E,2,[[["self"]],[R[58]]]]],"p":[[8,"Padding"],[3,R[60]],[3,R[61]],[4,R[62]],[4,"Pkcs7"],[4,R[63]],[4,"Iso7816"]]};
searchIndex["byte_tools"]={"doc":E,"i":[[5,"copy","byte_tools","Copy bytes from `src` to `dst`",N,[[]]],[5,"zero",E,"Zero all bytes in `dst`",N,[[]]],[5,"set",E,"Sets all bytes in `dst` equal to `value`",N,[[["u8"]]]]],"p":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","i":[[4,R[104],"byteorder","Defines big-endian serialization.",N,N],[4,R[105],E,"Defines little-endian serialization.",N,N],[6,"BE",E,"A type alias for [`BigEndian`].",N,N],[6,"LE",E,"A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian",E,"Defines network byte order serialization.",N,N],[6,"NativeEndian",E,"Defines system native-endian serialization.",N,N],[8,R[103],E,"`ByteOrder` describes types that can serialize integers as…",N,N],[10,R[73],E,"Reads an unsigned 16 bit integer from `buf`.",0,[[],["u16"]]],[11,"read_u24",E,"Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,[[],["u32"]]],[10,R[74],E,"Reads an unsigned 32 bit integer from `buf`.",0,[[],["u32"]]],[11,"read_u48",E,"Reads an unsigned 48 bit integer from `buf`, stored in u64.",0,[[],["u64"]]],[10,R[75],E,"Reads an unsigned 64 bit integer from `buf`.",0,[[],["u64"]]],[10,R[76],E,"Reads an unsigned 128 bit integer from `buf`.",0,[[],["u128"]]],[10,R[77],E,R[67],0,[[["usize"]],["u64"]]],[10,R[78],E,R[67],0,[[["usize"]],["u128"]]],[10,R[79],E,"Writes an unsigned 16 bit integer `n` to `buf`.",0,[[["u16"]]]],[11,"write_u24",E,"Writes an unsigned 24 bit integer `n` to `buf`, stored in…",0,[[["u32"]]]],[10,R[80],E,"Writes an unsigned 32 bit integer `n` to `buf`.",0,[[["u32"]]]],[11,"write_u48",E,"Writes an unsigned 48 bit integer `n` to `buf`, stored in…",0,[[["u64"]]]],[10,R[81],E,"Writes an unsigned 64 bit integer `n` to `buf`.",0,[[["u64"]]]],[10,R[82],E,"Writes an unsigned 128 bit integer `n` to `buf`.",0,[[["u128"]]]],[10,R[83],E,R[68],0,[[["usize"],["u64"]]]],[10,R[84],E,R[68],0,[[["u128"],["usize"]]]],[11,"read_i16",E,"Reads a signed 16 bit integer from `buf`.",0,[[],["i16"]]],[11,"read_i24",E,"Reads a signed 24 bit integer from `buf`, stored in i32.",0,[[],["i32"]]],[11,"read_i32",E,"Reads a signed 32 bit integer from `buf`.",0,[[],["i32"]]],[11,"read_i48",E,"Reads a signed 48 bit integer from `buf`, stored in i64.",0,[[],["i64"]]],[11,"read_i64",E,"Reads a signed 64 bit integer from `buf`.",0,[[],["i64"]]],[11,"read_i128",E,"Reads a signed 128 bit integer from `buf`.",0,[[],["i128"]]],[11,"read_int",E,R[69],0,[[["usize"]],["i64"]]],[11,"read_int128",E,R[69],0,[[["usize"]],["i128"]]],[11,"read_f32",E,"Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[],["f32"]]],[11,"read_f64",E,"Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[],["f64"]]],[11,"write_i16",E,"Writes a signed 16 bit integer `n` to `buf`.",0,[[["i16"]]]],[11,"write_i24",E,"Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,[[["i32"]]]],[11,"write_i32",E,"Writes a signed 32 bit integer `n` to `buf`.",0,[[["i32"]]]],[11,"write_i48",E,"Writes a signed 48 bit integer `n` to `buf`, stored in i64.",0,[[["i64"]]]],[11,"write_i64",E,"Writes a signed 64 bit integer `n` to `buf`.",0,[[["i64"]]]],[11,"write_i128",E,"Writes a signed 128 bit integer `n` to `buf`.",0,[[["i128"]]]],[11,"write_int",E,R[70],0,[[["i64"],["usize"]]]],[11,"write_int128",E,R[70],0,[[["i128"],["usize"]]]],[11,"write_f32",E,"Writes a IEEE754 single-precision (4 bytes) floating point…",0,[[["f32"]]]],[11,"write_f64",E,"Writes a IEEE754 double-precision (8 bytes) floating point…",0,[[["f64"]]]],[10,R[85],E,"Reads unsigned 16 bit integers from `src` into `dst`.",0,[[]]],[10,R[86],E,"Reads unsigned 32 bit integers from `src` into `dst`.",0,[[]]],[10,R[87],E,"Reads unsigned 64 bit integers from `src` into `dst`.",0,[[]]],[10,R[88],E,"Reads unsigned 128 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i16_into",E,"Reads signed 16 bit integers from `src` to `dst`.",0,[[]]],[11,"read_i32_into",E,"Reads signed 32 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i64_into",E,"Reads signed 64 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i128_into",E,"Reads signed 128 bit integers from `src` into `dst`.",0,[[]]],[11,"read_f32_into",E,R[71],0,[[]]],[11,"read_f32_into_unchecked",E,R[72],0,[[]]],[11,"read_f64_into",E,R[71],0,[[]]],[11,"read_f64_into_unchecked",E,R[72],0,[[]]],[10,R[89],E,"Writes unsigned 16 bit integers from `src` into `dst`.",0,[[]]],[10,R[90],E,"Writes unsigned 32 bit integers from `src` into `dst`.",0,[[]]],[10,R[91],E,"Writes unsigned 64 bit integers from `src` into `dst`.",0,[[]]],[10,R[92],E,"Writes unsigned 128 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i16_into",E,"Writes signed 16 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i32_into",E,"Writes signed 32 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i64_into",E,"Writes signed 64 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i128_into",E,"Writes signed 128 bit integers from `src` into `dst`.",0,[[]]],[11,"write_f32_into",E,"Writes IEEE754 single-precision (4 bytes) floating point…",0,[[]]],[11,"write_f64_into",E,"Writes IEEE754 double-precision (8 bytes) floating point…",0,[[]]],[10,R[93],E,"Converts the given slice of unsigned 16 bit integers to a…",0,[[]]],[10,R[94],E,"Converts the given slice of unsigned 32 bit integers to a…",0,[[]]],[10,R[95],E,"Converts the given slice of unsigned 64 bit integers to a…",0,[[]]],[10,R[96],E,"Converts the given slice of unsigned 128 bit integers to a…",0,[[]]],[11,"from_slice_i16",E,"Converts the given slice of signed 16 bit integers to a…",0,[[]]],[11,"from_slice_i32",E,"Converts the given slice of signed 32 bit integers to a…",0,[[]]],[11,"from_slice_i64",E,"Converts the given slice of signed 64 bit integers to a…",0,[[]]],[11,"from_slice_i128",E,"Converts the given slice of signed 128 bit integers to a…",0,[[]]],[10,R[97],E,"Converts the given slice of IEEE754 single-precision (4…",0,[[]]],[10,R[98],E,"Converts the given slice of IEEE754 double-precision (8…",0,[[]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,R[73],E,E,1,[[],["u16"]]],[11,R[74],E,E,1,[[],["u32"]]],[11,R[75],E,E,1,[[],["u64"]]],[11,R[76],E,E,1,[[],["u128"]]],[11,R[77],E,E,1,[[["usize"]],["u64"]]],[11,R[78],E,E,1,[[["usize"]],["u128"]]],[11,R[79],E,E,1,[[["u16"]]]],[11,R[80],E,E,1,[[["u32"]]]],[11,R[81],E,E,1,[[["u64"]]]],[11,R[82],E,E,1,[[["u128"]]]],[11,R[83],E,E,1,[[["usize"],["u64"]]]],[11,R[84],E,E,1,[[["u128"],["usize"]]]],[11,R[85],E,E,1,[[]]],[11,R[86],E,E,1,[[]]],[11,R[87],E,E,1,[[]]],[11,R[88],E,E,1,[[]]],[11,R[89],E,E,1,[[]]],[11,R[90],E,E,1,[[]]],[11,R[91],E,E,1,[[]]],[11,R[92],E,E,1,[[]]],[11,R[93],E,E,1,[[]]],[11,R[94],E,E,1,[[]]],[11,R[95],E,E,1,[[]]],[11,R[96],E,E,1,[[]]],[11,R[97],E,E,1,[[]]],[11,R[98],E,E,1,[[]]],[11,R[73],E,E,2,[[],["u16"]]],[11,R[74],E,E,2,[[],["u32"]]],[11,R[75],E,E,2,[[],["u64"]]],[11,R[76],E,E,2,[[],["u128"]]],[11,R[77],E,E,2,[[["usize"]],["u64"]]],[11,R[78],E,E,2,[[["usize"]],["u128"]]],[11,R[79],E,E,2,[[["u16"]]]],[11,R[80],E,E,2,[[["u32"]]]],[11,R[81],E,E,2,[[["u64"]]]],[11,R[82],E,E,2,[[["u128"]]]],[11,R[83],E,E,2,[[["usize"],["u64"]]]],[11,R[84],E,E,2,[[["u128"],["usize"]]]],[11,R[85],E,E,2,[[]]],[11,R[86],E,E,2,[[]]],[11,R[87],E,E,2,[[]]],[11,R[88],E,E,2,[[]]],[11,R[89],E,E,2,[[]]],[11,R[90],E,E,2,[[]]],[11,R[91],E,E,2,[[]]],[11,R[92],E,E,2,[[]]],[11,R[93],E,E,2,[[]]],[11,R[94],E,E,2,[[]]],[11,R[95],E,E,2,[[]]],[11,R[96],E,E,2,[[]]],[11,R[97],E,E,2,[[]]],[11,R[98],E,E,2,[[]]],[11,"eq",E,E,1,[[["self"],[R[99]]],["bool"]]],[11,"eq",E,E,2,[[[R[100]],["self"]],["bool"]]],[11,"cmp",E,E,1,[[["self"],[R[99]]],[R[101]]]],[11,"cmp",E,E,2,[[[R[100]],["self"]],[R[101]]]],[11,R[102],E,E,1,[[["self"],[R[99]]],[[R[101]],[R[44],[R[101]]]]]],[11,R[102],E,E,2,[[[R[100]],["self"]],[[R[101]],[R[44],[R[101]]]]]],[11,"fmt",E,E,1,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,2,[[[R[32]],["self"]],[R[0]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"clone",E,E,1,[[["self"]],[R[99]]]],[11,"clone",E,E,2,[[["self"]],[R[100]]]],[11,R[128],E,E,1,[[],[R[99]]]],[11,R[128],E,E,2,[[],[R[100]]]]],"p":[[8,R[103]],[4,R[104]],[4,R[105]]]};
searchIndex["chacha20_poly1305_aead"]={"doc":"A pure Rust implementation of the ChaCha20-Poly1305 AEAD…","i":[[4,R[65],"chacha20_poly1305_aead","Error returned from the `decrypt` function.",N,N],[13,"TagMismatch",E,"The calculated Poly1305 tag did not match the given tag.",0,N],[13,"IoError",E,"There was an error writing the output.",0,N],[5,"decrypt",E,"Verifies the authentication tag and decrypts a byte slice.",N,[[["w"]],[[R[0],[R[64]]],[R[64]]]]],[5,"encrypt",E,"Encrypts a byte slice and returns the authentication tag.",N,[[["w"]],[R[0]]]],[5,"encrypt_read",E,"Encrypts bytes from a reader and returns the…",N,[[["r"],["w"]],[R[0]]]],[5,"selftest",E,"Runs the self-test for ChaCha20, Poly1305, and the AEAD.",N,[[]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[66],E,E,0,[[["self"]],["string"]]],[11,"into",E,E,0,[[],[U]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[32]]],[R[0]]]],[11,R[33],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[["error"],[R[44],["error"]]]]]],"p":[[4,R[65]]]};
searchIndex["clear_on_drop"]={"doc":"Helpers for clearing sensitive data on the stack and heap.","i":[[3,R[209],R[206],"Zeroizes a storage location when dropped.",N,N],[5,"clear_stack_on_return",E,R[205],N,[[["usize"],["f"]],["r"]]],[5,"clear_stack_on_return_fnonce",E,R[205],N,[[["usize"],["f"]],["r"]]],[5,"clear_stack",E,"Overwrites a few pages of stack.",N,[[["usize"]]]],[0,"clear",E,"Traits to completely overwrite a value, without leaking…",N,N],[8,"Clear","clear_on_drop::clear","An operation to completely overwrite a value, without…",N,N],[10,"clear",E,"Completely overwrites this value.",0,[[["self"]]]],[8,R[208],E,"A type that can be initialized to a valid value, after…",N,N],[10,R[396],E,"Called to initialize a place to a valid value, after it is…",1,[[]]],[8,"ZeroSafe",E,"Unsafe trait to indicate which types are safe to set to…",N,N],[11,"new",R[206],"Creates a new `ClearOnDrop` which clears `place` on drop.",2,[[["p"]],["self"]]],[11,"into_place",E,"Consumes the `ClearOnDrop`, returning the `place` after…",2,[[],["p"]]],[11,"into_uncleared_place",E,"Consumes the `ClearOnDrop`, returning the `place` without…",2,[[],["p"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,"eq",E,E,2,[[["self"],[R[207]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[207]]],["bool"]]],[11,"cmp",E,E,2,[[["self"]],[R[101]]]],[11,R[102],E,E,2,[[["self"],[R[207]]],[[R[44],[R[101]]],[R[101]]]]],[11,"lt",E,E,2,[[["self"],[R[207]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[207]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[207]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[207]]],["bool"]]],[11,R[217],E,E,2,[[["self"]]]],[11,"fmt",E,E,2,[[["self"],[R[32]]],[R[0]]]],[11,"deref",E,E,2,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"hash",E,E,2,[[["self"],["h"]]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,"as_mut",E,E,2,[[["self"]],[T]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone_from",E,E,2,[[["self"],["self"]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]]],"p":[[8,"Clear"],[8,R[208]],[3,R[209]]]};
searchIndex["constant_time_eq"]={"doc":E,"i":[[5,R[47],R[47],"Compares two equal-sized byte strings in constant time.",N,[[],["bool"]]]],"p":[]};
searchIndex["curve25519_dalek"]={"doc":R[425],"i":[[0,"scalar",R[376],"Arithmetic on scalars (integers mod the group order).",N,N],[3,"Scalar",R[395],"The `Scalar` struct holds an integer \\(s < 2^{255} \\)…",N,N],[11,"from_bytes_mod_order",E,"Construct a `Scalar` by reducing a 256-bit little-endian…",0,[[],["scalar"]]],[11,"from_bytes_mod_order_wide",E,"Construct a `Scalar` by reducing a 512-bit little-endian…",0,[[],["scalar"]]],[11,"from_canonical_bytes",E,"Attempt to construct a `Scalar` from a canonical byte…",0,[[],[["scalar"],[R[44],["scalar"]]]]],[11,"from_bits",E,"Construct a `Scalar` from the low 255 bits of a 256-bit…",0,[[],["scalar"]]],[11,"random",E,"Return a `Scalar` chosen uniformly at random using a…",0,[[["r"]],["self"]]],[11,R[386],E,"Hash a slice of bytes into a scalar.",0,[[],["scalar"]]],[11,R[387],E,"Construct a scalar from an existing `Digest` instance.",0,[[["d"]],["scalar"]]],[11,R[379],E,"Convert this `Scalar` to its underlying sequence of bytes.",0,[[["self"]]]],[11,R[378],E,"View the little-endian byte encoding of the integer…",0,[[["self"]]]],[11,"zero",E,"Construct the scalar \\( 0 \\).",0,[[],["self"]]],[11,"one",E,"Construct the scalar \\( 1 \\).",0,[[],["self"]]],[11,"invert",E,"Given a nonzero `Scalar`, compute its multiplicative…",0,[[["self"]],["scalar"]]],[11,"batch_invert",E,"Given a slice of nonzero (possibly secret) `Scalar`s,…",0,[[],["scalar"]]],[11,"reduce",E,"Reduce this `Scalar` modulo \\(\\ell\\).",0,[[["self"]],["scalar"]]],[11,"is_canonical",E,"Check whether this `Scalar` is the canonical…",0,[[["self"]],["bool"]]],[0,"montgomery",R[376],"Scalar multiplication on the Montgomery form of Curve25519.",N,N],[3,R[412],R[397],"Holds the \\(u\\)-coordinate of a point on the Montgomery…",N,N],[12,"0",E,E,1,N],[11,R[378],E,"View this `MontgomeryPoint` as an array of bytes.",1,[[["self"]]]],[11,R[379],E,"Convert this `MontgomeryPoint` to an array of bytes.",1,[[["self"]]]],[11,"to_edwards",E,"Attempt to convert to an `EdwardsPoint`, using the…",1,[[["self"],["u8"]],[[R[377]],[R[44],[R[377]]]]]],[0,"edwards",R[376],"Group operations for Curve25519, in Edwards form.",N,N],[3,R[413],R[399],"In \"Edwards y\" / \"Ed25519\" format, the curve point…",N,N],[12,"0",E,E,2,N],[3,R[414],E,"An `EdwardsPoint` represents a point on the Edwards form…",N,N],[3,R[423],E,R[381],N,N],[3,R[415],E,"A precomputed table of multiples of a basepoint, for…",N,N],[11,R[378],E,"View this `CompressedEdwardsY` as an array of bytes.",2,[[["self"]]]],[11,R[379],E,"Copy this `CompressedEdwardsY` to an array of bytes.",2,[[["self"]]]],[11,R[383],E,"Attempt to decompress to an `EdwardsPoint`.",2,[[["self"]],[[R[377]],[R[44],[R[377]]]]]],[11,R[382],E,"Construct a `CompressedEdwardsY` from a slice of bytes.",2,[[],[R[380]]]],[11,"to_montgomery",E,"Convert this `EdwardsPoint` on the Edwards model to the…",3,[[["self"]],[R[406]]]],[11,"compress",E,"Compress this point to `CompressedEdwardsY` format.",3,[[["self"]],[R[380]]]],[11,R[388],E,R[389],3,[[["scalar"],[R[377]]],[R[377]]]],[11,"create",E,"Create a table of precomputed multiples of `basepoint`.",4,[[[R[377]]],[R[410]]]],[11,R[390],E,"Get the basepoint for this table as an `EdwardsPoint`.",4,[[["self"]],[R[377]]]],[11,"mul_by_cofactor",E,"Multiply by the cofactor: return \\([8]P\\).",3,[[["self"]],[R[377]]]],[11,"is_small_order",E,"Determine if this point is of small order.",3,[[["self"]],["bool"]]],[11,"is_torsion_free",E,"Determine if this point is “torsion-free”, i.e., is…",3,[[["self"]],["bool"]]],[0,"ristretto",R[376],"An implementation of [Ristretto][ristretto_main], which…",N,N],[3,R[416],R[401],"A Ristretto point, in compressed wire format.",N,N],[12,"0",E,E,5,N],[3,R[417],E,"A `RistrettoPoint` represents a point in the Ristretto…",N,N],[3,R[424],E,R[381],N,N],[3,R[418],E,"A precomputed table of multiples of a basepoint, used to…",N,N],[11,R[379],E,"Copy the bytes of this `CompressedRistretto`.",5,[[["self"]]]],[11,R[378],E,"View this `CompressedRistretto` as an array of bytes.",5,[[["self"]]]],[11,R[382],E,"Construct a `CompressedRistretto` from a slice of bytes.",5,[[],[R[385]]]],[11,R[383],E,"Attempt to decompress to an `RistrettoPoint`.",5,[[["self"]],[[R[44],[R[384]]],[R[384]]]]],[11,"compress",E,"Compress this point using the Ristretto encoding.",6,[[["self"]],[R[385]]]],[11,"double_and_compress_batch",E,"Double-and-compress a batch of points. The Ristretto…",6,[[["i"]],[["vec",[R[385]]],[R[385]]]]],[11,"random",E,"Return a `RistrettoPoint` chosen uniformly at random using…",6,[[["r"]],["self"]]],[11,R[386],E,"Hash a slice of bytes into a `RistrettoPoint`.",6,[[],[R[384]]]],[11,R[387],E,"Construct a `RistrettoPoint` from an existing `Digest`…",6,[[["d"]],[R[384]]]],[11,"from_uniform_bytes",E,"Construct a `RistrettoPoint` from 64 bytes of data.",6,[[],[R[384]]]],[11,R[388],E,R[389],6,[[["scalar"],[R[384]]],[R[384]]]],[11,"create",E,"Create a precomputed table of multiples of the given…",7,[[[R[384]]],[R[411]]]],[11,R[390],E,"Get the basepoint for this table as a `RistrettoPoint`.",7,[[["self"]],[R[384]]]],[0,"constants",R[376],"Various constants, such as the Ristretto and Ed25519…",N,N],[17,"ED25519_BASEPOINT_POINT","curve25519_dalek::constants","The Ed25519 basepoint, as an `EdwardsPoint`.",N,N],[17,"EIGHT_TORSION",E,"The 8-torsion subgroup \\(\\mathcal E [8]\\).",N,N],[17,"ED25519_BASEPOINT_COMPRESSED",E,"The Ed25519 basepoint, in `CompressedEdwardsY` format.",N,N],[17,"X25519_BASEPOINT",E,"The X25519 basepoint, in `MontgomeryPoint` format.",N,N],[17,"RISTRETTO_BASEPOINT_COMPRESSED",E,"The Ristretto basepoint, in `CompressedRistretto` format.",N,N],[17,"RISTRETTO_BASEPOINT_POINT",E,"The Ristretto basepoint, as a `RistrettoPoint`.",N,N],[17,"BASEPOINT_ORDER",E,"`BASEPOINT_ORDER` is the order of the Ristretto group and…",N,N],[17,"ED25519_BASEPOINT_TABLE",E,"Table containing precomputed multiples of the Ed25519…",N,N],[17,"RISTRETTO_BASEPOINT_TABLE",E,"The Ristretto basepoint, as a `RistrettoBasepointTable`…",N,N],[0,"traits",R[376],"Module for common traits.",N,N],[8,"Identity","curve25519_dalek::traits","Trait for getting the identity element of a point type.",N,N],[10,R[402],E,"Returns the identity element of the curve. Can be used as…",8,[[],["self"]]],[8,R[419],E,"Trait for testing if a curve point is equivalent to the…",N,N],[10,R[398],E,"Return true if this element is the identity element of the…",9,[[["self"]],["bool"]]],[8,R[420],E,"A trait for constant-time multiscalar multiplication…",N,N],[16,"Point",E,R[391],10,N],[10,R[403],E,"Given an iterator of (possibly secret) scalars and an…",10,[[["j"],["i"]]]],[8,R[421],E,"A trait for variable-time multiscalar multiplication…",N,N],[16,"Point",E,R[391],11,N],[10,R[404],E,R[392],11,[[["j"],["i"]],[R[44]]]],[11,R[393],E,R[392],11,[[["j"],["i"]]]],[8,R[422],E,"A trait for variable-time multiscalar multiplication with…",N,N],[16,"Point",E,"The type of point to be multiplied, e.g., `RistrettoPoint`.",12,N],[10,"new",E,"Given the static points \\( B_i \\), perform precomputation…",12,[[["i"]],["self"]]],[11,R[393],E,R[394],12,[[["self"],["i"]]]],[11,"vartime_mixed_multiscalar_mul",E,R[394],12,[[["j"],["self"],["i"],["k"]]]],[10,R[405],E,R[394],12,[[["j"],["self"],["i"],["k"]],[R[44]]]],[11,"from",R[395],E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[396],E,E,0,[[]]],[11,R[400],E,E,0,[[["self"],[R[48]]]]],[11,"from",R[397],E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,R[20],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[[T],["self"]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[396],E,E,1,[[]]],[11,R[398],R[399],E,2,[[["self"]],["bool"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,R[20],E,E,2,[[["self"]],[T]]],[11,R[21],E,E,2,[[[T],["self"]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[396],E,E,2,[[]]],[11,R[398],E,E,3,[[["self"]],["bool"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,R[20],E,E,3,[[["self"]],[T]]],[11,R[21],E,E,3,[[[T],["self"]]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[396],E,E,3,[[]]],[11,R[400],E,E,3,[[["self"],[R[48]]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[1],E,E,13,[[[U]],[R[0]]]],[11,"into",E,E,13,[[],[U]]],[11,R[2],E,E,13,[[],[R[0]]]],[11,R[3],E,E,13,[[["self"]],[T]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[R[6]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,"into",E,E,4,[[],[U]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,R[20],E,E,4,[[["self"]],[T]]],[11,R[21],E,E,4,[[[T],["self"]]]],[11,R[398],R[401],E,5,[[["self"]],["bool"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[1],E,E,5,[[[U]],[R[0]]]],[11,"into",E,E,5,[[],[U]]],[11,R[2],E,E,5,[[],[R[0]]]],[11,R[3],E,E,5,[[["self"]],[T]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[R[6]]]],[11,R[20],E,E,5,[[["self"]],[T]]],[11,R[21],E,E,5,[[[T],["self"]]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[396],E,E,5,[[]]],[11,R[398],E,E,6,[[["self"]],["bool"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[1],E,E,6,[[[U]],[R[0]]]],[11,"into",E,E,6,[[],[U]]],[11,R[2],E,E,6,[[],[R[0]]]],[11,R[3],E,E,6,[[["self"]],[T]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[R[6]]]],[11,R[20],E,E,6,[[["self"]],[T]]],[11,R[21],E,E,6,[[[T],["self"]]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[396],E,E,6,[[]]],[11,R[400],E,E,6,[[["self"],[R[48]]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[1],E,E,14,[[[U]],[R[0]]]],[11,"into",E,E,14,[[],[U]]],[11,R[2],E,E,14,[[],[R[0]]]],[11,R[3],E,E,14,[[["self"]],[T]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[R[6]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[1],E,E,7,[[[U]],[R[0]]]],[11,"into",E,E,7,[[],[U]]],[11,R[2],E,E,7,[[],[R[0]]]],[11,R[3],E,E,7,[[["self"]],[T]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[R[6]]]],[11,R[20],E,E,7,[[["self"]],[T]]],[11,R[21],E,E,7,[[[T],["self"]]]],[11,R[402],R[399],E,2,[[],[R[380]]]],[11,R[402],E,E,3,[[],[R[377]]]],[11,R[402],R[401],E,5,[[],[R[385]]]],[11,R[402],E,E,6,[[],[R[384]]]],[11,R[403],R[399],E,3,[[["j"],["i"]],[R[377]]]],[11,R[403],R[401],E,6,[[["j"],["i"]],[R[384]]]],[11,R[404],R[399],E,3,[[["j"],["i"]],[[R[377]],[R[44],[R[377]]]]]],[11,R[404],R[401],E,6,[[["j"],["i"]],[[R[44],[R[384]]],[R[384]]]]],[11,"new",R[399],E,13,[[["i"]],["self"]]],[11,R[405],E,E,13,[[["j"],["self"],["i"],["k"]],[R[44]]]],[11,"new",R[401],E,14,[[["i"]],["self"]]],[11,R[405],E,E,14,[[["j"],["self"],["i"],["k"]],[R[44]]]],[11,"eq",R[395],E,0,[[["self"]],["bool"]]],[11,"eq",R[397],E,1,[[["self"],[R[406]]],["bool"]]],[11,"eq",R[399],E,2,[[[R[380]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[380]],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[377]]],["bool"]]],[11,"eq",R[401],E,5,[[["self"],[R[385]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[385]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[384]]],["bool"]]],[11,"from",R[395],E,0,[[["u8"]],["scalar"]]],[11,"from",E,E,0,[[["u16"]],["scalar"]]],[11,"from",E,E,0,[[["u32"]],["scalar"]]],[11,"from",E,"Construct a scalar from the given `u64`.",0,[[["u64"]],["scalar"]]],[11,"from",E,E,0,[[["u128"]],["scalar"]]],[11,"fmt",E,E,0,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[397],E,1,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",R[399],E,2,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[401],E,5,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[32]]],[R[0]]]],[11,"add",R[395],E,0,[[["scalar"]],["scalar"]]],[11,"add",E,E,0,[[["scalar"]],["scalar"]]],[11,"add",R[399],E,3,[[[R[377]]],[R[377]]]],[11,"add",E,E,3,[[[R[377]]],[R[377]]]],[11,"add",R[401],E,6,[[[R[384]]],[R[384]]]],[11,"add",E,E,6,[[[R[384]]],[R[384]]]],[11,"sub",R[395],E,0,[[["scalar"]],["scalar"]]],[11,"sub",E,E,0,[[["scalar"]],["scalar"]]],[11,"sub",R[399],E,3,[[[R[377]]],[R[377]]]],[11,"sub",E,E,3,[[[R[377]]],[R[377]]]],[11,"sub",R[401],E,6,[[[R[384]]],[R[384]]]],[11,"sub",E,E,6,[[[R[384]]],[R[384]]]],[11,"mul",R[395],E,0,[[["scalar"]],["scalar"]]],[11,"mul",E,E,0,[[["scalar"]],["scalar"]]],[11,"mul",R[397],E,1,[[["scalar"]],[R[406]]]],[11,"mul",E,E,1,[[["scalar"]],[R[406]]]],[11,"mul",R[395],E,0,[[[R[406]]],[R[406]]]],[11,"mul",E,E,0,[[[R[406]]],[R[406]]]],[11,"mul",R[399],E,3,[[["scalar"]],[R[377]]]],[11,"mul",E,E,3,[[["scalar"]],[R[377]]]],[11,"mul",R[395],E,0,[[[R[377]]],[R[377]]]],[11,"mul",E,E,0,[[[R[377]]],[R[377]]]],[11,"mul",R[401],E,6,[[["scalar"]],[R[384]]]],[11,"mul",E,E,6,[[["scalar"]],[R[384]]]],[11,"mul",R[395],E,0,[[[R[384]]],[R[384]]]],[11,"mul",E,E,0,[[[R[384]]],[R[384]]]],[11,"neg",E,E,0,[[],["scalar"]]],[11,"neg",R[399],E,3,[[],[R[377]]]],[11,"neg",R[401],E,6,[[],[R[384]]]],[11,R[407],R[395],E,0,[[["self"],["scalar"]]]],[11,R[407],E,E,0,[[["self"],["scalar"]]]],[11,R[407],R[399],E,3,[[["self"],[R[377]]]]],[11,R[407],E,E,3,[[["self"],[R[377]]]]],[11,R[407],R[401],E,6,[[["self"],[R[384]]]]],[11,R[407],E,E,6,[[["self"],[R[384]]]]],[11,R[408],R[395],E,0,[[["self"],["scalar"]]]],[11,R[408],E,E,0,[[["self"],["scalar"]]]],[11,R[408],R[399],E,3,[[["self"],[R[377]]]]],[11,R[408],E,E,3,[[["self"],[R[377]]]]],[11,R[408],R[401],E,6,[[["self"],[R[384]]]]],[11,R[408],E,E,6,[[["self"],[R[384]]]]],[11,R[409],R[395],E,0,[[["self"],["scalar"]]]],[11,R[409],E,E,0,[[["self"],["scalar"]]]],[11,R[409],R[397],E,1,[[["self"],["scalar"]]]],[11,R[409],E,E,1,[[["self"],["scalar"]]]],[11,R[409],R[399],E,3,[[["self"],["scalar"]]]],[11,R[409],E,E,3,[[["self"],["scalar"]]]],[11,R[409],R[401],E,6,[[["self"],["scalar"]]]],[11,R[409],E,E,6,[[["self"],["scalar"]]]],[11,"index",R[395],"Index the bytes of the representative for this `Scalar`.…",0,[[["self"],["usize"]],["u8"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",R[399],E,3,[[["i"]],["self"]]],[11,"sum",R[401],E,6,[[["i"]],["self"]]],[11,"product",R[395],E,0,[[["i"]],["self"]]],[11,"clone",E,E,0,[[["self"]],["scalar"]]],[11,"clone",R[397],E,1,[[["self"]],[R[406]]]],[11,"clone",R[399],E,2,[[["self"]],[R[380]]]],[11,"clone",E,E,3,[[["self"]],[R[377]]]],[11,"clone",E,E,4,[[["self"]],[R[410]]]],[11,"clone",R[401],E,5,[[["self"]],[R[385]]]],[11,"clone",E,E,6,[[["self"]],[R[384]]]],[11,"clone",E,E,7,[[["self"]],[R[411]]]],[11,R[128],R[395],E,0,[[],["scalar"]]],[11,R[128],R[397],E,1,[[],[R[406]]]],[11,R[128],R[399],E,2,[[],[R[380]]]],[11,R[128],E,E,3,[[],[R[377]]]],[11,R[128],R[401],E,5,[[],[R[385]]]],[11,R[128],E,E,6,[[],[R[384]]]],[11,"ct_eq",R[395],E,0,[[["self"]],[R[48]]]],[11,"ct_eq",R[397],E,1,[[["self"],[R[406]]],[R[48]]]],[11,"ct_eq",R[399],E,2,[[[R[380]],["self"]],[R[48]]]],[11,"ct_eq",E,E,3,[[["self"],[R[377]]],[R[48]]]],[11,"ct_eq",R[401],E,5,[[["self"],[R[385]]],[R[48]]]],[11,"ct_eq",E,"Test equality between two `RistrettoPoint`s.",6,[[["self"],[R[384]]],[R[48]]]],[11,R[52],R[395],E,0,[[["self"],[R[48]]],["self"]]],[11,R[52],R[399],E,3,[[[R[377]],[R[48]]],[R[377]]]],[11,R[52],R[401],"Conditionally select between `self` and `other`.",6,[[[R[384]],[R[48]]],[R[384]]]]],"p":[[3,"Scalar"],[3,R[412]],[3,R[413]],[3,R[414]],[3,R[415]],[3,R[416]],[3,R[417]],[3,R[418]],[8,"Identity"],[8,R[419]],[8,R[420]],[8,R[421]],[8,R[422]],[3,R[423]],[3,R[424]]]};
searchIndex["digest"]={"doc":"This crate provides traits which describe funcionality of…","i":[[3,R[247],"digest","The error type for variable hasher initialization",N,N],[8,"Digest",E,R[367],N,N],[16,R[237],E,E,0,N],[10,"new",E,R[368],0,[[],["self"]]],[10,"input",E,R[231],0,[[["self"],["asref"]]]],[10,"chain",E,R[236],0,[[["asref"]],["self"]]],[10,R[0],E,R[238],0,[[],[[R[213],["u8"]],["u8"]]]],[10,R[232],E,R[369],0,[[["self"]],[[R[213],["u8"]],["u8"]]]],[10,"reset",E,R[233],0,[[["self"]]]],[10,R[234],E,R[235],0,[[],["usize"]]],[10,"digest",E,R[370],0,[[],[[R[213],["u8"]],["u8"]]]],[8,R[241],E,"The `DynDigest` trait is a modification of `Digest` trait…",N,N],[10,"input",E,R[231],1,[[["self"]]]],[10,R[232],E,R[371],1,[[["self"]],["box"]]],[10,R[0],E,R[372],1,[[["box"]],["box"]]],[10,"reset",E,R[233],1,[[["self"]]]],[10,R[234],E,R[235],1,[[["self"]],["usize"]]],[8,"Input",E,"Trait for processing input data",N,N],[10,"input",E,R[231],2,[[["self"],["asref"]]]],[11,"chain",E,R[236],2,[[["asref"]],["self"]]],[8,R[242],E,"Trait to indicate that digest function processes data in…",N,N],[16,"BlockSize",E,E,3,N],[8,R[243],E,"Trait for returning digest result with the fixed size",N,N],[16,R[237],E,E,4,N],[10,R[373],E,R[238],4,[[],[[R[213],["u8"]],["u8"]]]],[8,R[244],E,"Trait for returning digest result with the varaible size",N,N],[10,"new",E,"Create new hasher instance with the given output size.",5,[[["usize"]],[[R[0],[R[239]]],[R[239]]]]],[10,R[234],E,"Get output size of the hasher instance provided to the…",5,[[["self"]],["usize"]]],[10,"variable_result",E,"Retrieve result via closure and consume hasher.",5,[[["fnonce"]]]],[11,R[240],E,"Retrieve result into vector and consume hasher.",5,[[],[["vec",["u8"]],["u8"]]]],[8,R[245],E,"Trait for decribing readers which are used to extract…",N,N],[10,"read",E,"Read output into the `buffer`. Can be called unlimited…",6,[[["self"]]]],[8,R[246],E,"Trait which describes extendable-output functions (XOF).",N,N],[16,"Reader",E,E,7,N],[10,"xof_result",E,"Retrieve XOF reader and consume hasher instance.",7,[[]]],[11,R[240],E,"Retrieve result into vector of specified length.",7,[[["usize"]],[["vec",["u8"]],["u8"]]]],[8,"Reset",E,"Trait for resetting hash instances",N,N],[10,"reset",E,"Reset hasher instance to its initial state and return…",8,[[["self"]]]],[14,"impl_write",E,"Implements `std::io::Write` trait for implementator of…",N,N],[11,"from",E,E,9,[[[T]],[T]]],[11,R[1],E,E,9,[[[U]],[R[0]]]],[11,"into",E,E,9,[[],[U]]],[11,R[2],E,E,9,[[],[R[0]]]],[11,R[3],E,E,9,[[["self"]],[T]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[R[6]]]],[11,R[20],E,E,9,[[["self"]],[T]]],[11,R[21],E,E,9,[[[T],["self"]]]],[11,R[66],E,E,9,[[["self"]],["string"]]],[11,"fmt",E,E,9,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,9,[[[R[32]],["self"]],[R[0]]]],[11,"clone",E,E,9,[[["self"]],[R[239]]]],[11,R[128],E,E,9,[[],[R[239]]]],[11,R[33],E,E,9,[[["self"]],["str"]]]],"p":[[8,"Digest"],[8,R[241]],[8,"Input"],[8,R[242]],[8,R[243]],[8,R[244]],[8,R[245]],[8,R[246]],[8,"Reset"],[3,R[247]]]};
searchIndex["ed25519_dalek"]={"doc":"A Rust implementation of ed25519 key generation, signing,…","i":[[3,"Sha512","ed25519_dalek",R[435],N,N],[8,"Digest",E,R[367],N,N],[16,R[237],E,E,0,N],[10,"new",E,R[368],0,[[],["self"]]],[10,"input",E,R[231],0,[[["self"],["b"]]]],[10,"chain",E,R[236],0,[[["b"]],["self"]]],[10,R[0],E,R[238],0,[[],[[R[213],["u8"]],["u8"]]]],[10,R[232],E,R[369],0,[[["self"]],[[R[213],["u8"]],["u8"]]]],[10,"reset",E,R[233],0,[[["self"]]]],[10,R[234],E,R[235],0,[[],["usize"]]],[10,"digest",E,R[370],0,[[],[[R[213],["u8"]],["u8"]]]],[3,"Sha512",E,R[435],N,N],[3,R[448],E,"Errors which may occur while processing signatures and…",N,N],[3,R[431],E,"An ed25519 public key.",N,N],[3,R[445],E,"An EdDSA secret key.",N,N],[3,R[446],E,"An \"expanded\" secret key.",N,N],[3,R[447],E,"An ed25519 signature.",N,N],[3,"Keypair",E,"An ed25519 keypair.",N,N],[12,"secret",E,"The secret half of this keypair.",1,N],[12,"public",E,"The public half of this keypair.",1,N],[5,"verify_batch",E,"Verify a batch of `signatures` on `messages` with their…",N,[[],[[R[0],[R[436]]],[R[436]]]]],[11,R[379],E,"Convert this keypair to bytes.",1,[[["self"]]]],[11,R[438],E,"Construct a `Keypair` from the bytes of a `PublicKey` and…",1,[[],[["keypair"],[R[436]],[R[0],["keypair",R[436]]]]]],[11,R[195],E,"Generate an ed25519 keypair.",1,[[["r"]],["keypair"]]],[11,"sign",E,"Sign a message with this keypair's secret key.",1,[[["self"]],[R[437]]]],[11,R[444],E,"Sign a `prehashed_message` with this `Keypair` using the…",1,[[[R[44]],["self"],["d"]],[R[437]]]],[11,"verify",E,R[439],1,[[["self"],[R[437]]],[[R[0],[R[436]]],[R[436]]]]],[11,R[440],E,R[441],1,[[[R[437]],["self"],["d"],[R[44]]],[[R[0],[R[436]]],[R[436]]]]],[11,R[379],E,"Convert this public key to a byte array.",2,[[["self"]]]],[11,R[378],E,R[449],2,[[["self"]]]],[11,R[438],E,"Construct a `PublicKey` from a slice of bytes.",2,[[],[[R[428]],[R[0],[R[428],R[436]]],[R[436]]]]],[11,"verify",E,R[439],2,[[["self"],[R[437]]],[[R[0],[R[436]]],[R[436]]]]],[11,R[440],E,R[441],2,[[[R[437]],["self"],["d"],[R[44]]],[[R[0],[R[436]]],[R[436]]]]],[11,R[379],E,"Convert this secret key to a byte array.",3,[[["self"]]]],[11,R[378],E,"View this secret key as a byte array.",3,[[["self"]]]],[11,R[438],E,"Construct a `SecretKey` from a slice of bytes.",3,[[],[[R[0],[R[442],R[436]]],[R[442]],[R[436]]]]],[11,R[195],E,"Generate a `SecretKey` from a `csprng`.",3,[[[T]],[R[442]]]],[11,R[379],E,"Convert this `ExpandedSecretKey` into an array of 64 bytes.",4,[[["self"]]]],[11,R[438],E,"Construct an `ExpandedSecretKey` from a slice of bytes.",4,[[],[[R[443]],[R[436]],[R[0],[R[443],R[436]]]]]],[11,"sign",E,"Sign a message with this `ExpandedSecretKey`.",4,[[[R[428]],["self"]],[R[437]]]],[11,R[444],E,"Sign a `prehashed_message` with this `ExpandedSecretKey`…",4,[[[R[44]],["self"],["d"],[R[428]]],[R[437]]]],[11,R[379],E,"Convert this `Signature` to a byte array.",5,[[["self"]]]],[11,R[438],E,"Construct a `Signature` from a slice of bytes.",5,[[],[[R[0],[R[437],R[436]]],[R[436]],[R[437]]]]],[17,"SIGNATURE_LENGTH",E,"The length of a ed25519 `Signature`, in bytes.",N,N],[17,"SECRET_KEY_LENGTH",E,"The length of a ed25519 `SecretKey`, in bytes.",N,N],[17,"PUBLIC_KEY_LENGTH",E,"The length of an ed25519 `PublicKey`, in bytes.",N,N],[17,"KEYPAIR_LENGTH",E,"The length of an ed25519 `Keypair`, in bytes.",N,N],[17,"EXPANDED_SECRET_KEY_LENGTH",E,"The length of an \"expanded\" ed25519 key,…",N,N],[11,"from",E,E,6,[[[T]],[T]]],[11,R[1],E,E,6,[[[U]],[R[0]]]],[11,"into",E,E,6,[[],[U]]],[11,R[2],E,E,6,[[],[R[0]]]],[11,R[3],E,E,6,[[["self"]],[T]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[R[6]]]],[11,R[20],E,E,6,[[["self"]],[T]]],[11,R[21],E,E,6,[[[T],["self"]]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[396],E,E,6,[[]]],[11,"new",E,E,6,[[],["d"]]],[11,"input",E,E,6,[[["self"],["b"]]]],[11,"chain",E,E,6,[[["b"]],["d"]]],[11,R[0],E,E,6,[[],[["u8"],[R[213],["u8"]]]]],[11,R[232],E,E,6,[[["self"]],[["u8"],[R[213],["u8"]]]]],[11,"reset",E,E,6,[[["self"]]]],[11,R[234],E,E,6,[[],["usize"]]],[11,"digest",E,E,6,[[],[["u8"],[R[213],["u8"]]]]],[11,"input",E,R[231],6,[[["self"]]]],[11,R[232],E,R[371],6,[[["self"]],["box"]]],[11,R[0],E,R[372],6,[[["box"]],["box"]]],[11,"reset",E,E,6,[[["self"]]]],[11,R[234],E,R[235],6,[[["self"]],["usize"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[1],E,E,7,[[[U]],[R[0]]]],[11,"into",E,E,7,[[],[U]]],[11,R[2],E,E,7,[[],[R[0]]]],[11,R[3],E,E,7,[[["self"]],[T]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[R[6]]]],[11,R[20],E,E,7,[[["self"]],[T]]],[11,R[21],E,E,7,[[[T],["self"]]]],[11,R[66],E,E,7,[[["self"]],["string"]]],[11,"as_fail",E,E,7,[[["self"]],["fail"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,R[20],E,E,2,[[["self"]],[T]]],[11,R[21],E,E,2,[[[T],["self"]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[396],E,E,2,[[]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[396],E,E,3,[[]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,"into",E,E,4,[[],[U]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[396],E,E,4,[[]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[1],E,E,5,[[[U]],[R[0]]]],[11,"into",E,E,5,[[],[U]]],[11,R[2],E,E,5,[[],[R[0]]]],[11,R[3],E,E,5,[[["self"]],[T]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[R[6]]]],[11,R[20],E,E,5,[[["self"]],[T]]],[11,R[21],E,E,5,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[396],E,E,1,[[]]],[11,R[128],E,E,6,[[],["sha512"]]],[11,R[373],E,E,6,[[],[[R[213],["u8"]],["u8"]]]],[11,"reset",E,E,6,[[["self"]]]],[11,"fmt",E,E,6,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"clone",E,E,6,[[["self"]],["sha512"]]],[11,"write",E,E,6,[[["self"]],[[R[0],["usize","error"]],["usize"],["error"]]]],[11,"flush",E,E,6,[[["self"]],[["error"],[R[0],["error"]]]]],[11,"input",E,E,6,[[["self"],["b"]]]],[11,"eq",E,E,7,[[["self"],[R[436]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[436]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[428]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[428]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[437]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[437]]],["bool"]]],[11,"from",E,"Derive this public key from its corresponding `SecretKey`.",2,[[[R[442]]],[R[428]]]],[11,"from",E,"Derive this public key from its corresponding…",2,[[[R[443]]],[R[428]]]],[11,"from",E,"Construct an `ExpandedSecretKey` from a `SecretKey`.",4,[[[R[442]]],[R[443]]]],[11,"fmt",E,E,7,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,1,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,7,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[32]]],[R[0]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"as_ref",E,E,2,[[["self"]]]],[11,"as_ref",E,E,3,[[["self"]]]],[11,"clone",E,E,7,[[["self"]],[R[436]]]],[11,"clone",E,E,2,[[["self"]],[R[428]]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,R[128],E,E,1,[[],["keypair"]]],[11,R[128],E,E,2,[[],[R[428]]]],[11,R[128],E,E,3,[[],[R[442]]]],[11,R[128],E,E,4,[[],[R[443]]]],[11,"cause",E,E,7,[[["self"]],[["fail"],[R[44],["fail"]]]]]],"p":[[8,"Digest"],[3,"Keypair"],[3,R[431]],[3,R[445]],[3,R[446]],[3,R[447]],[3,"Sha512"],[3,R[448]]]};
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style…","i":[[3,R[45],"failure","A `Backtrace`.",N,N],[3,"Compat",E,"A compatibility wrapper around an error type from this…",N,N],[3,"Context",E,"An error with context around it.",N,N],[3,"Causes",E,"A iterator over the causes of a `Fail`",N,N],[11,"new",E,"Constructs a new backtrace. This will only create a real…",0,[[],[R[41]]]],[11,"into_inner",E,"Unwraps this into the inner error.",1,[[],["e"]]],[11,"get_ref",E,"Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new",E,"Creates a new context without an underlying error message.",2,[[["d"]],[R[40]]]],[11,"get_context",E,"Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map",E,"Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["f"]],[R[40]]]],[8,"AsFail",E,"The `AsFail` trait",N,N],[10,"as_fail",E,"Converts a reference to `Self` into a dynamic trait object…",3,[[["self"]],["fail"]]],[8,R[46],E,"Extension methods for `Result`.",N,N],[10,R[42],E,"Wraps the error in `Compat` to make it compatible with…",4,[[],[[R[0],[R[42]]],[R[42]]]]],[10,R[40],E,"Wraps the error type in a context type.",4,[[["d"]],[[R[0],[R[40]]],[R[40]]]]],[10,"with_context",E,"Wraps the error type in a context type generated by…",4,[[["f"]],[[R[0],[R[40]]],[R[40]]]]],[8,"Fail",E,"The `Fail` trait.",N,N],[11,"name",E,"Returns the \"name\" of the error.",5,[[["self"]],[[R[44],["str"]],["str"]]]],[11,"cause",E,"Returns a reference to the underlying cause of this…",5,[[["self"]],[["fail"],[R[44],["fail"]]]]],[11,R[41],E,"Returns a reference to the `Backtrace` carried by this…",5,[[["self"]],[[R[41]],[R[44],[R[41]]]]]],[11,R[40],E,"Provides context for this failure.",5,[[["d"]],[R[40]]]],[11,R[42],E,"Wraps this failure in a compatibility wrapper that…",5,[[],[R[42]]]],[11,"downcast_ref",E,R[43],5,[[["self"]],[[R[44]],[T]]]],[11,"downcast_mut",E,R[43],5,[[["self"]],[[T],[R[44]]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this `Fail` - the last value…",5,[[["self"]],["fail"]]],[11,"iter_causes",E,"Returns a iterator over the causes of this `Fail` with the…",5,[[["self"]],["causes"]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",5,[[["self"]],["causes"]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",5,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_chain`.",5,[[["self"]],["causes"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[1],E,E,6,[[[U]],[R[0]]]],[11,R[214],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,R[2],E,E,6,[[],[R[0]]]],[11,R[3],E,E,6,[[["self"]],[T]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[R[6]]]],[11,"as_fail",E,E,5,[[["self"]],["fail"]]],[11,"eq",E,E,1,[[["self"],[R[42]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[42]]],["bool"]]],[11,"from",E,E,2,[[["d"]],[R[40]]]],[11,"fmt",E,E,0,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,1,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[32]]],[R[0]]]],[11,"hash",E,E,1,[[["self"],["__he"]]]],[11,"next",E,E,6,[[["self"]],[[R[44],["fail"]],["fail"]]]],[11,"clone",E,E,1,[[["self"]],[R[42]]]],[11,R[128],E,E,0,[[],[R[41]]]],[11,R[128],E,E,1,[[],[R[42]]]]],"p":[[3,R[45]],[3,"Compat"],[3,"Context"],[8,"AsFail"],[8,R[46]],[8,"Fail"],[3,"Causes"]]};
searchIndex["fake_simd"]={"doc":E,"i":[[3,R[7],"fake_simd",E,N,N],[12,"0",E,E,0,N],[12,"1",E,E,0,N],[12,"2",E,E,0,N],[12,"3",E,E,0,N],[3,R[8],E,E,N,N],[12,"0",E,E,1,N],[12,"1",E,E,1,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"eq",E,E,0,[[["self"],[R[7]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[7]]],["bool"]]],[11,"add",E,E,0,[[[R[7]]],[R[7]]]],[11,"add",E,E,1,[[[R[8]]],[R[8]]]],[11,"sub",E,E,0,[[[R[7]]],[R[7]]]],[11,"bitand",E,E,0,[[[R[7]]],[R[7]]]],[11,"bitor",E,E,0,[[[R[7]]],[R[7]]]],[11,"bitxor",E,E,0,[[[R[7]]],[R[7]]]],[11,"shl",E,E,0,[[["usize"]],[R[7]]]],[11,"shl",E,E,0,[[[R[7]]],[R[7]]]],[11,"shr",E,E,0,[[["usize"]],[R[7]]]],[11,"shr",E,E,0,[[[R[7]]],[R[7]]]],[11,"clone",E,E,0,[[["self"]],[R[7]]]],[11,"clone",E,E,1,[[["self"]],[R[8]]]]],"p":[[3,R[7]],[3,R[8]]]};
searchIndex["generic_array"]={"doc":"This crate implements a structure that can be used as a…","i":[[3,R[224],R[210],"Struct representing a generic array - `GenericArray<T, N>`…",N,N],[0,"arr",E,"Implementation for `arr!` macro.",N,N],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",N,N],[8,R[218],E,"Helper trait for `arr!` macro",N,N],[16,"Output",E,"Resulting length",0,N],[0,"functional",R[210],"Functional programming with generic sequences",N,N],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",N,N],[8,R[219],E,"Defines the relationship between one generic sequence and…",N,N],[16,"Mapped",E,"Mapped sequence type",1,N],[8,R[220],E,"Defines functional programming methods for generic sequences",N,N],[11,"map",E,"Maps a `GenericSequence` to another `GenericSequence`.",2,[[["f"]],[R[211]]]],[11,"zip",E,"Combines two `GenericSequence` instances and iterates…",2,[[["rhs"],["f"]],[R[211]]]],[11,"fold",E,"Folds (or reduces) a sequence of data into a single value.",2,[[[U],["f"]],[U]]],[0,"iter",R[210],"`GenericArray` iterator implementation.",N,N],[3,R[221],R[215],"An iterator that moves out of a `GenericArray`",N,N],[11,"as_slice",E,"Returns the remaining items of this iterator as a slice",3,[[["self"]]]],[11,R[212],E,"Returns the remaining items of this iterator as a mutable…",3,[[["self"]]]],[0,"sequence",R[210],"Useful traits for manipulating sequences of data stored in…",N,N],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",N,N],[8,R[222],E,"Defines some sequence with an associated length and…",N,N],[16,"Length",E,"`GenericArray` associated length",4,N],[16,"Sequence",E,"Concrete sequence type used in conjuction with reference…",4,N],[10,R[195],E,"Initializes a new sequence instance using the given…",4,[[["f"]]]],[8,"Lengthen",E,"Defines any `GenericSequence` which can be lengthened or…",N,N],[16,"Longer",E,"`GenericSequence` that has one more element than `Self`",5,N],[10,"append",E,"Returns a new array with the given element appended to the…",5,[[[T]]]],[10,"prepend",E,"Returns a new array with the given element prepended to…",5,[[[T]]]],[8,"Shorten",E,"Defines a `GenericSequence` which can be shortened by…",N,N],[16,"Shorter",E,"`GenericSequence` that has one less element than `Self`",6,N],[10,"pop_back",E,"Returns a new array without the last element, and the last…",6,[[]]],[10,R[216],E,"Returns a new array without the first element, and the…",6,[[]]],[8,"Split",E,"Defines a `GenericSequence` that can be split into two…",N,N],[16,"First",E,"First part of the resulting split array",7,N],[16,"Second",E,"Second part of the resulting split array",7,N],[10,"split",E,"Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat",E,"Defines `GenericSequence`s which can be joined together,…",N,N],[16,"Rest",E,"Sequence to be concatenated with `self`",8,N],[16,"Output",E,"Resulting sequence formed by the concatenation.",8,N],[10,"concat",E,"Concatenate, or join, two sequences.",8,[[]]],[8,R[223],R[210],"Trait making `GenericArray` work, marking types to be used…",N,N],[16,"ArrayType",E,"Associated type representing the array type for the number",9,N],[11,"as_slice",E,"Extracts a slice containing the entire array.",10,[[["self"]]]],[11,R[212],E,"Extracts a mutable slice containing the entire array.",10,[[["self"]]]],[11,R[382],E,"Converts slice to a generic array reference with inferred…",10,[[],[R[213]]]],[11,"from_mut_slice",E,"Converts mutable slice to a mutable generic array reference",10,[[],[R[213]]]],[11,"clone_from_slice",E,"Construct a `GenericArray` from a slice by cloning its…",10,[[],[R[213]]]],[11,"from_exact_iter",E,"Creates a new `GenericArray` instance from an iterator…",10,[[["i"]],[R[44]]]],[14,"arr",E,"Macro allowing for easy generation of Generic Arrays.…",N,N],[11,"from",E,E,10,[[[T]],[T]]],[11,R[1],E,E,10,[[[U]],[R[0]]]],[11,R[214],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[2],E,E,10,[[],[R[0]]]],[11,R[3],E,E,10,[[["self"]],[T]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[R[6]]]],[11,"from",R[215],E,3,[[[T]],[T]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,R[214],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,"map",R[210],E,10,[[["f"]],[R[211]]]],[11,"zip",E,E,10,[[["rhs"],["f"]],[R[211]]]],[11,"fold",E,E,10,[[[U],["f"]],[U]]],[11,R[195],E,E,10,[[["f"]],[R[213]]]],[11,"append",E,E,10,[[[T]]]],[11,"prepend",E,E,10,[[[T]]]],[11,"pop_back",E,E,10,[[]]],[11,R[216],E,E,10,[[]]],[11,"split",E,E,10,[[]]],[11,"concat",E,E,10,[[]]],[11,"eq",E,E,10,[[["self"]],["bool"]]],[11,"cmp",E,E,10,[[["self"],[R[213]]],[R[101]]]],[11,R[102],E,E,10,[[["self"],[R[213]]],[[R[44],[R[101]]],[R[101]]]]],[11,R[217],E,E,10,[[["self"]]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"fmt",E,E,10,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[215],E,3,[[["self"],[R[32]]],[R[0]]]],[11,"deref",R[210],E,10,[[["self"]]]],[11,"drop",R[215],E,3,[[["self"]]]],[11,"hash",R[210],E,10,[[["self"],["h"]]]],[11,"len",R[215],E,3,[[["self"]],["usize"]]],[11,"next_back",E,E,3,[[["self"]],[R[44]]]],[11,R[214],R[210],E,10,[[]]],[11,"from_iter",E,E,10,[[["i"]],[R[213]]]],[11,"next",R[215],E,3,[[["self"]],[R[44]]]],[11,R[281],E,E,3,[[["self"]]]],[11,"count",E,E,3,[[],["usize"]]],[11,"nth",E,E,3,[[["self"],["usize"]],[R[44]]]],[11,"last",E,E,3,[[],[R[44]]]],[11,"as_ref",R[210],E,10,[[["self"]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"fmt",E,E,10,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[32]]],[R[0]]]],[11,"clone",E,E,10,[[["self"]],[R[213]]]],[11,"clone",R[215],E,3,[[["self"]],["self"]]],[11,R[128],R[210],E,10,[[],["self"]]],[11,R[3],E,E,10,[[["self"]]]],[11,R[4],E,E,10,[[["self"]]]]],"p":[[8,R[218]],[8,R[219]],[8,R[220]],[3,R[221]],[8,R[222]],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,R[223]],[3,R[224]]]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[173],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[140],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[141],E,E,N,N],[12,"it_interval",E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[174],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,R[175],E,E,N,N],[12,"sa_len",E,E,17,N],[12,"sa_family",E,E,17,N],[12,"sa_data",E,E,17,N],[3,R[142],E,E,N,N],[12,"sin6_len",E,E,18,N],[12,"sin6_family",E,E,18,N],[12,"sin6_port",E,E,18,N],[12,"sin6_flowinfo",E,E,18,N],[12,"sin6_addr",E,E,18,N],[12,"sin6_scope_id",E,E,18,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,19,N],[12,"pw_passwd",E,E,19,N],[12,"pw_uid",E,E,19,N],[12,"pw_gid",E,E,19,N],[12,"pw_change",E,E,19,N],[12,"pw_class",E,E,19,N],[12,"pw_gecos",E,E,19,N],[12,"pw_dir",E,E,19,N],[12,"pw_shell",E,E,19,N],[12,"pw_expire",E,E,19,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,20,N],[12,"ifa_name",E,E,20,N],[12,"ifa_flags",E,E,20,N],[12,"ifa_addr",E,E,20,N],[12,"ifa_netmask",E,E,20,N],[12,"ifa_dstaddr",E,E,20,N],[12,"ifa_data",E,E,20,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,21,N],[12,"tm_min",E,E,21,N],[12,"tm_hour",E,E,21,N],[12,"tm_mday",E,E,21,N],[12,"tm_mon",E,E,21,N],[12,"tm_year",E,E,21,N],[12,"tm_wday",E,E,21,N],[12,"tm_yday",E,E,21,N],[12,"tm_isdst",E,E,21,N],[12,"tm_gmtoff",E,E,21,N],[12,"tm_zone",E,E,21,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,22,N],[12,"msg_namelen",E,E,22,N],[12,"msg_iov",E,E,22,N],[12,"msg_iovlen",E,E,22,N],[12,"msg_control",E,E,22,N],[12,"msg_controllen",E,E,22,N],[12,"msg_flags",E,E,22,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,23,N],[12,"cmsg_level",E,E,23,N],[12,"cmsg_type",E,E,23,N],[3,"fsid_t",E,E,N,N],[3,R[138],E,E,N,N],[12,"if_index",E,E,24,N],[12,"if_name",E,E,24,N],[3,R[143],E,E,N,N],[12,"sun_len",E,E,25,N],[12,"sun_family",E,E,25,N],[12,"sun_path",E,E,25,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,26,N],[12,"nodename",E,E,26,N],[12,"release",E,E,26,N],[12,"version",E,E,26,N],[12,"machine",E,E,26,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,27,N],[12,"imr_interface",E,E,27,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,28,N],[12,"aio_offset",E,E,28,N],[12,"aio_buf",E,E,28,N],[12,"aio_nbytes",E,E,28,N],[12,"aio_reqprio",E,E,28,N],[12,"aio_sigevent",E,E,28,N],[12,"aio_lio_opcode",E,E,28,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,29,N],[12,"gl_offs",E,E,29,N],[12,"gl_pathv",E,E,29,N],[3,R[176],E,E,N,N],[12,"ai_flags",E,E,30,N],[12,"ai_family",E,E,30,N],[12,"ai_socktype",E,E,30,N],[12,"ai_protocol",E,E,30,N],[12,"ai_addrlen",E,E,30,N],[12,"ai_canonname",E,E,30,N],[12,"ai_addr",E,E,30,N],[12,"ai_next",E,E,30,N],[3,R[139],E,E,N,N],[12,"numer",E,E,31,N],[12,"denom",E,E,31,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,32,N],[12,"st_mode",E,E,32,N],[12,"st_nlink",E,E,32,N],[12,"st_ino",E,E,32,N],[12,"st_uid",E,E,32,N],[12,"st_gid",E,E,32,N],[12,"st_rdev",E,E,32,N],[12,"st_atime",E,E,32,N],[12,"st_atime_nsec",E,E,32,N],[12,"st_mtime",E,E,32,N],[12,"st_mtime_nsec",E,E,32,N],[12,"st_ctime",E,E,32,N],[12,"st_ctime_nsec",E,E,32,N],[12,"st_birthtime",E,E,32,N],[12,"st_birthtime_nsec",E,E,32,N],[12,"st_size",E,E,32,N],[12,"st_blocks",E,E,32,N],[12,"st_blksize",E,E,32,N],[12,"st_flags",E,E,32,N],[12,"st_gen",E,E,32,N],[12,"st_lspare",E,E,32,N],[12,"st_qspare",E,E,32,N],[3,R[144],E,E,N,N],[3,R[145],E,E,N,N],[3,R[146],E,E,N,N],[3,R[147],E,E,N,N],[12,"si_signo",E,E,33,N],[12,"si_errno",E,E,33,N],[12,"si_code",E,E,33,N],[12,"si_pid",E,E,33,N],[12,"si_uid",E,E,33,N],[12,"si_status",E,E,33,N],[12,"si_addr",E,E,33,N],[3,R[137],E,E,N,N],[12,"sa_sigaction",E,E,34,N],[12,"sa_mask",E,E,34,N],[12,"sa_flags",E,E,34,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,35,N],[12,"ss_size",E,E,35,N],[12,"ss_flags",E,E,35,N],[3,R[177],E,E,N,N],[12,"fst_flags",E,E,36,N],[12,"fst_posmode",E,E,36,N],[12,"fst_offset",E,E,36,N],[12,"fst_length",E,E,36,N],[12,"fst_bytesalloc",E,E,36,N],[3,R[148],E,E,N,N],[12,"ra_offset",E,E,37,N],[12,"ra_count",E,E,37,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,38,N],[12,"f_frsize",E,E,38,N],[12,"f_blocks",E,E,38,N],[12,"f_bfree",E,E,38,N],[12,"f_bavail",E,E,38,N],[12,"f_files",E,E,38,N],[12,"f_ffree",E,E,38,N],[12,"f_favail",E,E,38,N],[12,"f_fsid",E,E,38,N],[12,"f_flag",E,E,38,N],[12,"f_namemax",E,E,38,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,39,N],[12,"dli_fbase",E,E,39,N],[12,"dli_sname",E,E,39,N],[12,"dli_saddr",E,E,39,N],[3,R[149],E,E,N,N],[12,"sin_len",E,E,40,N],[12,R[136],E,E,40,N],[12,"sin_port",E,E,40,N],[12,"sin_addr",E,E,40,N],[12,"sin_zero",E,E,40,N],[3,R[150],E,E,N,N],[12,"ident",E,E,41,N],[12,"filter",E,E,41,N],[12,"flags",E,E,41,N],[12,"fflags",E,E,41,N],[12,"data",E,E,41,N],[12,"udata",E,E,41,N],[12,"ext",E,E,41,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,42,N],[12,"dqb_bsoftlimit",E,E,42,N],[12,"dqb_curbytes",E,E,42,N],[12,"dqb_ihardlimit",E,E,42,N],[12,"dqb_isoftlimit",E,E,42,N],[12,"dqb_curinodes",E,E,42,N],[12,"dqb_btime",E,E,42,N],[12,"dqb_itime",E,E,42,N],[12,"dqb_id",E,E,42,N],[12,"dqb_spare",E,E,42,N],[3,R[151],E,E,N,N],[12,"ifm_msglen",E,E,43,N],[12,"ifm_version",E,E,43,N],[12,"ifm_type",E,E,43,N],[12,"ifm_addrs",E,E,43,N],[12,"ifm_flags",E,E,43,N],[12,"ifm_index",E,E,43,N],[12,"ifm_data",E,E,43,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,44,N],[12,"c_oflag",E,E,44,N],[12,"c_cflag",E,E,44,N],[12,"c_lflag",E,E,44,N],[12,"c_cc",E,E,44,N],[12,"c_ispeed",E,E,44,N],[12,"c_ospeed",E,E,44,N],[3,"flock",E,E,N,N],[12,"l_start",E,E,45,N],[12,"l_len",E,E,45,N],[12,"l_pid",E,E,45,N],[12,"l_type",E,E,45,N],[12,"l_whence",E,E,45,N],[3,"sf_hdtr",E,E,N,N],[12,"headers",E,E,46,N],[12,"hdr_cnt",E,E,46,N],[12,"trailers",E,E,46,N],[12,"trl_cnt",E,E,46,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,47,N],[12,"thousands_sep",E,E,47,N],[12,"grouping",E,E,47,N],[12,"int_curr_symbol",E,E,47,N],[12,"currency_symbol",E,E,47,N],[12,"mon_decimal_point",E,E,47,N],[12,"mon_thousands_sep",E,E,47,N],[12,"mon_grouping",E,E,47,N],[12,"positive_sign",E,E,47,N],[12,"negative_sign",E,E,47,N],[12,"int_frac_digits",E,E,47,N],[12,"frac_digits",E,E,47,N],[12,"p_cs_precedes",E,E,47,N],[12,"p_sep_by_space",E,E,47,N],[12,"n_cs_precedes",E,E,47,N],[12,"n_sep_by_space",E,E,47,N],[12,"p_sign_posn",E,E,47,N],[12,"n_sign_posn",E,E,47,N],[12,"int_p_cs_precedes",E,E,47,N],[12,"int_n_cs_precedes",E,E,47,N],[12,"int_p_sep_by_space",E,E,47,N],[12,"int_n_sep_by_space",E,E,47,N],[12,"int_p_sign_posn",E,E,47,N],[12,"int_n_sign_posn",E,E,47,N],[3,R[178],E,E,N,N],[12,"sigev_notify",E,E,48,N],[12,"sigev_signo",E,E,48,N],[12,"sigev_value",E,E,48,N],[12,"sigev_notify_attributes",E,E,48,N],[3,R[152],E,E,N,N],[12,"pti_virtual_size",E,E,49,N],[12,"pti_resident_size",E,E,49,N],[12,"pti_total_user",E,E,49,N],[12,"pti_total_system",E,E,49,N],[12,"pti_threads_user",E,E,49,N],[12,"pti_threads_system",E,E,49,N],[12,"pti_policy",E,E,49,N],[12,"pti_faults",E,E,49,N],[12,"pti_pageins",E,E,49,N],[12,"pti_cow_faults",E,E,49,N],[12,"pti_messages_sent",E,E,49,N],[12,"pti_messages_received",E,E,49,N],[12,"pti_syscalls_mach",E,E,49,N],[12,"pti_syscalls_unix",E,E,49,N],[12,"pti_csw",E,E,49,N],[12,"pti_threadnum",E,E,49,N],[12,"pti_numrunning",E,E,49,N],[12,"pti_priority",E,E,49,N],[3,R[153],E,E,N,N],[12,"pbi_flags",E,E,50,N],[12,"pbi_status",E,E,50,N],[12,"pbi_xstatus",E,E,50,N],[12,"pbi_pid",E,E,50,N],[12,"pbi_ppid",E,E,50,N],[12,"pbi_uid",E,E,50,N],[12,"pbi_gid",E,E,50,N],[12,"pbi_ruid",E,E,50,N],[12,"pbi_rgid",E,E,50,N],[12,"pbi_svuid",E,E,50,N],[12,"pbi_svgid",E,E,50,N],[12,"rfu_1",E,E,50,N],[12,"pbi_comm",E,E,50,N],[12,"pbi_name",E,E,50,N],[12,"pbi_nfiles",E,E,50,N],[12,"pbi_pgid",E,E,50,N],[12,"pbi_pjobc",E,E,50,N],[12,"e_tdev",E,E,50,N],[12,"e_tpgid",E,E,50,N],[12,"pbi_nice",E,E,50,N],[12,"pbi_start_tvsec",E,E,50,N],[12,"pbi_start_tvusec",E,E,50,N],[3,R[154],E,E,N,N],[12,"pbsd",E,E,51,N],[12,"ptinfo",E,E,51,N],[3,R[155],E,E,N,N],[12,"xsu_total",E,E,52,N],[12,"xsu_avail",E,E,52,N],[12,"xsu_used",E,E,52,N],[12,"xsu_pagesize",E,E,52,N],[12,"xsu_encrypted",E,E,52,N],[3,"xucred",E,E,N,N],[12,"cr_version",E,E,53,N],[12,"cr_uid",E,E,53,N],[12,"cr_ngroups",E,E,53,N],[12,"cr_groups",E,E,53,N],[3,R[156],E,E,N,N],[12,"magic",E,E,54,N],[12,"cputype",E,E,54,N],[12,R[134],E,E,54,N],[12,"filetype",E,E,54,N],[12,"ncmds",E,E,54,N],[12,R[135],E,E,54,N],[12,"flags",E,E,54,N],[3,R[157],E,E,N,N],[12,"magic",E,E,55,N],[12,"cputype",E,E,55,N],[12,R[134],E,E,55,N],[12,"filetype",E,E,55,N],[12,"ncmds",E,E,55,N],[12,R[135],E,E,55,N],[12,"flags",E,E,55,N],[12,"reserved",E,E,55,N],[3,R[158],E,E,N,N],[12,"cmd",E,E,56,N],[12,"cmdsize",E,E,56,N],[12,"segname",E,E,56,N],[12,"vmaddr",E,E,56,N],[12,"vmsize",E,E,56,N],[12,"fileoff",E,E,56,N],[12,"filesize",E,E,56,N],[12,"maxprot",E,E,56,N],[12,"initprot",E,E,56,N],[12,"nsects",E,E,56,N],[12,"flags",E,E,56,N],[3,R[159],E,E,N,N],[12,"cmd",E,E,57,N],[12,"cmdsize",E,E,57,N],[12,"segname",E,E,57,N],[12,"vmaddr",E,E,57,N],[12,"vmsize",E,E,57,N],[12,"fileoff",E,E,57,N],[12,"filesize",E,E,57,N],[12,"maxprot",E,E,57,N],[12,"initprot",E,E,57,N],[12,"nsects",E,E,57,N],[12,"flags",E,E,57,N],[3,R[160],E,E,N,N],[12,"cmd",E,E,58,N],[12,"cmdsize",E,E,58,N],[3,R[161],E,E,N,N],[12,"sdl_len",E,E,59,N],[12,"sdl_family",E,E,59,N],[12,"sdl_index",E,E,59,N],[12,"sdl_type",E,E,59,N],[12,"sdl_nlen",E,E,59,N],[12,"sdl_alen",E,E,59,N],[12,"sdl_slen",E,E,59,N],[12,"sdl_data",E,E,59,N],[3,R[162],E,E,N,N],[12,"sin_len",E,E,60,N],[12,R[136],E,E,60,N],[12,"sin_port",E,E,60,N],[12,"sin_addr",E,E,60,N],[12,"sin_srcaddr",E,E,60,N],[12,"sin_tos",E,E,60,N],[12,"sin_other",E,E,60,N],[3,R[163],E,E,N,N],[12,"sc_len",E,E,61,N],[12,"sc_family",E,E,61,N],[12,"ss_sysaddr",E,E,61,N],[12,"sc_id",E,E,61,N],[12,"sc_unit",E,E,61,N],[12,"sc_reserved",E,E,61,N],[3,R[164],E,E,N,N],[12,"ipi_ifindex",E,E,62,N],[12,"ipi_spec_dst",E,E,62,N],[12,"ipi_addr",E,E,62,N],[3,R[165],E,E,N,N],[12,"ipi6_addr",E,E,63,N],[12,"ipi6_ifindex",E,E,63,N],[3,R[179],E,E,N,N],[12,"uid",E,E,64,N],[12,"gid",E,E,64,N],[12,"cuid",E,E,64,N],[12,"cgid",E,E,64,N],[12,"mode",E,E,64,N],[12,"_seq",E,E,64,N],[12,"_key",E,E,64,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,65,N],[12,"sem_op",E,E,65,N],[12,"sem_flg",E,E,65,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,66,N],[12,"ar_pro",E,E,66,N],[12,"ar_hln",E,E,66,N],[12,"ar_pln",E,E,66,N],[12,"ar_op",E,E,66,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,67,N],[3,"kevent",E,E,N,N],[12,"ident",E,E,68,N],[12,"filter",E,E,68,N],[12,"flags",E,E,68,N],[12,"fflags",E,E,68,N],[12,"data",E,E,68,N],[12,"udata",E,E,68,N],[3,R[180],E,E,N,N],[12,"sem_perm",E,E,69,N],[12,"sem_base",E,E,69,N],[12,"sem_nsems",E,E,69,N],[12,"sem_otime",E,E,69,N],[12,"sem_pad1",E,E,69,N],[12,"sem_ctime",E,E,69,N],[12,"sem_pad2",E,E,69,N],[12,"sem_pad3",E,E,69,N],[3,R[181],E,E,N,N],[12,"shm_perm",E,E,70,N],[12,"shm_segsz",E,E,70,N],[12,"shm_lpid",E,E,70,N],[12,"shm_cpid",E,E,70,N],[12,"shm_nattch",E,E,70,N],[12,"shm_atime",E,E,70,N],[12,"shm_dtime",E,E,70,N],[12,"shm_ctime",E,E,70,N],[12,"shm_internal",E,E,70,N],[3,R[166],E,E,N,N],[12,"pth_user_time",E,E,71,N],[12,"pth_system_time",E,E,71,N],[12,"pth_cpu_usage",E,E,71,N],[12,"pth_policy",E,E,71,N],[12,"pth_run_state",E,E,71,N],[12,"pth_flags",E,E,71,N],[12,"pth_sleep_time",E,E,71,N],[12,"pth_curpri",E,E,71,N],[12,"pth_priority",E,E,71,N],[12,"pth_maxpriority",E,E,71,N],[12,"pth_name",E,E,71,N],[3,"statfs",E,E,N,N],[12,"f_bsize",E,E,72,N],[12,"f_iosize",E,E,72,N],[12,"f_blocks",E,E,72,N],[12,"f_bfree",E,E,72,N],[12,"f_bavail",E,E,72,N],[12,"f_files",E,E,72,N],[12,"f_ffree",E,E,72,N],[12,"f_fsid",E,E,72,N],[12,"f_owner",E,E,72,N],[12,"f_type",E,E,72,N],[12,"f_flags",E,E,72,N],[12,"f_fssubtype",E,E,72,N],[12,"f_fstypename",E,E,72,N],[12,"f_mntonname",E,E,72,N],[12,"f_mntfromname",E,E,72,N],[12,"f_reserved",E,E,72,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,73,N],[12,"d_seekoff",E,E,73,N],[12,"d_reclen",E,E,73,N],[12,"d_namlen",E,E,73,N],[12,"d_type",E,E,73,N],[12,"d_name",E,E,73,N],[3,R[167],E,E,N,N],[3,R[168],E,E,N,N],[3,R[169],E,E,N,N],[3,R[170],E,E,N,N],[12,"ss_len",E,E,74,N],[12,"ss_family",E,E,74,N],[3,"utmpx",E,E,N,N],[12,"ut_user",E,E,75,N],[12,"ut_id",E,E,75,N],[12,"ut_line",E,E,75,N],[12,"ut_pid",E,E,75,N],[12,"ut_type",E,E,75,N],[12,"ut_tv",E,E,75,N],[12,"ut_host",E,E,75,N],[3,R[171],E,E,N,N],[12,"tv_sec",E,E,76,N],[12,"tv_usec",E,E,76,N],[3,"if_data",E,E,N,N],[12,"ifi_type",E,E,77,N],[12,"ifi_typelen",E,E,77,N],[12,"ifi_physical",E,E,77,N],[12,"ifi_addrlen",E,E,77,N],[12,"ifi_hdrlen",E,E,77,N],[12,"ifi_recvquota",E,E,77,N],[12,"ifi_xmitquota",E,E,77,N],[12,"ifi_unused1",E,E,77,N],[12,"ifi_mtu",E,E,77,N],[12,"ifi_metric",E,E,77,N],[12,"ifi_baudrate",E,E,77,N],[12,"ifi_ipackets",E,E,77,N],[12,"ifi_ierrors",E,E,77,N],[12,"ifi_opackets",E,E,77,N],[12,"ifi_oerrors",E,E,77,N],[12,"ifi_collisions",E,E,77,N],[12,"ifi_ibytes",E,E,77,N],[12,"ifi_obytes",E,E,77,N],[12,"ifi_imcasts",E,E,77,N],[12,"ifi_omcasts",E,E,77,N],[12,"ifi_iqdrops",E,E,77,N],[12,"ifi_noproto",E,E,77,N],[12,"ifi_recvtiming",E,E,77,N],[12,"ifi_xmittiming",E,E,77,N],[12,"ifi_lastchange",E,E,77,N],[12,"ifi_unused2",E,E,77,N],[12,"ifi_hwassist",E,E,77,N],[12,"ifi_reserved1",E,E,77,N],[12,"ifi_reserved2",E,E,77,N],[3,"bpf_hdr",E,E,N,N],[12,"bh_tstamp",E,E,78,N],[12,"bh_caplen",E,E,78,N],[12,"bh_datalen",E,E,78,N],[12,"bh_hdrlen",E,E,78,N],[3,R[172],E,E,N,N],[3,R[182],E,E,N,N],[12,"s6_addr",E,E,79,N],[19,"semun",E,E,N,N],[12,"val",E,E,80,N],[12,"buf",E,E,80,N],[12,"array",E,E,80,N],[4,"DIR",E,E,N,N],[4,R[183],E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[184],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"_WSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,"getpeername",E,E,N,N],[5,"getsockname",E,E,N,N],[5,"setsockopt",E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"openat",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pause",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,"if_nametoindex",E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"truncate",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"getsockopt",E,E,N,N],[5,"raise",E,E,N,N],[5,R[137],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"gethostname",E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"getsid",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,"cfgetispeed",E,E,N,N],[5,"cfgetospeed",E,E,N,N],[5,"cfsetispeed",E,E,N,N],[5,"cfsetospeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,"tcsendbreak",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"kqueue",E,E,N,N],[5,"unmount",E,E,N,N],[5,"syscall",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"getprogname",E,E,N,N],[5,"setprogname",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,R[138],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"getpeereid",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"sync",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"pthread_sigmask",E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"acct",E,E,N,N],[5,"daemon",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"chflags",E,E,N,N],[5,"fchflags",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"mincore",E,E,N,N],[5,"sysctlnametomib",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"semget",E,E,N,N],[5,"semctl",E,E,N,N],[5,"semop",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"ftok",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"shmget",E,E,N,N],[5,"sysctl",E,E,N,N],[5,"sysctlbyname",E,E,N,N],[5,"mach_absolute_time",E,E,N,N],[5,R[139],E,E,N,N],[5,"pthread_setname_np",E,E,N,N],[5,"pthread_get_stackaddr_np",E,E,N,N],[5,"pthread_get_stacksize_np",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"__error",E,E,N,N],[5,R[41],E,E,N,N],[5,"statfs",E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"kevent",E,E,N,N],[5,"kevent64",E,E,N,N],[5,"mount",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"sethostname",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"localeconv_l",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"querylocale",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"renamex_np",E,E,N,N],[5,"renameatx_np",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"waitid",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"_dyld_image_count",E,E,N,N],[5,"_dyld_get_image_header",E,E,N,N],[5,"_dyld_get_image_vmaddr_slide",E,E,N,N],[5,"_dyld_get_image_name",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"uname",E,E,N,N],[5,"exchangedata",E,E,N,N],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"sa_family_t",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"mach_timebase_info_data_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"sigset_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"speed_t",E,E,N,N],[6,"tcflag_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"id_t",E,E,N,N],[6,"sem_t",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"integer_t",E,E,N,N],[6,"cpu_type_t",E,E,N,N],[6,"cpu_subtype_t",E,E,N,N],[6,"vm_prot_t",E,E,N,N],[6,"posix_spawnattr_t",E,E,N,N],[6,"posix_spawn_file_actions_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"vm_size_t",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[6,"boolean_t",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_RESETHAND",E,E,N,N],[17,"SA_NOCLDSTOP",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_NOCLDWAIT",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGINFO",E,E,N,N],[17,"SIG_SETMASK",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,"SIG_UNBLOCK",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPTOS_ECN_NOTECT",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"O_SHLOCK",E,E,N,N],[17,"O_EXLOCK",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VDSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"VSTATUS",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"OXTABS",E,E,N,N],[17,"ONOEOT",E,E,N,N],[17,"CIGNORE",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"ALTWERASE",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"NOKERNINFO",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"MDMBUF",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_SELF",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"_UTX_USERSIZE",E,E,N,N],[17,"_UTX_LINESIZE",E,E,N,N],[17,"_UTX_IDSIZE",E,E,N,N],[17,"_UTX_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"SIGNATURE",E,E,N,N],[17,"SHUTDOWN_TIME",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"D_MD_ORDER",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"O_DIRECTORY",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGEMT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"PT_TRACE_ME",E,E,N,N],[17,"PT_READ_I",E,E,N,N],[17,"PT_READ_D",E,E,N,N],[17,"PT_READ_U",E,E,N,N],[17,"PT_WRITE_I",E,E,N,N],[17,"PT_WRITE_D",E,E,N,N],[17,"PT_WRITE_U",E,E,N,N],[17,"PT_CONTINUE",E,E,N,N],[17,"PT_KILL",E,E,N,N],[17,"PT_STEP",E,E,N,N],[17,"PT_ATTACH",E,E,N,N],[17,"PT_DETACH",E,E,N,N],[17,"PT_SIGEXC",E,E,N,N],[17,"PT_THUPDATE",E,E,N,N],[17,"PT_ATTACHEXC",E,E,N,N],[17,"PT_FORCEQUOTA",E,E,N,N],[17,"PT_DENY_ATTACH",E,E,N,N],[17,"PT_FIRSTMACH",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,"MAP_PRIVATE",E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"VM_FLAGS_FIXED",E,E,N,N],[17,"VM_FLAGS_ANYWHERE",E,E,N,N],[17,"VM_FLAGS_PURGABLE",E,E,N,N],[17,"VM_FLAGS_RANDOM_ADDR",E,E,N,N],[17,"VM_FLAGS_NO_CACHE",E,E,N,N],[17,"VM_FLAGS_RESILIENT_CODESIGN",E,E,N,N],[17,"VM_FLAGS_RESILIENT_MEDIA",E,E,N,N],[17,"VM_FLAGS_OVERWRITE",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_MASK",E,E,N,N],[17,"VM_FLAGS_RETURN_DATA_ADDR",E,E,N,N],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR",E,E,N,N],[17,"VM_FLAGS_ALIAS_MASK",E,E,N,N],[17,"VM_FLAGS_USER_ALLOCATE",E,E,N,N],[17,"VM_FLAGS_USER_MAP",E,E,N,N],[17,"VM_FLAGS_USER_REMAP",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SHIFT",E,E,N,N],[17,"SUPERPAGE_NONE",E,E,N,N],[17,"SUPERPAGE_SIZE_ANY",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_NONE",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY",E,E,N,N],[17,"SUPERPAGE_SIZE_2MB",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB",E,E,N,N],[17,"VM_MEMORY_MALLOC",E,E,N,N],[17,"VM_MEMORY_MALLOC_SMALL",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE",E,E,N,N],[17,"VM_MEMORY_MALLOC_HUGE",E,E,N,N],[17,"VM_MEMORY_SBRK",E,E,N,N],[17,"VM_MEMORY_REALLOC",E,E,N,N],[17,"VM_MEMORY_MALLOC_TINY",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSED",E,E,N,N],[17,"VM_MEMORY_ANALYSIS_TOOL",E,E,N,N],[17,"VM_MEMORY_MALLOC_NANO",E,E,N,N],[17,"VM_MEMORY_MACH_MSG",E,E,N,N],[17,"VM_MEMORY_IOKIT",E,E,N,N],[17,"VM_MEMORY_STACK",E,E,N,N],[17,"VM_MEMORY_GUARD",E,E,N,N],[17,"VM_MEMORY_SHARED_PMAP",E,E,N,N],[17,"VM_MEMORY_DYLIB",E,E,N,N],[17,"VM_MEMORY_OBJC_DISPATCHERS",E,E,N,N],[17,"VM_MEMORY_UNSHARED_PMAP",E,E,N,N],[17,"VM_MEMORY_APPKIT",E,E,N,N],[17,"VM_MEMORY_FOUNDATION",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS",E,E,N,N],[17,"VM_MEMORY_CORESERVICES",E,E,N,N],[17,"VM_MEMORY_CARBON",E,E,N,N],[17,"VM_MEMORY_JAVA",E,E,N,N],[17,"VM_MEMORY_COREDATA",E,E,N,N],[17,"VM_MEMORY_COREDATA_OBJECTIDS",E,E,N,N],[17,"VM_MEMORY_ATS",E,E,N,N],[17,"VM_MEMORY_LAYERKIT",E,E,N,N],[17,"VM_MEMORY_CGIMAGE",E,E,N,N],[17,"VM_MEMORY_TCMALLOC",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_DATA",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_SHARED",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_XALLOC",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_MISC",E,E,N,N],[17,"VM_MEMORY_DYLD",E,E,N,N],[17,"VM_MEMORY_DYLD_MALLOC",E,E,N,N],[17,"VM_MEMORY_SQLITE",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_CORE",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE",E,E,N,N],[17,"VM_MEMORY_GLSL",E,E,N,N],[17,"VM_MEMORY_OPENCL",E,E,N,N],[17,"VM_MEMORY_COREIMAGE",E,E,N,N],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS",E,E,N,N],[17,"VM_MEMORY_IMAGEIO",E,E,N,N],[17,"VM_MEMORY_COREPROFILE",E,E,N,N],[17,"VM_MEMORY_ASSETSD",E,E,N,N],[17,"VM_MEMORY_OS_ALLOC_ONCE",E,E,N,N],[17,"VM_MEMORY_LIBDISPATCH",E,E,N,N],[17,"VM_MEMORY_ACCELERATE",E,E,N,N],[17,"VM_MEMORY_COREUI",E,E,N,N],[17,"VM_MEMORY_COREUIFILE",E,E,N,N],[17,"VM_MEMORY_GENEALOGY",E,E,N,N],[17,"VM_MEMORY_RAWCAMERA",E,E,N,N],[17,"VM_MEMORY_CORPSEINFO",E,E,N,N],[17,"VM_MEMORY_ASL",E,E,N,N],[17,"VM_MEMORY_SWIFT_RUNTIME",E,E,N,N],[17,"VM_MEMORY_SWIFT_METADATA",E,E,N,N],[17,"VM_MEMORY_DHMM",E,E,N,N],[17,"VM_MEMORY_SCENEKIT",E,E,N,N],[17,"VM_MEMORY_SKYWALK",E,E,N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1",E,E,N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,"MS_INVALIDATE",E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_KILLPAGES",E,E,N,N],[17,"MS_DEACTIVATE",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"EWOULDBLOCK",E,E,N,N],[17,"EINPROGRESS",E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,"EDESTADDRREQ",E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,"ENOPROTOOPT",E,E,N,N],[17,"EPROTONOSUPPORT",E,E,N,N],[17,"ESOCKTNOSUPPORT",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"EPFNOSUPPORT",E,E,N,N],[17,"EAFNOSUPPORT",E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,"EADDRNOTAVAIL",E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,"ENETUNREACH",E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,"ECONNABORTED",E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,"ETOOMANYREFS",E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,"ECONNREFUSED",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENAMETOOLONG",E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,"EHOSTUNREACH",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"EPROCLIM",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"EBADRPC",E,E,N,N],[17,"ERPCMISMATCH",E,E,N,N],[17,"EPROGUNAVAIL",E,E,N,N],[17,"EPROGMISMATCH",E,E,N,N],[17,"EPROCUNAVAIL",E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"EFTYPE",E,E,N,N],[17,"EAUTH",E,E,N,N],[17,"ENEEDAUTH",E,E,N,N],[17,"EPWROFF",E,E,N,N],[17,"EDEVERR",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"EBADEXEC",E,E,N,N],[17,"EBADARCH",E,E,N,N],[17,"ESHLIBVERS",E,E,N,N],[17,"EBADMACHO",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"ENOPOLICY",E,E,N,N],[17,"ENOTRECOVERABLE",E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"EQFULL",E,E,N,N],[17,"ELAST",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_DUPFD_CLOEXEC",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_PREALLOCATE",E,E,N,N],[17,"F_RDADVISE",E,E,N,N],[17,"F_RDAHEAD",E,E,N,N],[17,"F_NOCACHE",E,E,N,N],[17,"F_GETPATH",E,E,N,N],[17,"F_FULLFSYNC",E,E,N,N],[17,"F_FREEZE_FS",E,E,N,N],[17,"F_THAW_FS",E,E,N,N],[17,"F_GLOBAL_NOCACHE",E,E,N,N],[17,"F_NODIRECT",E,E,N,N],[17,"F_ALLOCATECONTIG",E,E,N,N],[17,"F_ALLOCATEALL",E,E,N,N],[17,"F_PEOFPOSMODE",E,E,N,N],[17,"F_VOLPOSMODE",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_EACCESS",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"TIOCMODG",E,E,N,N],[17,"TIOCMODS",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCFLUSH",E,E,N,N],[17,"TIOCGETD",E,E,N,N],[17,"TIOCSETD",E,E,N,N],[17,"TIOCIXON",E,E,N,N],[17,"TIOCIXOFF",E,E,N,N],[17,"TIOCSBRK",E,E,N,N],[17,"TIOCCBRK",E,E,N,N],[17,"TIOCSDTR",E,E,N,N],[17,"TIOCCDTR",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCNOTTY",E,E,N,N],[17,"TIOCPKT",E,E,N,N],[17,"TIOCPKT_DATA",E,E,N,N],[17,"TIOCPKT_FLUSHREAD",E,E,N,N],[17,"TIOCPKT_FLUSHWRITE",E,E,N,N],[17,"TIOCPKT_STOP",E,E,N,N],[17,"TIOCPKT_START",E,E,N,N],[17,"TIOCPKT_NOSTOP",E,E,N,N],[17,"TIOCPKT_DOSTOP",E,E,N,N],[17,"TIOCPKT_IOCTL",E,E,N,N],[17,"TIOCSTOP",E,E,N,N],[17,"TIOCSTART",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCREMOTE",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"TIOCUCNTL",E,E,N,N],[17,"TIOCSTAT",E,E,N,N],[17,"TIOCSCONS",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCEXT",E,E,N,N],[17,"TIOCSIG",E,E,N,N],[17,"TIOCDRAIN",E,E,N,N],[17,"TIOCMSDTRWAIT",E,E,N,N],[17,"TIOCMGDTRWAIT",E,E,N,N],[17,"TIOCSDRAINWAIT",E,E,N,N],[17,"TIOCGDRAINWAIT",E,E,N,N],[17,"TIOCDSIMICROCODE",E,E,N,N],[17,"TIOCPTYGRANT",E,E,N,N],[17,"TIOCPTYGNAME",E,E,N,N],[17,"TIOCPTYUNLK",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"FIOASYNC",E,E,N,N],[17,"FIOSETOWN",E,E,N,N],[17,"FIOGETOWN",E,E,N,N],[17,"FIODTYPE",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"B7200",E,E,N,N],[17,"B14400",E,E,N,N],[17,"B28800",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B76800",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIM_NLIMITS",E,E,N,N],[17,"_RLIMIT_POSIX_FLAG",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"MADV_NORMAL",E,E,N,N],[17,"MADV_RANDOM",E,E,N,N],[17,"MADV_SEQUENTIAL",E,E,N,N],[17,"MADV_WILLNEED",E,E,N,N],[17,"MADV_DONTNEED",E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,"MADV_ZERO_WIRED_PAGES",E,E,N,N],[17,"MADV_FREE_REUSABLE",E,E,N,N],[17,"MADV_FREE_REUSE",E,E,N,N],[17,"MADV_CAN_REUSE",E,E,N,N],[17,"MINCORE_INCORE",E,E,N,N],[17,"MINCORE_REFERENCED",E,E,N,N],[17,"MINCORE_MODIFIED",E,E,N,N],[17,"MINCORE_REFERENCED_OTHER",E,E,N,N],[17,"MINCORE_MODIFIED_OTHER",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"IP6 hop-by-hop options",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_GGP",E,"gateway2 (deprecated)",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_ST",E,"Stream protocol II.",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PIGP",E,"private interior gateway",N,N],[17,"IPPROTO_RCCMON",E,"BBN RCC Monitoring",N,N],[17,"IPPROTO_NVPII",E,"network voice protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_ARGUS",E,"Argus",N,N],[17,"IPPROTO_EMCON",E,"EMCON",N,N],[17,"IPPROTO_XNET",E,"Cross Net Debugger",N,N],[17,"IPPROTO_CHAOS",E,"Chaos",N,N],[17,"IPPROTO_MUX",E,"Multiplexing",N,N],[17,"IPPROTO_MEAS",E,"DCN Measurement Subsystems",N,N],[17,"IPPROTO_HMP",E,"Host Monitoring",N,N],[17,"IPPROTO_PRM",E,"Packet Radio Measurement",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TRUNK1",E,"Trunk-1",N,N],[17,"IPPROTO_TRUNK2",E,"Trunk-2",N,N],[17,"IPPROTO_LEAF1",E,"Leaf-1",N,N],[17,"IPPROTO_LEAF2",E,"Leaf-2",N,N],[17,"IPPROTO_RDP",E,"Reliable Data",N,N],[17,"IPPROTO_IRTP",E,"Reliable Transaction",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_BLT",E,"Bulk Data Transfer",N,N],[17,"IPPROTO_NSP",E,"Network Services",N,N],[17,"IPPROTO_INP",E,"Merit Internodal",N,N],[17,"IPPROTO_SEP",E,"Sequential Exchange",N,N],[17,"IPPROTO_3PC",E,"Third Party Connect",N,N],[17,"IPPROTO_IDPR",E,"InterDomain Policy Routing",N,N],[17,"IPPROTO_XTP",E,"XTP",N,N],[17,"IPPROTO_DDP",E,"Datagram Delivery",N,N],[17,"IPPROTO_CMTP",E,"Control Message Transport",N,N],[17,"IPPROTO_TPXX",E,"TP++ Transport",N,N],[17,"IPPROTO_IL",E,"IL transport protocol",N,N],[17,"IPPROTO_SDRP",E,"Source Demand Routing",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_IDRP",E,"InterDomain Routing",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_MHRP",E,"Mobile Host Routing",N,N],[17,"IPPROTO_BHA",E,"BHA",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_INLSP",E,"Integ. Net Layer Security",N,N],[17,"IPPROTO_SWIPE",E,"IP with encryption",N,N],[17,"IPPROTO_NHRP",E,"Next Hop Resolution",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_AHIP",E,"any host internal protocol",N,N],[17,"IPPROTO_CFTP",E,"CFTP",N,N],[17,"IPPROTO_HELLO",E,"\"hello\" routing protocol",N,N],[17,"IPPROTO_SATEXPAK",E,"SATNET/Backroom EXPAK",N,N],[17,"IPPROTO_KRYPTOLAN",E,"Kryptolan",N,N],[17,"IPPROTO_RVD",E,"Remote Virtual Disk",N,N],[17,"IPPROTO_IPPC",E,"Pluribus Packet Core",N,N],[17,"IPPROTO_ADFS",E,"Any distributed FS",N,N],[17,"IPPROTO_SATMON",E,"Satnet Monitoring",N,N],[17,"IPPROTO_VISA",E,"VISA Protocol",N,N],[17,"IPPROTO_IPCV",E,"Packet Core Utility",N,N],[17,"IPPROTO_CPNX",E,"Comp. Prot. Net. Executive",N,N],[17,"IPPROTO_CPHB",E,"Comp. Prot. HeartBeat",N,N],[17,"IPPROTO_WSN",E,"Wang Span Network",N,N],[17,"IPPROTO_PVP",E,"Packet Video Protocol",N,N],[17,"IPPROTO_BRSATMON",E,"BackRoom SATNET Monitoring",N,N],[17,"IPPROTO_ND",E,"Sun net disk proto (temp.)",N,N],[17,"IPPROTO_WBMON",E,"WIDEBAND Monitoring",N,N],[17,"IPPROTO_WBEXPAK",E,"WIDEBAND EXPAK",N,N],[17,"IPPROTO_EON",E,"ISO cnlp",N,N],[17,"IPPROTO_VMTP",E,"VMTP",N,N],[17,"IPPROTO_SVMTP",E,"Secure VMTP",N,N],[17,"IPPROTO_VINES",E,"Banyon VINES",N,N],[17,"IPPROTO_TTP",E,"TTP",N,N],[17,"IPPROTO_IGP",E,"NSFNET-IGP",N,N],[17,"IPPROTO_DGP",E,"dissimilar gateway prot.",N,N],[17,"IPPROTO_TCF",E,"TCF",N,N],[17,"IPPROTO_IGRP",E,"Cisco/GXS IGRP",N,N],[17,"IPPROTO_OSPFIGP",E,"OSPFIGP",N,N],[17,"IPPROTO_SRPC",E,"Strite RPC protocol",N,N],[17,"IPPROTO_LARP",E,"Locus Address Resoloution",N,N],[17,"IPPROTO_MTP",E,"Multicast Transport",N,N],[17,"IPPROTO_AX25",E,"AX.25 Frames",N,N],[17,"IPPROTO_IPEIP",E,"IP encapsulated in IP",N,N],[17,"IPPROTO_MICP",E,"Mobile Int.ing control",N,N],[17,"IPPROTO_SCCSP",E,"Semaphore Comm. security",N,N],[17,"IPPROTO_ETHERIP",E,"Ethernet IP encapsulation",N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_APES",E,"any private encr. scheme",N,N],[17,"IPPROTO_GMTP",E,"GMTP",N,N],[17,"IPPROTO_PIM",E,"Protocol Independent Mcast",N,N],[17,"IPPROTO_IPCOMP",E,"payload compression (IPComp)",N,N],[17,"IPPROTO_PGM",E,"PGM",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_DIVERT",E,"divert pseudo-protocol",N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"IPPROTO_DONE",E,"last return value of *_input(), meaning \"all job for this…",N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_IMPLINK",E,E,N,N],[17,"AF_PUP",E,E,N,N],[17,"AF_CHAOS",E,E,N,N],[17,"AF_NS",E,E,N,N],[17,"AF_ISO",E,E,N,N],[17,"AF_OSI",E,E,N,N],[17,"AF_ECMA",E,E,N,N],[17,"AF_DATAKIT",E,E,N,N],[17,"AF_CCITT",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_DLI",E,E,N,N],[17,"AF_LAT",E,E,N,N],[17,"AF_HYLINK",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_LINK",E,E,N,N],[17,"pseudo_AF_XTP",E,E,N,N],[17,"AF_COIP",E,E,N,N],[17,"AF_CNT",E,E,N,N],[17,"pseudo_AF_RTIP",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_SIP",E,E,N,N],[17,"pseudo_AF_PIP",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_E164",E,E,N,N],[17,"pseudo_AF_KEY",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_NATM",E,E,N,N],[17,"AF_SYSTEM",E,E,N,N],[17,"AF_NETBIOS",E,E,N,N],[17,"AF_PPP",E,E,N,N],[17,"pseudo_AF_HDRCMPLT",E,E,N,N],[17,"AF_SYS_CONTROL",E,E,N,N],[17,"SYSPROTO_EVENT",E,E,N,N],[17,"SYSPROTO_CONTROL",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_IMPLINK",E,E,N,N],[17,"PF_PUP",E,E,N,N],[17,"PF_CHAOS",E,E,N,N],[17,"PF_NS",E,E,N,N],[17,"PF_ISO",E,E,N,N],[17,"PF_OSI",E,E,N,N],[17,"PF_ECMA",E,E,N,N],[17,"PF_DATAKIT",E,E,N,N],[17,"PF_CCITT",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_DLI",E,E,N,N],[17,"PF_LAT",E,E,N,N],[17,"PF_HYLINK",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_LINK",E,E,N,N],[17,"PF_XTP",E,E,N,N],[17,"PF_COIP",E,E,N,N],[17,"PF_CNT",E,E,N,N],[17,"PF_SIP",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_RTIP",E,E,N,N],[17,"PF_PIP",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_NATM",E,E,N,N],[17,"PF_SYSTEM",E,E,N,N],[17,"PF_NETBIOS",E,E,N,N],[17,"PF_PPP",E,E,N,N],[17,"NET_RT_DUMP",E,E,N,N],[17,"NET_RT_FLAGS",E,E,N,N],[17,"NET_RT_IFLIST",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"SOCK_MAXADDRLEN",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_RECVDSTADDR",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_RECVIF",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IPV6_JOIN_GROUP",E,E,N,N],[17,"IPV6_LEAVE_GROUP",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"TCP_NOPUSH",E,E,N,N],[17,"TCP_NOOPT",E,E,N,N],[17,"TCP_KEEPALIVE",E,E,N,N],[17,"SOL_LOCAL",E,E,N,N],[17,"LOCAL_PEERCRED",E,E,N,N],[17,"LOCAL_PEERPID",E,E,N,N],[17,"LOCAL_PEEREPID",E,E,N,N],[17,"LOCAL_PEERUUID",E,E,N,N],[17,"LOCAL_PEEREUUID",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_USELOOPBACK",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_TIMESTAMP_MONOTONIC",E,E,N,N],[17,"SO_DONTTRUNC",E,E,N,N],[17,"SO_WANTMORE",E,E,N,N],[17,"SO_WANTOOBFLAG",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_LABEL",E,E,N,N],[17,"SO_PEERLABEL",E,E,N,N],[17,"SO_NREAD",E,E,N,N],[17,"SO_NKE",E,E,N,N],[17,"SO_NOSIGPIPE",E,E,N,N],[17,"SO_NOADDRERR",E,E,N,N],[17,"SO_NWRITE",E,E,N,N],[17,"SO_REUSESHAREUID",E,E,N,N],[17,"SO_NOTIFYCONFLICT",E,E,N,N],[17,"SO_RANDOMPORT",E,E,N,N],[17,"SO_NP_EXTENSIONS",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_DONTWAIT",E,E,N,N],[17,"MSG_EOF",E,E,N,N],[17,"MSG_FLUSH",E,E,N,N],[17,"MSG_HOLD",E,E,N,N],[17,"MSG_SEND",E,E,N,N],[17,"MSG_HAVEMORE",E,E,N,N],[17,"MSG_RCVMORE",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SCM_CREDS",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_OACTIVE",E,E,N,N],[17,"IFF_SIMPLEX",E,E,N,N],[17,"IFF_LINK0",E,E,N,N],[17,"IFF_LINK1",E,E,N,N],[17,"IFF_LINK2",E,E,N,N],[17,"IFF_ALTPHYS",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"MAP_COPY",E,E,N,N],[17,"MAP_RENAME",E,E,N,N],[17,"MAP_NORESERVE",E,E,N,N],[17,"MAP_NOEXTEND",E,E,N,N],[17,"MAP_HASSEMAPHORE",E,E,N,N],[17,"MAP_NOCACHE",E,E,N,N],[17,"MAP_JIT",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"_PTHREAD_MUTEX_SIG_init",E,E,N,N],[17,"_PTHREAD_COND_SIG_init",E,E,N,N],[17,"_PTHREAD_RWLOCK_SIG_init",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"EVFILT_READ",E,E,N,N],[17,"EVFILT_WRITE",E,E,N,N],[17,"EVFILT_AIO",E,E,N,N],[17,"EVFILT_VNODE",E,E,N,N],[17,"EVFILT_PROC",E,E,N,N],[17,"EVFILT_SIGNAL",E,E,N,N],[17,"EVFILT_TIMER",E,E,N,N],[17,"EVFILT_MACHPORT",E,E,N,N],[17,"EVFILT_FS",E,E,N,N],[17,"EVFILT_USER",E,E,N,N],[17,"EVFILT_VM",E,E,N,N],[17,"EV_ADD",E,E,N,N],[17,"EV_DELETE",E,E,N,N],[17,"EV_ENABLE",E,E,N,N],[17,"EV_DISABLE",E,E,N,N],[17,"EV_ONESHOT",E,E,N,N],[17,"EV_CLEAR",E,E,N,N],[17,"EV_RECEIPT",E,E,N,N],[17,"EV_DISPATCH",E,E,N,N],[17,"EV_FLAG0",E,E,N,N],[17,"EV_POLL",E,E,N,N],[17,"EV_FLAG1",E,E,N,N],[17,"EV_OOBAND",E,E,N,N],[17,"EV_ERROR",E,E,N,N],[17,"EV_EOF",E,E,N,N],[17,"EV_SYSFLAGS",E,E,N,N],[17,"NOTE_TRIGGER",E,E,N,N],[17,"NOTE_FFNOP",E,E,N,N],[17,"NOTE_FFAND",E,E,N,N],[17,"NOTE_FFOR",E,E,N,N],[17,"NOTE_FFCOPY",E,E,N,N],[17,"NOTE_FFCTRLMASK",E,E,N,N],[17,"NOTE_FFLAGSMASK",E,E,N,N],[17,"NOTE_LOWAT",E,E,N,N],[17,"NOTE_DELETE",E,E,N,N],[17,"NOTE_WRITE",E,E,N,N],[17,"NOTE_EXTEND",E,E,N,N],[17,"NOTE_ATTRIB",E,E,N,N],[17,"NOTE_LINK",E,E,N,N],[17,"NOTE_RENAME",E,E,N,N],[17,"NOTE_REVOKE",E,E,N,N],[17,"NOTE_NONE",E,E,N,N],[17,"NOTE_EXIT",E,E,N,N],[17,"NOTE_FORK",E,E,N,N],[17,"NOTE_EXEC",E,E,N,N],[17,"NOTE_REAP",E,E,N,N],[17,"NOTE_SIGNAL",E,E,N,N],[17,"NOTE_EXITSTATUS",E,E,N,N],[17,"NOTE_EXIT_DETAIL",E,E,N,N],[17,"NOTE_PDATAMASK",E,E,N,N],[17,"NOTE_PCTRLMASK",E,E,N,N],[17,"NOTE_EXIT_REPARENTED",E,E,N,N],[17,"NOTE_EXIT_DETAIL_MASK",E,E,N,N],[17,"NOTE_EXIT_DECRYPTFAIL",E,E,N,N],[17,"NOTE_EXIT_MEMORY",E,E,N,N],[17,"NOTE_EXIT_CSERROR",E,E,N,N],[17,"NOTE_VM_PRESSURE",E,E,N,N],[17,"NOTE_VM_PRESSURE_TERMINATE",E,E,N,N],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE",E,E,N,N],[17,"NOTE_VM_ERROR",E,E,N,N],[17,"NOTE_SECONDS",E,E,N,N],[17,"NOTE_USECONDS",E,E,N,N],[17,"NOTE_NSECONDS",E,E,N,N],[17,"NOTE_ABSOLUTE",E,E,N,N],[17,"NOTE_LEEWAY",E,E,N,N],[17,"NOTE_CRITICAL",E,E,N,N],[17,"NOTE_BACKGROUND",E,E,N,N],[17,"NOTE_TRACK",E,E,N,N],[17,"NOTE_TRACKERR",E,E,N,N],[17,"NOTE_CHILD",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"CR0",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF0",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS0",E,E,N,N],[17,"BS1",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VT1",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"NI_MAXSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NUMERICSCOPE",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"RENAME_SWAP",E,E,N,N],[17,"RENAME_EXCL",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_FIRST",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"_WSTOPPED",E,E,N,N],[17,"LOG_NETINFO",E,E,N,N],[17,"LOG_REMOTEAUTH",E,E,N,N],[17,"LOG_INSTALL",E,E,N,N],[17,"LOG_RAS",E,E,N,N],[17,"LOG_LAUNCHD",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"CTLTYPE",E,E,N,N],[17,"CTLTYPE_NODE",E,E,N,N],[17,"CTLTYPE_INT",E,E,N,N],[17,"CTLTYPE_STRING",E,E,N,N],[17,"CTLTYPE_QUAD",E,E,N,N],[17,"CTLTYPE_OPAQUE",E,E,N,N],[17,"CTLTYPE_STRUCT",E,E,N,N],[17,"CTLFLAG_RD",E,E,N,N],[17,"CTLFLAG_WR",E,E,N,N],[17,"CTLFLAG_RW",E,E,N,N],[17,"CTLFLAG_NOLOCK",E,E,N,N],[17,"CTLFLAG_ANYBODY",E,E,N,N],[17,"CTLFLAG_SECURE",E,E,N,N],[17,"CTLFLAG_MASKED",E,E,N,N],[17,"CTLFLAG_NOAUTO",E,E,N,N],[17,"CTLFLAG_KERN",E,E,N,N],[17,"CTLFLAG_LOCKED",E,E,N,N],[17,"CTLFLAG_OID2",E,E,N,N],[17,"CTL_UNSPEC",E,E,N,N],[17,"CTL_KERN",E,E,N,N],[17,"CTL_VM",E,E,N,N],[17,"CTL_VFS",E,E,N,N],[17,"CTL_NET",E,E,N,N],[17,"CTL_DEBUG",E,E,N,N],[17,"CTL_HW",E,E,N,N],[17,"CTL_MACHDEP",E,E,N,N],[17,"CTL_USER",E,E,N,N],[17,"CTL_MAXID",E,E,N,N],[17,"KERN_OSTYPE",E,E,N,N],[17,"KERN_OSRELEASE",E,E,N,N],[17,"KERN_OSREV",E,E,N,N],[17,"KERN_VERSION",E,E,N,N],[17,"KERN_MAXVNODES",E,E,N,N],[17,"KERN_MAXPROC",E,E,N,N],[17,"KERN_MAXFILES",E,E,N,N],[17,"KERN_ARGMAX",E,E,N,N],[17,"KERN_SECURELVL",E,E,N,N],[17,"KERN_HOSTNAME",E,E,N,N],[17,"KERN_HOSTID",E,E,N,N],[17,"KERN_CLOCKRATE",E,E,N,N],[17,"KERN_VNODE",E,E,N,N],[17,"KERN_PROC",E,E,N,N],[17,"KERN_FILE",E,E,N,N],[17,"KERN_PROF",E,E,N,N],[17,"KERN_POSIX1",E,E,N,N],[17,"KERN_NGROUPS",E,E,N,N],[17,"KERN_JOB_CONTROL",E,E,N,N],[17,"KERN_SAVED_IDS",E,E,N,N],[17,"KERN_BOOTTIME",E,E,N,N],[17,"KERN_NISDOMAINNAME",E,E,N,N],[17,"KERN_DOMAINNAME",E,E,N,N],[17,"KERN_MAXPARTITIONS",E,E,N,N],[17,"KERN_KDEBUG",E,E,N,N],[17,"KERN_UPDATEINTERVAL",E,E,N,N],[17,"KERN_OSRELDATE",E,E,N,N],[17,"KERN_NTP_PLL",E,E,N,N],[17,"KERN_BOOTFILE",E,E,N,N],[17,"KERN_MAXFILESPERPROC",E,E,N,N],[17,"KERN_MAXPROCPERUID",E,E,N,N],[17,"KERN_DUMPDEV",E,E,N,N],[17,"KERN_IPC",E,E,N,N],[17,"KERN_DUMMY",E,E,N,N],[17,"KERN_PS_STRINGS",E,E,N,N],[17,"KERN_USRSTACK32",E,E,N,N],[17,"KERN_LOGSIGEXIT",E,E,N,N],[17,"KERN_SYMFILE",E,E,N,N],[17,"KERN_PROCARGS",E,E,N,N],[17,"KERN_NETBOOT",E,E,N,N],[17,"KERN_SYSV",E,E,N,N],[17,"KERN_AFFINITY",E,E,N,N],[17,"KERN_TRANSLATE",E,E,N,N],[17,"KERN_CLASSIC",E,E,N,N],[17,"KERN_EXEC",E,E,N,N],[17,"KERN_CLASSICHANDLER",E,E,N,N],[17,"KERN_AIOMAX",E,E,N,N],[17,"KERN_AIOPROCMAX",E,E,N,N],[17,"KERN_AIOTHREADS",E,E,N,N],[17,"KERN_COREFILE",E,E,N,N],[17,"KERN_COREDUMP",E,E,N,N],[17,"KERN_SUGID_COREDUMP",E,E,N,N],[17,"KERN_PROCDELAYTERM",E,E,N,N],[17,"KERN_SHREG_PRIVATIZABLE",E,E,N,N],[17,"KERN_LOW_PRI_WINDOW",E,E,N,N],[17,"KERN_LOW_PRI_DELAY",E,E,N,N],[17,"KERN_POSIX",E,E,N,N],[17,"KERN_USRSTACK64",E,E,N,N],[17,"KERN_NX_PROTECTION",E,E,N,N],[17,"KERN_TFP",E,E,N,N],[17,"KERN_PROCNAME",E,E,N,N],[17,"KERN_THALTSTACK",E,E,N,N],[17,"KERN_SPECULATIVE_READS",E,E,N,N],[17,"KERN_OSVERSION",E,E,N,N],[17,"KERN_SAFEBOOT",E,E,N,N],[17,"KERN_RAGEVNODE",E,E,N,N],[17,"KERN_TTY",E,E,N,N],[17,"KERN_CHECKOPENEVT",E,E,N,N],[17,"KERN_THREADNAME",E,E,N,N],[17,"KERN_MAXID",E,E,N,N],[17,"KERN_RAGE_PROC",E,E,N,N],[17,"KERN_RAGE_THREAD",E,E,N,N],[17,"KERN_UNRAGE_PROC",E,E,N,N],[17,"KERN_UNRAGE_THREAD",E,E,N,N],[17,"KERN_OPENEVT_PROC",E,E,N,N],[17,"KERN_UNOPENEVT_PROC",E,E,N,N],[17,"KERN_TFP_POLICY",E,E,N,N],[17,"KERN_TFP_POLICY_DENY",E,E,N,N],[17,"KERN_TFP_POLICY_DEFAULT",E,E,N,N],[17,"KERN_KDEFLAGS",E,E,N,N],[17,"KERN_KDDFLAGS",E,E,N,N],[17,"KERN_KDENABLE",E,E,N,N],[17,"KERN_KDSETBUF",E,E,N,N],[17,"KERN_KDGETBUF",E,E,N,N],[17,"KERN_KDSETUP",E,E,N,N],[17,"KERN_KDREMOVE",E,E,N,N],[17,"KERN_KDSETREG",E,E,N,N],[17,"KERN_KDGETREG",E,E,N,N],[17,"KERN_KDREADTR",E,E,N,N],[17,"KERN_KDPIDTR",E,E,N,N],[17,"KERN_KDTHRMAP",E,E,N,N],[17,"KERN_KDPIDEX",E,E,N,N],[17,"KERN_KDSETRTCDEC",E,E,N,N],[17,"KERN_KDGETENTROPY",E,E,N,N],[17,"KERN_KDWRITETR",E,E,N,N],[17,"KERN_KDWRITEMAP",E,E,N,N],[17,"KERN_KDENABLE_BG_TRACE",E,E,N,N],[17,"KERN_KDDISABLE_BG_TRACE",E,E,N,N],[17,"KERN_KDREADCURTHRMAP",E,E,N,N],[17,"KERN_KDSET_TYPEFILTER",E,E,N,N],[17,"KERN_KDBUFWAIT",E,E,N,N],[17,"KERN_KDCPUMAP",E,E,N,N],[17,"KERN_PROC_ALL",E,E,N,N],[17,"KERN_PROC_PID",E,E,N,N],[17,"KERN_PROC_PGRP",E,E,N,N],[17,"KERN_PROC_SESSION",E,E,N,N],[17,"KERN_PROC_TTY",E,E,N,N],[17,"KERN_PROC_UID",E,E,N,N],[17,"KERN_PROC_RUID",E,E,N,N],[17,"KERN_PROC_LCID",E,E,N,N],[17,"KIPC_MAXSOCKBUF",E,E,N,N],[17,"KIPC_SOCKBUF_WASTE",E,E,N,N],[17,"KIPC_SOMAXCONN",E,E,N,N],[17,"KIPC_MAX_LINKHDR",E,E,N,N],[17,"KIPC_MAX_PROTOHDR",E,E,N,N],[17,"KIPC_MAX_HDR",E,E,N,N],[17,"KIPC_MAX_DATALEN",E,E,N,N],[17,"KIPC_MBSTAT",E,E,N,N],[17,"KIPC_NMBCLUSTERS",E,E,N,N],[17,"KIPC_SOQLIMITCOMPAT",E,E,N,N],[17,"VM_METER",E,E,N,N],[17,"VM_LOADAVG",E,E,N,N],[17,"VM_MACHFACTOR",E,E,N,N],[17,"VM_SWAPUSAGE",E,E,N,N],[17,"VM_MAXID",E,E,N,N],[17,"HW_MACHINE",E,E,N,N],[17,"HW_MODEL",E,E,N,N],[17,"HW_NCPU",E,E,N,N],[17,"HW_BYTEORDER",E,E,N,N],[17,"HW_PHYSMEM",E,E,N,N],[17,"HW_USERMEM",E,E,N,N],[17,"HW_PAGESIZE",E,E,N,N],[17,"HW_DISKNAMES",E,E,N,N],[17,"HW_DISKSTATS",E,E,N,N],[17,"HW_EPOCH",E,E,N,N],[17,"HW_FLOATINGPT",E,E,N,N],[17,"HW_MACHINE_ARCH",E,E,N,N],[17,"HW_VECTORUNIT",E,E,N,N],[17,"HW_BUS_FREQ",E,E,N,N],[17,"HW_CPU_FREQ",E,E,N,N],[17,"HW_CACHELINE",E,E,N,N],[17,"HW_L1ICACHESIZE",E,E,N,N],[17,"HW_L1DCACHESIZE",E,E,N,N],[17,"HW_L2SETTINGS",E,E,N,N],[17,"HW_L2CACHESIZE",E,E,N,N],[17,"HW_L3SETTINGS",E,E,N,N],[17,"HW_L3CACHESIZE",E,E,N,N],[17,"HW_TB_FREQ",E,E,N,N],[17,"HW_MEMSIZE",E,E,N,N],[17,"HW_AVAILCPU",E,E,N,N],[17,"HW_MAXID",E,E,N,N],[17,"USER_CS_PATH",E,E,N,N],[17,"USER_BC_BASE_MAX",E,E,N,N],[17,"USER_BC_DIM_MAX",E,E,N,N],[17,"USER_BC_SCALE_MAX",E,E,N,N],[17,"USER_BC_STRING_MAX",E,E,N,N],[17,"USER_COLL_WEIGHTS_MAX",E,E,N,N],[17,"USER_EXPR_NEST_MAX",E,E,N,N],[17,"USER_LINE_MAX",E,E,N,N],[17,"USER_RE_DUP_MAX",E,E,N,N],[17,"USER_POSIX2_VERSION",E,E,N,N],[17,"USER_POSIX2_C_BIND",E,E,N,N],[17,"USER_POSIX2_C_DEV",E,E,N,N],[17,"USER_POSIX2_CHAR_TERM",E,E,N,N],[17,"USER_POSIX2_FORT_DEV",E,E,N,N],[17,"USER_POSIX2_FORT_RUN",E,E,N,N],[17,"USER_POSIX2_LOCALEDEF",E,E,N,N],[17,"USER_POSIX2_SW_DEV",E,E,N,N],[17,"USER_POSIX2_UPE",E,E,N,N],[17,"USER_STREAM_MAX",E,E,N,N],[17,"USER_TZNAME_MAX",E,E,N,N],[17,"USER_MAXID",E,E,N,N],[17,"CTL_DEBUG_NAME",E,E,N,N],[17,"CTL_DEBUG_VALUE",E,E,N,N],[17,"CTL_DEBUG_MAXID",E,E,N,N],[17,"PRIO_DARWIN_THREAD",E,E,N,N],[17,"PRIO_DARWIN_PROCESS",E,E,N,N],[17,"PRIO_DARWIN_BG",E,E,N,N],[17,"PRIO_DARWIN_NONUI",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"AI_MASK",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_V4MAPPED_CFG",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_DEFAULT",E,E,N,N],[17,"AI_UNUSABLE",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"AIO_LISTIO_MAX",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"XATTR_NOFOLLOW",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"XATTR_NOSECURITY",E,E,N,N],[17,"XATTR_NODEFAULT",E,E,N,N],[17,"XATTR_SHOWCOMPRESSION",E,E,N,N],[17,"NET_RT_IFLIST2",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_DONE",E,E,N,N],[17,"RTF_DELCLONE",E,E,N,N],[17,"RTF_CLONING",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_LLINFO",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_BLACKHOLE",E,E,N,N],[17,"RTF_NOIFREF",E,E,N,N],[17,"RTF_PROTO2",E,E,N,N],[17,"RTF_PROTO1",E,E,N,N],[17,"RTF_PRCLONING",E,E,N,N],[17,"RTF_WASCLONED",E,E,N,N],[17,"RTF_PROTO3",E,E,N,N],[17,"RTF_PINNED",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_IFSCOPE",E,E,N,N],[17,"RTF_CONDEMNED",E,E,N,N],[17,"RTF_IFREF",E,E,N,N],[17,"RTF_PROXY",E,E,N,N],[17,"RTF_ROUTER",E,E,N,N],[17,"RTM_VERSION",E,E,N,N],[17,"RTM_ADD",E,E,N,N],[17,"RTM_DELETE",E,E,N,N],[17,"RTM_CHANGE",E,E,N,N],[17,"RTM_GET",E,E,N,N],[17,"RTM_LOSING",E,E,N,N],[17,"RTM_REDIRECT",E,E,N,N],[17,"RTM_MISS",E,E,N,N],[17,"RTM_LOCK",E,E,N,N],[17,"RTM_OLDADD",E,E,N,N],[17,"RTM_OLDDEL",E,E,N,N],[17,"RTM_RESOLVE",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_IFINFO",E,E,N,N],[17,"RTM_NEWMADDR",E,E,N,N],[17,"RTM_DELMADDR",E,E,N,N],[17,"RTM_IFINFO2",E,E,N,N],[17,"RTM_NEWMADDR2",E,E,N,N],[17,"RTM_GET2",E,E,N,N],[17,"RTV_MTU",E,E,N,N],[17,"RTV_HOPCOUNT",E,E,N,N],[17,"RTV_EXPIRE",E,E,N,N],[17,"RTV_RPIPE",E,E,N,N],[17,"RTV_SPIPE",E,E,N,N],[17,"RTV_SSTHRESH",E,E,N,N],[17,"RTV_RTT",E,E,N,N],[17,"RTV_RTTVAR",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_NETMASK",E,E,N,N],[17,"RTA_GENMASK",E,E,N,N],[17,"RTA_IFP",E,E,N,N],[17,"RTA_IFA",E,E,N,N],[17,"RTA_AUTHOR",E,E,N,N],[17,"RTA_BRD",E,E,N,N],[17,"RTAX_DST",E,E,N,N],[17,"RTAX_GATEWAY",E,E,N,N],[17,"RTAX_NETMASK",E,E,N,N],[17,"RTAX_GENMASK",E,E,N,N],[17,"RTAX_IFP",E,E,N,N],[17,"RTAX_IFA",E,E,N,N],[17,"RTAX_AUTHOR",E,E,N,N],[17,"RTAX_BRD",E,E,N,N],[17,"RTAX_MAX",E,E,N,N],[17,"KERN_PROCARGS2",E,E,N,N],[17,"PROC_PIDTASKALLINFO",E,E,N,N],[17,"PROC_PIDTASKINFO",E,E,N,N],[17,"PROC_PIDTHREADINFO",E,E,N,N],[17,"MAXCOMLEN",E,E,N,N],[17,"MAXTHREADNAMESIZE",E,E,N,N],[17,"XUCRED_VERSION",E,E,N,N],[17,"LC_SEGMENT",E,E,N,N],[17,"LC_SEGMENT_64",E,E,N,N],[17,"MH_MAGIC",E,E,N,N],[17,"MH_MAGIC_64",E,E,N,N],[17,"UTUN_OPT_FLAGS",E,E,N,N],[17,"UTUN_OPT_IFNAME",E,E,N,N],[17,"DLT_NULL",E,E,N,N],[17,"DLT_EN10MB",E,E,N,N],[17,"DLT_EN3MB",E,E,N,N],[17,"DLT_AX25",E,E,N,N],[17,"DLT_PRONET",E,E,N,N],[17,"DLT_CHAOS",E,E,N,N],[17,"DLT_IEEE802",E,E,N,N],[17,"DLT_ARCNET",E,E,N,N],[17,"DLT_SLIP",E,E,N,N],[17,"DLT_PPP",E,E,N,N],[17,"DLT_FDDI",E,E,N,N],[17,"DLT_ATM_RFC1483",E,E,N,N],[17,"DLT_RAW",E,E,N,N],[17,"DLT_LOOP",E,E,N,N],[17,"BPF_ALIGNMENT",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETEXEC",E,E,N,N],[17,"POSIX_SPAWN_START_SUSPENDED",E,E,N,N],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_R",E,E,N,N],[17,"IPC_W",E,E,N,N],[17,"IPC_M",E,E,N,N],[17,"SEM_UNDO",E,E,N,N],[17,"GETNCNT",E,E,N,N],[17,"GETPID",E,E,N,N],[17,"GETVAL",E,E,N,N],[17,"GETALL",E,E,N,N],[17,"GETZCNT",E,E,N,N],[17,"SETVAL",E,E,N,N],[17,"SETALL",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHMLBA",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"UF_SETTABLE",E,E,N,N],[17,"UF_NODUMP",E,E,N,N],[17,"UF_IMMUTABLE",E,E,N,N],[17,"UF_APPEND",E,E,N,N],[17,"UF_OPAQUE",E,E,N,N],[17,"UF_COMPRESSED",E,E,N,N],[17,"UF_TRACKED",E,E,N,N],[17,"SF_SETTABLE",E,E,N,N],[17,"SF_ARCHIVED",E,E,N,N],[17,"SF_IMMUTABLE",E,E,N,N],[17,"SF_APPEND",E,E,N,N],[17,"UF_HIDDEN",E,E,N,N],[17,"__PTHREAD_MUTEX_SIZE__",E,E,N,N],[17,"__PTHREAD_COND_SIZE__",E,E,N,N],[17,"__PTHREAD_CONDATTR_SIZE__",E,E,N,N],[17,"__PTHREAD_RWLOCK_SIZE__",E,E,N,N],[17,"__PTHREAD_RWLOCKATTR_SIZE__",E,E,N,N],[17,"TIOCTIMESTAMP",E,E,N,N],[17,"TIOCDCDTIMESTAMP",E,E,N,N],[11,"from",E,E,81,[[[T]],[T]]],[11,R[1],E,E,81,[[[U]],[R[0]]]],[11,"into",E,E,81,[[],[U]]],[11,R[2],E,E,81,[[],[R[0]]]],[11,R[3],E,E,81,[[["self"]],[T]]],[11,R[4],E,E,81,[[["self"]],[T]]],[11,R[5],E,E,81,[[["self"]],[R[6]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,"into",E,E,4,[[],[U]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[1],E,E,5,[[[U]],[R[0]]]],[11,"into",E,E,5,[[],[U]]],[11,R[2],E,E,5,[[],[R[0]]]],[11,R[3],E,E,5,[[["self"]],[T]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[R[6]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[1],E,E,6,[[[U]],[R[0]]]],[11,"into",E,E,6,[[],[U]]],[11,R[2],E,E,6,[[],[R[0]]]],[11,R[3],E,E,6,[[["self"]],[T]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[R[6]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[1],E,E,7,[[[U]],[R[0]]]],[11,"into",E,E,7,[[],[U]]],[11,R[2],E,E,7,[[],[R[0]]]],[11,R[3],E,E,7,[[["self"]],[T]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[R[6]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[1],E,E,8,[[[U]],[R[0]]]],[11,"into",E,E,8,[[],[U]]],[11,R[2],E,E,8,[[],[R[0]]]],[11,R[3],E,E,8,[[["self"]],[T]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[R[6]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[1],E,E,9,[[[U]],[R[0]]]],[11,"into",E,E,9,[[],[U]]],[11,R[2],E,E,9,[[],[R[0]]]],[11,R[3],E,E,9,[[["self"]],[T]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[R[6]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[1],E,E,10,[[[U]],[R[0]]]],[11,"into",E,E,10,[[],[U]]],[11,R[2],E,E,10,[[],[R[0]]]],[11,R[3],E,E,10,[[["self"]],[T]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[R[6]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[1],E,E,11,[[[U]],[R[0]]]],[11,"into",E,E,11,[[],[U]]],[11,R[2],E,E,11,[[],[R[0]]]],[11,R[3],E,E,11,[[["self"]],[T]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[R[6]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[1],E,E,12,[[[U]],[R[0]]]],[11,"into",E,E,12,[[],[U]]],[11,R[2],E,E,12,[[],[R[0]]]],[11,R[3],E,E,12,[[["self"]],[T]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[R[6]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[1],E,E,13,[[[U]],[R[0]]]],[11,"into",E,E,13,[[],[U]]],[11,R[2],E,E,13,[[],[R[0]]]],[11,R[3],E,E,13,[[["self"]],[T]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[R[6]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[1],E,E,14,[[[U]],[R[0]]]],[11,"into",E,E,14,[[],[U]]],[11,R[2],E,E,14,[[],[R[0]]]],[11,R[3],E,E,14,[[["self"]],[T]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[R[6]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[1],E,E,15,[[[U]],[R[0]]]],[11,"into",E,E,15,[[],[U]]],[11,R[2],E,E,15,[[],[R[0]]]],[11,R[3],E,E,15,[[["self"]],[T]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[R[6]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[1],E,E,16,[[[U]],[R[0]]]],[11,"into",E,E,16,[[],[U]]],[11,R[2],E,E,16,[[],[R[0]]]],[11,R[3],E,E,16,[[["self"]],[T]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[R[6]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[1],E,E,17,[[[U]],[R[0]]]],[11,"into",E,E,17,[[],[U]]],[11,R[2],E,E,17,[[],[R[0]]]],[11,R[3],E,E,17,[[["self"]],[T]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[R[6]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[1],E,E,18,[[[U]],[R[0]]]],[11,"into",E,E,18,[[],[U]]],[11,R[2],E,E,18,[[],[R[0]]]],[11,R[3],E,E,18,[[["self"]],[T]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[R[6]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[1],E,E,19,[[[U]],[R[0]]]],[11,"into",E,E,19,[[],[U]]],[11,R[2],E,E,19,[[],[R[0]]]],[11,R[3],E,E,19,[[["self"]],[T]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[R[6]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[1],E,E,20,[[[U]],[R[0]]]],[11,"into",E,E,20,[[],[U]]],[11,R[2],E,E,20,[[],[R[0]]]],[11,R[3],E,E,20,[[["self"]],[T]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[R[6]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[1],E,E,82,[[[U]],[R[0]]]],[11,"into",E,E,82,[[],[U]]],[11,R[2],E,E,82,[[],[R[0]]]],[11,R[3],E,E,82,[[["self"]],[T]]],[11,R[4],E,E,82,[[["self"]],[T]]],[11,R[5],E,E,82,[[["self"]],[R[6]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[1],E,E,21,[[[U]],[R[0]]]],[11,"into",E,E,21,[[],[U]]],[11,R[2],E,E,21,[[],[R[0]]]],[11,R[3],E,E,21,[[["self"]],[T]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[R[6]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[1],E,E,22,[[[U]],[R[0]]]],[11,"into",E,E,22,[[],[U]]],[11,R[2],E,E,22,[[],[R[0]]]],[11,R[3],E,E,22,[[["self"]],[T]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[R[6]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[1],E,E,23,[[[U]],[R[0]]]],[11,"into",E,E,23,[[],[U]]],[11,R[2],E,E,23,[[],[R[0]]]],[11,R[3],E,E,23,[[["self"]],[T]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[R[6]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[1],E,E,83,[[[U]],[R[0]]]],[11,"into",E,E,83,[[],[U]]],[11,R[2],E,E,83,[[],[R[0]]]],[11,R[3],E,E,83,[[["self"]],[T]]],[11,R[4],E,E,83,[[["self"]],[T]]],[11,R[5],E,E,83,[[["self"]],[R[6]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[1],E,E,24,[[[U]],[R[0]]]],[11,"into",E,E,24,[[],[U]]],[11,R[2],E,E,24,[[],[R[0]]]],[11,R[3],E,E,24,[[["self"]],[T]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[R[6]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[1],E,E,25,[[[U]],[R[0]]]],[11,"into",E,E,25,[[],[U]]],[11,R[2],E,E,25,[[],[R[0]]]],[11,R[3],E,E,25,[[["self"]],[T]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[R[6]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[1],E,E,26,[[[U]],[R[0]]]],[11,"into",E,E,26,[[],[U]]],[11,R[2],E,E,26,[[],[R[0]]]],[11,R[3],E,E,26,[[["self"]],[T]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[R[6]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[1],E,E,27,[[[U]],[R[0]]]],[11,"into",E,E,27,[[],[U]]],[11,R[2],E,E,27,[[],[R[0]]]],[11,R[3],E,E,27,[[["self"]],[T]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[R[6]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[1],E,E,28,[[[U]],[R[0]]]],[11,"into",E,E,28,[[],[U]]],[11,R[2],E,E,28,[[],[R[0]]]],[11,R[3],E,E,28,[[["self"]],[T]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[R[6]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[1],E,E,29,[[[U]],[R[0]]]],[11,"into",E,E,29,[[],[U]]],[11,R[2],E,E,29,[[],[R[0]]]],[11,R[3],E,E,29,[[["self"]],[T]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[R[6]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[1],E,E,30,[[[U]],[R[0]]]],[11,"into",E,E,30,[[],[U]]],[11,R[2],E,E,30,[[],[R[0]]]],[11,R[3],E,E,30,[[["self"]],[T]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[R[6]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[1],E,E,31,[[[U]],[R[0]]]],[11,"into",E,E,31,[[],[U]]],[11,R[2],E,E,31,[[],[R[0]]]],[11,R[3],E,E,31,[[["self"]],[T]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[R[6]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[1],E,E,32,[[[U]],[R[0]]]],[11,"into",E,E,32,[[],[U]]],[11,R[2],E,E,32,[[],[R[0]]]],[11,R[3],E,E,32,[[["self"]],[T]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[R[6]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[1],E,E,84,[[[U]],[R[0]]]],[11,"into",E,E,84,[[],[U]]],[11,R[2],E,E,84,[[],[R[0]]]],[11,R[3],E,E,84,[[["self"]],[T]]],[11,R[4],E,E,84,[[["self"]],[T]]],[11,R[5],E,E,84,[[["self"]],[R[6]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[1],E,E,85,[[[U]],[R[0]]]],[11,"into",E,E,85,[[],[U]]],[11,R[2],E,E,85,[[],[R[0]]]],[11,R[3],E,E,85,[[["self"]],[T]]],[11,R[4],E,E,85,[[["self"]],[T]]],[11,R[5],E,E,85,[[["self"]],[R[6]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[1],E,E,86,[[[U]],[R[0]]]],[11,"into",E,E,86,[[],[U]]],[11,R[2],E,E,86,[[],[R[0]]]],[11,R[3],E,E,86,[[["self"]],[T]]],[11,R[4],E,E,86,[[["self"]],[T]]],[11,R[5],E,E,86,[[["self"]],[R[6]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[1],E,E,33,[[[U]],[R[0]]]],[11,"into",E,E,33,[[],[U]]],[11,R[2],E,E,33,[[],[R[0]]]],[11,R[3],E,E,33,[[["self"]],[T]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[R[6]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[1],E,E,34,[[[U]],[R[0]]]],[11,"into",E,E,34,[[],[U]]],[11,R[2],E,E,34,[[],[R[0]]]],[11,R[3],E,E,34,[[["self"]],[T]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[R[6]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[1],E,E,35,[[[U]],[R[0]]]],[11,"into",E,E,35,[[],[U]]],[11,R[2],E,E,35,[[],[R[0]]]],[11,R[3],E,E,35,[[["self"]],[T]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[R[6]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[1],E,E,36,[[[U]],[R[0]]]],[11,"into",E,E,36,[[],[U]]],[11,R[2],E,E,36,[[],[R[0]]]],[11,R[3],E,E,36,[[["self"]],[T]]],[11,R[4],E,E,36,[[["self"]],[T]]],[11,R[5],E,E,36,[[["self"]],[R[6]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[1],E,E,37,[[[U]],[R[0]]]],[11,"into",E,E,37,[[],[U]]],[11,R[2],E,E,37,[[],[R[0]]]],[11,R[3],E,E,37,[[["self"]],[T]]],[11,R[4],E,E,37,[[["self"]],[T]]],[11,R[5],E,E,37,[[["self"]],[R[6]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[1],E,E,38,[[[U]],[R[0]]]],[11,"into",E,E,38,[[],[U]]],[11,R[2],E,E,38,[[],[R[0]]]],[11,R[3],E,E,38,[[["self"]],[T]]],[11,R[4],E,E,38,[[["self"]],[T]]],[11,R[5],E,E,38,[[["self"]],[R[6]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[1],E,E,39,[[[U]],[R[0]]]],[11,"into",E,E,39,[[],[U]]],[11,R[2],E,E,39,[[],[R[0]]]],[11,R[3],E,E,39,[[["self"]],[T]]],[11,R[4],E,E,39,[[["self"]],[T]]],[11,R[5],E,E,39,[[["self"]],[R[6]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[1],E,E,40,[[[U]],[R[0]]]],[11,"into",E,E,40,[[],[U]]],[11,R[2],E,E,40,[[],[R[0]]]],[11,R[3],E,E,40,[[["self"]],[T]]],[11,R[4],E,E,40,[[["self"]],[T]]],[11,R[5],E,E,40,[[["self"]],[R[6]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[1],E,E,41,[[[U]],[R[0]]]],[11,"into",E,E,41,[[],[U]]],[11,R[2],E,E,41,[[],[R[0]]]],[11,R[3],E,E,41,[[["self"]],[T]]],[11,R[4],E,E,41,[[["self"]],[T]]],[11,R[5],E,E,41,[[["self"]],[R[6]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[1],E,E,42,[[[U]],[R[0]]]],[11,"into",E,E,42,[[],[U]]],[11,R[2],E,E,42,[[],[R[0]]]],[11,R[3],E,E,42,[[["self"]],[T]]],[11,R[4],E,E,42,[[["self"]],[T]]],[11,R[5],E,E,42,[[["self"]],[R[6]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[1],E,E,43,[[[U]],[R[0]]]],[11,"into",E,E,43,[[],[U]]],[11,R[2],E,E,43,[[],[R[0]]]],[11,R[3],E,E,43,[[["self"]],[T]]],[11,R[4],E,E,43,[[["self"]],[T]]],[11,R[5],E,E,43,[[["self"]],[R[6]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[1],E,E,44,[[[U]],[R[0]]]],[11,"into",E,E,44,[[],[U]]],[11,R[2],E,E,44,[[],[R[0]]]],[11,R[3],E,E,44,[[["self"]],[T]]],[11,R[4],E,E,44,[[["self"]],[T]]],[11,R[5],E,E,44,[[["self"]],[R[6]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[1],E,E,45,[[[U]],[R[0]]]],[11,"into",E,E,45,[[],[U]]],[11,R[2],E,E,45,[[],[R[0]]]],[11,R[3],E,E,45,[[["self"]],[T]]],[11,R[4],E,E,45,[[["self"]],[T]]],[11,R[5],E,E,45,[[["self"]],[R[6]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[1],E,E,46,[[[U]],[R[0]]]],[11,"into",E,E,46,[[],[U]]],[11,R[2],E,E,46,[[],[R[0]]]],[11,R[3],E,E,46,[[["self"]],[T]]],[11,R[4],E,E,46,[[["self"]],[T]]],[11,R[5],E,E,46,[[["self"]],[R[6]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[1],E,E,47,[[[U]],[R[0]]]],[11,"into",E,E,47,[[],[U]]],[11,R[2],E,E,47,[[],[R[0]]]],[11,R[3],E,E,47,[[["self"]],[T]]],[11,R[4],E,E,47,[[["self"]],[T]]],[11,R[5],E,E,47,[[["self"]],[R[6]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[1],E,E,48,[[[U]],[R[0]]]],[11,"into",E,E,48,[[],[U]]],[11,R[2],E,E,48,[[],[R[0]]]],[11,R[3],E,E,48,[[["self"]],[T]]],[11,R[4],E,E,48,[[["self"]],[T]]],[11,R[5],E,E,48,[[["self"]],[R[6]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[1],E,E,49,[[[U]],[R[0]]]],[11,"into",E,E,49,[[],[U]]],[11,R[2],E,E,49,[[],[R[0]]]],[11,R[3],E,E,49,[[["self"]],[T]]],[11,R[4],E,E,49,[[["self"]],[T]]],[11,R[5],E,E,49,[[["self"]],[R[6]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[1],E,E,50,[[[U]],[R[0]]]],[11,"into",E,E,50,[[],[U]]],[11,R[2],E,E,50,[[],[R[0]]]],[11,R[3],E,E,50,[[["self"]],[T]]],[11,R[4],E,E,50,[[["self"]],[T]]],[11,R[5],E,E,50,[[["self"]],[R[6]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[1],E,E,51,[[[U]],[R[0]]]],[11,"into",E,E,51,[[],[U]]],[11,R[2],E,E,51,[[],[R[0]]]],[11,R[3],E,E,51,[[["self"]],[T]]],[11,R[4],E,E,51,[[["self"]],[T]]],[11,R[5],E,E,51,[[["self"]],[R[6]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[1],E,E,52,[[[U]],[R[0]]]],[11,"into",E,E,52,[[],[U]]],[11,R[2],E,E,52,[[],[R[0]]]],[11,R[3],E,E,52,[[["self"]],[T]]],[11,R[4],E,E,52,[[["self"]],[T]]],[11,R[5],E,E,52,[[["self"]],[R[6]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[1],E,E,53,[[[U]],[R[0]]]],[11,"into",E,E,53,[[],[U]]],[11,R[2],E,E,53,[[],[R[0]]]],[11,R[3],E,E,53,[[["self"]],[T]]],[11,R[4],E,E,53,[[["self"]],[T]]],[11,R[5],E,E,53,[[["self"]],[R[6]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[1],E,E,54,[[[U]],[R[0]]]],[11,"into",E,E,54,[[],[U]]],[11,R[2],E,E,54,[[],[R[0]]]],[11,R[3],E,E,54,[[["self"]],[T]]],[11,R[4],E,E,54,[[["self"]],[T]]],[11,R[5],E,E,54,[[["self"]],[R[6]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[1],E,E,55,[[[U]],[R[0]]]],[11,"into",E,E,55,[[],[U]]],[11,R[2],E,E,55,[[],[R[0]]]],[11,R[3],E,E,55,[[["self"]],[T]]],[11,R[4],E,E,55,[[["self"]],[T]]],[11,R[5],E,E,55,[[["self"]],[R[6]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[1],E,E,56,[[[U]],[R[0]]]],[11,"into",E,E,56,[[],[U]]],[11,R[2],E,E,56,[[],[R[0]]]],[11,R[3],E,E,56,[[["self"]],[T]]],[11,R[4],E,E,56,[[["self"]],[T]]],[11,R[5],E,E,56,[[["self"]],[R[6]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[1],E,E,57,[[[U]],[R[0]]]],[11,"into",E,E,57,[[],[U]]],[11,R[2],E,E,57,[[],[R[0]]]],[11,R[3],E,E,57,[[["self"]],[T]]],[11,R[4],E,E,57,[[["self"]],[T]]],[11,R[5],E,E,57,[[["self"]],[R[6]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[1],E,E,58,[[[U]],[R[0]]]],[11,"into",E,E,58,[[],[U]]],[11,R[2],E,E,58,[[],[R[0]]]],[11,R[3],E,E,58,[[["self"]],[T]]],[11,R[4],E,E,58,[[["self"]],[T]]],[11,R[5],E,E,58,[[["self"]],[R[6]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[1],E,E,59,[[[U]],[R[0]]]],[11,"into",E,E,59,[[],[U]]],[11,R[2],E,E,59,[[],[R[0]]]],[11,R[3],E,E,59,[[["self"]],[T]]],[11,R[4],E,E,59,[[["self"]],[T]]],[11,R[5],E,E,59,[[["self"]],[R[6]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[1],E,E,60,[[[U]],[R[0]]]],[11,"into",E,E,60,[[],[U]]],[11,R[2],E,E,60,[[],[R[0]]]],[11,R[3],E,E,60,[[["self"]],[T]]],[11,R[4],E,E,60,[[["self"]],[T]]],[11,R[5],E,E,60,[[["self"]],[R[6]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[1],E,E,61,[[[U]],[R[0]]]],[11,"into",E,E,61,[[],[U]]],[11,R[2],E,E,61,[[],[R[0]]]],[11,R[3],E,E,61,[[["self"]],[T]]],[11,R[4],E,E,61,[[["self"]],[T]]],[11,R[5],E,E,61,[[["self"]],[R[6]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[1],E,E,62,[[[U]],[R[0]]]],[11,"into",E,E,62,[[],[U]]],[11,R[2],E,E,62,[[],[R[0]]]],[11,R[3],E,E,62,[[["self"]],[T]]],[11,R[4],E,E,62,[[["self"]],[T]]],[11,R[5],E,E,62,[[["self"]],[R[6]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[1],E,E,63,[[[U]],[R[0]]]],[11,"into",E,E,63,[[],[U]]],[11,R[2],E,E,63,[[],[R[0]]]],[11,R[3],E,E,63,[[["self"]],[T]]],[11,R[4],E,E,63,[[["self"]],[T]]],[11,R[5],E,E,63,[[["self"]],[R[6]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[1],E,E,64,[[[U]],[R[0]]]],[11,"into",E,E,64,[[],[U]]],[11,R[2],E,E,64,[[],[R[0]]]],[11,R[3],E,E,64,[[["self"]],[T]]],[11,R[4],E,E,64,[[["self"]],[T]]],[11,R[5],E,E,64,[[["self"]],[R[6]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[1],E,E,65,[[[U]],[R[0]]]],[11,"into",E,E,65,[[],[U]]],[11,R[2],E,E,65,[[],[R[0]]]],[11,R[3],E,E,65,[[["self"]],[T]]],[11,R[4],E,E,65,[[["self"]],[T]]],[11,R[5],E,E,65,[[["self"]],[R[6]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[1],E,E,66,[[[U]],[R[0]]]],[11,"into",E,E,66,[[],[U]]],[11,R[2],E,E,66,[[],[R[0]]]],[11,R[3],E,E,66,[[["self"]],[T]]],[11,R[4],E,E,66,[[["self"]],[T]]],[11,R[5],E,E,66,[[["self"]],[R[6]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[1],E,E,67,[[[U]],[R[0]]]],[11,"into",E,E,67,[[],[U]]],[11,R[2],E,E,67,[[],[R[0]]]],[11,R[3],E,E,67,[[["self"]],[T]]],[11,R[4],E,E,67,[[["self"]],[T]]],[11,R[5],E,E,67,[[["self"]],[R[6]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[1],E,E,68,[[[U]],[R[0]]]],[11,"into",E,E,68,[[],[U]]],[11,R[2],E,E,68,[[],[R[0]]]],[11,R[3],E,E,68,[[["self"]],[T]]],[11,R[4],E,E,68,[[["self"]],[T]]],[11,R[5],E,E,68,[[["self"]],[R[6]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[1],E,E,69,[[[U]],[R[0]]]],[11,"into",E,E,69,[[],[U]]],[11,R[2],E,E,69,[[],[R[0]]]],[11,R[3],E,E,69,[[["self"]],[T]]],[11,R[4],E,E,69,[[["self"]],[T]]],[11,R[5],E,E,69,[[["self"]],[R[6]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[1],E,E,70,[[[U]],[R[0]]]],[11,"into",E,E,70,[[],[U]]],[11,R[2],E,E,70,[[],[R[0]]]],[11,R[3],E,E,70,[[["self"]],[T]]],[11,R[4],E,E,70,[[["self"]],[T]]],[11,R[5],E,E,70,[[["self"]],[R[6]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[1],E,E,71,[[[U]],[R[0]]]],[11,"into",E,E,71,[[],[U]]],[11,R[2],E,E,71,[[],[R[0]]]],[11,R[3],E,E,71,[[["self"]],[T]]],[11,R[4],E,E,71,[[["self"]],[T]]],[11,R[5],E,E,71,[[["self"]],[R[6]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[1],E,E,72,[[[U]],[R[0]]]],[11,"into",E,E,72,[[],[U]]],[11,R[2],E,E,72,[[],[R[0]]]],[11,R[3],E,E,72,[[["self"]],[T]]],[11,R[4],E,E,72,[[["self"]],[T]]],[11,R[5],E,E,72,[[["self"]],[R[6]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[1],E,E,73,[[[U]],[R[0]]]],[11,"into",E,E,73,[[],[U]]],[11,R[2],E,E,73,[[],[R[0]]]],[11,R[3],E,E,73,[[["self"]],[T]]],[11,R[4],E,E,73,[[["self"]],[T]]],[11,R[5],E,E,73,[[["self"]],[R[6]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[1],E,E,87,[[[U]],[R[0]]]],[11,"into",E,E,87,[[],[U]]],[11,R[2],E,E,87,[[],[R[0]]]],[11,R[3],E,E,87,[[["self"]],[T]]],[11,R[4],E,E,87,[[["self"]],[T]]],[11,R[5],E,E,87,[[["self"]],[R[6]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[1],E,E,88,[[[U]],[R[0]]]],[11,"into",E,E,88,[[],[U]]],[11,R[2],E,E,88,[[],[R[0]]]],[11,R[3],E,E,88,[[["self"]],[T]]],[11,R[4],E,E,88,[[["self"]],[T]]],[11,R[5],E,E,88,[[["self"]],[R[6]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[1],E,E,89,[[[U]],[R[0]]]],[11,"into",E,E,89,[[],[U]]],[11,R[2],E,E,89,[[],[R[0]]]],[11,R[3],E,E,89,[[["self"]],[T]]],[11,R[4],E,E,89,[[["self"]],[T]]],[11,R[5],E,E,89,[[["self"]],[R[6]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[1],E,E,74,[[[U]],[R[0]]]],[11,"into",E,E,74,[[],[U]]],[11,R[2],E,E,74,[[],[R[0]]]],[11,R[3],E,E,74,[[["self"]],[T]]],[11,R[4],E,E,74,[[["self"]],[T]]],[11,R[5],E,E,74,[[["self"]],[R[6]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[1],E,E,75,[[[U]],[R[0]]]],[11,"into",E,E,75,[[],[U]]],[11,R[2],E,E,75,[[],[R[0]]]],[11,R[3],E,E,75,[[["self"]],[T]]],[11,R[4],E,E,75,[[["self"]],[T]]],[11,R[5],E,E,75,[[["self"]],[R[6]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[1],E,E,76,[[[U]],[R[0]]]],[11,"into",E,E,76,[[],[U]]],[11,R[2],E,E,76,[[],[R[0]]]],[11,R[3],E,E,76,[[["self"]],[T]]],[11,R[4],E,E,76,[[["self"]],[T]]],[11,R[5],E,E,76,[[["self"]],[R[6]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[1],E,E,77,[[[U]],[R[0]]]],[11,"into",E,E,77,[[],[U]]],[11,R[2],E,E,77,[[],[R[0]]]],[11,R[3],E,E,77,[[["self"]],[T]]],[11,R[4],E,E,77,[[["self"]],[T]]],[11,R[5],E,E,77,[[["self"]],[R[6]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[1],E,E,78,[[[U]],[R[0]]]],[11,"into",E,E,78,[[],[U]]],[11,R[2],E,E,78,[[],[R[0]]]],[11,R[3],E,E,78,[[["self"]],[T]]],[11,R[4],E,E,78,[[["self"]],[T]]],[11,R[5],E,E,78,[[["self"]],[R[6]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[1],E,E,90,[[[U]],[R[0]]]],[11,"into",E,E,90,[[],[U]]],[11,R[2],E,E,90,[[],[R[0]]]],[11,R[3],E,E,90,[[["self"]],[T]]],[11,R[4],E,E,90,[[["self"]],[T]]],[11,R[5],E,E,90,[[["self"]],[R[6]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[1],E,E,79,[[[U]],[R[0]]]],[11,"into",E,E,79,[[],[U]]],[11,R[2],E,E,79,[[],[R[0]]]],[11,R[3],E,E,79,[[["self"]],[T]]],[11,R[4],E,E,79,[[["self"]],[T]]],[11,R[5],E,E,79,[[["self"]],[R[6]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[1],E,E,80,[[[U]],[R[0]]]],[11,"into",E,E,80,[[],[U]]],[11,R[2],E,E,80,[[],[R[0]]]],[11,R[3],E,E,80,[[["self"]],[T]]],[11,R[4],E,E,80,[[["self"]],[T]]],[11,R[5],E,E,80,[[["self"]],[R[6]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[1],E,E,91,[[[U]],[R[0]]]],[11,"into",E,E,91,[[],[U]]],[11,R[2],E,E,91,[[],[R[0]]]],[11,R[3],E,E,91,[[["self"]],[T]]],[11,R[4],E,E,91,[[["self"]],[T]]],[11,R[5],E,E,91,[[["self"]],[R[6]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[1],E,E,92,[[[U]],[R[0]]]],[11,"into",E,E,92,[[],[U]]],[11,R[2],E,E,92,[[],[R[0]]]],[11,R[3],E,E,92,[[["self"]],[T]]],[11,R[4],E,E,92,[[["self"]],[T]]],[11,R[5],E,E,92,[[["self"]],[R[6]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[1],E,E,93,[[[U]],[R[0]]]],[11,"into",E,E,93,[[],[U]]],[11,R[2],E,E,93,[[],[R[0]]]],[11,R[3],E,E,93,[[["self"]],[T]]],[11,R[4],E,E,93,[[["self"]],[T]]],[11,R[5],E,E,93,[[["self"]],[R[6]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[1],E,E,94,[[[U]],[R[0]]]],[11,"into",E,E,94,[[],[U]]],[11,R[2],E,E,94,[[],[R[0]]]],[11,R[3],E,E,94,[[["self"]],[T]]],[11,R[4],E,E,94,[[["self"]],[T]]],[11,R[5],E,E,94,[[["self"]],[R[6]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[1],E,E,95,[[[U]],[R[0]]]],[11,"into",E,E,95,[[],[U]]],[11,R[2],E,E,95,[[],[R[0]]]],[11,R[3],E,E,95,[[["self"]],[T]]],[11,R[4],E,E,95,[[["self"]],[T]]],[11,R[5],E,E,95,[[["self"]],[R[6]]]],[11,"fmt",E,E,81,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"clone",E,E,91,[[["self"]],["dir"]]],[11,"clone",E,E,92,[[["self"]],[R[183]]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[173]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[140]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[141]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[174]]]],[11,"clone",E,E,93,[[["self"]],["file"]]],[11,"clone",E,E,94,[[["self"]],["fpos_t"]]],[11,"clone",E,E,17,[[["self"]],[R[175]]]],[11,"clone",E,E,18,[[["self"]],[R[142]]]],[11,"clone",E,E,19,[[["self"]],["passwd"]]],[11,"clone",E,E,20,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,82,[[["self"]],["fd_set"]]],[11,"clone",E,E,21,[[["self"]],["tm"]]],[11,"clone",E,E,22,[[["self"]],["msghdr"]]],[11,"clone",E,E,23,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,83,[[["self"]],["fsid_t"]]],[11,"clone",E,E,24,[[["self"]],[R[138]]]],[11,"clone",E,E,25,[[["self"]],[R[143]]]],[11,"clone",E,E,26,[[["self"]],["utsname"]]],[11,"clone",E,E,95,[[["self"]],[R[184]]]],[11,"clone",E,E,27,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,28,[[["self"]],["aiocb"]]],[11,"clone",E,E,29,[[["self"]],["glob_t"]]],[11,"clone",E,E,30,[[["self"]],[R[176]]]],[11,"clone",E,E,31,[[["self"]],[R[139]]]],[11,"clone",E,E,32,[[["self"]],["stat"]]],[11,"clone",E,E,84,[[["self"]],[R[144]]]],[11,"clone",E,E,85,[[["self"]],[R[145]]]],[11,"clone",E,E,86,[[["self"]],[R[146]]]],[11,"clone",E,E,33,[[["self"]],[R[147]]]],[11,"clone",E,E,34,[[["self"]],[R[137]]]],[11,"clone",E,E,35,[[["self"]],["stack_t"]]],[11,"clone",E,E,36,[[["self"]],[R[177]]]],[11,"clone",E,E,37,[[["self"]],[R[148]]]],[11,"clone",E,E,38,[[["self"]],["statvfs"]]],[11,"clone",E,E,39,[[["self"]],["dl_info"]]],[11,"clone",E,E,40,[[["self"]],[R[149]]]],[11,"clone",E,E,41,[[["self"]],[R[150]]]],[11,"clone",E,E,42,[[["self"]],["dqblk"]]],[11,"clone",E,E,43,[[["self"]],[R[151]]]],[11,"clone",E,E,44,[[["self"]],["termios"]]],[11,"clone",E,E,45,[[["self"]],["flock"]]],[11,"clone",E,E,46,[[["self"]],["sf_hdtr"]]],[11,"clone",E,E,47,[[["self"]],["lconv"]]],[11,"clone",E,E,48,[[["self"]],[R[178]]]],[11,"clone",E,E,49,[[["self"]],[R[152]]]],[11,"clone",E,E,50,[[["self"]],[R[153]]]],[11,"clone",E,E,51,[[["self"]],[R[154]]]],[11,"clone",E,E,52,[[["self"]],[R[155]]]],[11,"clone",E,E,53,[[["self"]],["xucred"]]],[11,"clone",E,E,54,[[["self"]],[R[156]]]],[11,"clone",E,E,55,[[["self"]],[R[157]]]],[11,"clone",E,E,56,[[["self"]],[R[158]]]],[11,"clone",E,E,57,[[["self"]],[R[159]]]],[11,"clone",E,E,58,[[["self"]],[R[160]]]],[11,"clone",E,E,59,[[["self"]],[R[161]]]],[11,"clone",E,E,60,[[["self"]],[R[162]]]],[11,"clone",E,E,61,[[["self"]],[R[163]]]],[11,"clone",E,E,62,[[["self"]],[R[164]]]],[11,"clone",E,E,63,[[["self"]],[R[165]]]],[11,"clone",E,E,64,[[["self"]],[R[179]]]],[11,"clone",E,E,65,[[["self"]],["sembuf"]]],[11,"clone",E,E,66,[[["self"]],["arphdr"]]],[11,"clone",E,E,67,[[["self"]],["in_addr"]]],[11,"clone",E,E,68,[[["self"]],["kevent"]]],[11,"clone",E,E,69,[[["self"]],[R[180]]]],[11,"clone",E,E,70,[[["self"]],[R[181]]]],[11,"clone",E,E,71,[[["self"]],[R[166]]]],[11,"clone",E,E,72,[[["self"]],["statfs"]]],[11,"clone",E,E,73,[[["self"]],["dirent"]]],[11,"clone",E,E,87,[[["self"]],[R[167]]]],[11,"clone",E,E,88,[[["self"]],[R[168]]]],[11,"clone",E,E,89,[[["self"]],[R[169]]]],[11,"clone",E,E,74,[[["self"]],[R[170]]]],[11,"clone",E,E,75,[[["self"]],["utmpx"]]],[11,"clone",E,E,80,[[["self"]],["semun"]]],[11,"clone",E,E,76,[[["self"]],[R[171]]]],[11,"clone",E,E,77,[[["self"]],["if_data"]]],[11,"clone",E,E,78,[[["self"]],["bpf_hdr"]]],[11,"clone",E,E,90,[[["self"]],[R[172]]]],[11,"clone",E,E,79,[[["self"]],[R[182]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[173]],[3,"rlimit"],[3,"rusage"],[3,R[140]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[141]],[3,"tms"],[3,"servent"],[3,R[174]],[3,R[175]],[3,R[142]],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,R[138]],[3,R[143]],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,R[176]],[3,R[139]],[3,"stat"],[3,R[147]],[3,R[137]],[3,"stack_t"],[3,R[177]],[3,R[148]],[3,"statvfs"],[3,"Dl_info"],[3,R[149]],[3,R[150]],[3,"dqblk"],[3,R[151]],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,R[178]],[3,R[152]],[3,R[153]],[3,R[154]],[3,R[155]],[3,"xucred"],[3,R[156]],[3,R[157]],[3,R[158]],[3,R[159]],[3,R[160]],[3,R[161]],[3,R[162]],[3,R[163]],[3,R[164]],[3,R[165]],[3,R[179]],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"kevent"],[3,R[180]],[3,R[181]],[3,R[166]],[3,"statfs"],[3,"dirent"],[3,R[170]],[3,"utmpx"],[3,R[171]],[3,"if_data"],[3,"bpf_hdr"],[3,R[182]],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,R[144]],[3,R[145]],[3,R[146]],[3,R[167]],[3,R[168]],[3,R[169]],[3,R[172]],[4,"DIR"],[4,R[183]],[4,"FILE"],[4,"fpos_t"],[4,R[184]]]};
searchIndex["opaque_debug"]={"doc":"Macro for opaque `Debug` trait implementation.","i":[[14,"impl_opaque_debug","opaque_debug","Macro for defining opaque `Debug` implementation.",N,N]],"p":[]};
searchIndex["ossuary"]={"doc":"Ossuary","i":[[3,R[455],"ossuary","Context for interacting with an encrypted communication…",N,N],[4,R[453],E,"Error produced by Ossuary or one of its dependencies",N,N],[13,"Io",E,"A problem with I/O read or writes.",0,N],[13,"WouldBlock",E,"A buffer cannot complete a read/write without blocking.",0,N],[13,"UntrustedServer",E,"Connection accepted by an unknown/untrusted server.",0,N],[13,"Unpack",E,"Error casting received bytes to a primitive type.",0,N],[13,"NoRandomSource",E,"Error reading from random number generator",0,N],[13,"KeySize",E,"An invalid sized encryption key was encountered.",0,N],[13,"InvalidKey",E,"An error occurred when parsing or using an encryption key.",0,N],[13,"DecryptionFailed",E,"Encrypted data failed to be decrypted",0,N],[13,"InvalidPacket",E,"The channel received an unexpected or malformed packet",0,N],[13,"InvalidStruct",E,"Error casting a received packet to an internal struct…",0,N],[13,"InvalidSignature",E,"The signature received from a client failed to verify.",0,N],[13,"WrongProtocolVersion",E,"Remote host running an incompatible protocol version",0,N],[13,"ConnectionReset",E,"The connection has reset, and reconnection may be possible.",0,N],[13,"ConnectionFailed",E,"The connection has reset, and reconnection is not suggested.",0,N],[13,"ConnectionClosed",E,"The connection has been closed by request.",0,N],[4,R[454],E,"Enum specifying the client or server role of a…",N,N],[13,"Client",E,"This context is a client",1,N],[13,"AuthenticatedServer",E,"This context is a server that requires authentication.",1,N],[13,"UnauthenticatedServer",E,"This context is a server that does not support…",1,N],[5,"generate_auth_keypair",E,"Generate secret/public Ed25519 keypair for host…",N,[[],[[R[0],[R[450]]],[R[450]]]]],[0,"clib",E,"Ossuary API exposed with a C FFI",N,N],[5,"ossuary_create_connection","ossuary::clib",E,N,[[["u8"]]]],[5,"ossuary_destroy_connection",E,E,N,[[]]],[5,"ossuary_add_authorized_key",E,E,N,[[],["i32"]]],[5,"ossuary_add_authorized_keys",E,E,N,[[["u8"]],["i32"]]],[5,"ossuary_set_secret_key",E,E,N,[[],["i32"]]],[5,"ossuary_recv_handshake",E,E,N,[[],["i32"]]],[5,"ossuary_send_handshake",E,E,N,[[],["i32"]]],[5,"ossuary_handshake_done",E,E,N,[[],["i32"]]],[5,"ossuary_send_data",E,E,N,[[["u16"]],["i32"]]],[5,"ossuary_recv_data",E,E,N,[[],["i32"]]],[5,"ossuary_flush",E,E,N,[[["u16"]],["i32"]]],[5,"ossuary_remote_public_key",E,E,N,[[["u16"]],["i32"]]],[5,"ossuary_generate_auth_keypair",E,E,N,[[["u16"]],["i32"]]],[17,"OSSUARY_ERR_WOULD_BLOCK",E,E,N,N],[17,"OSSUARY_ERR_UNTRUSTED_SERVER",E,E,N,N],[11,"new","ossuary","Allocate a new OssuaryConnection.",2,[[[R[452]],[R[44]]],[[R[451]],[R[450]],[R[0],[R[451],R[450]]]]]],[11,"disconnect",E,"Terminate a connection, or an on-going connection attempt.",2,[[["self"],["bool"]]]],[11,"is_server",E,"Whether this context represents a server (as opposed to a…",2,[[["self"]],["bool"]]],[11,"add_authorized_key",E,"Add public key of permitted remote hosts",2,[[["self"]],[[R[0],[R[450]]],[R[450]]]]],[11,"add_authorized_keys",E,"Add public keys of permitted remote hosts",2,[[["self"],[T]],[[R[450]],[R[0],["usize",R[450]]],["usize"]]]],[11,"set_secret_key",E,"Set authentication secret signing key",2,[[["self"]],[[R[0],[R[450]]],[R[450]]]]],[11,"local_public_key",E,"Get the local host's authentication public key",2,[[["self"]],[[R[450]],[R[0],[R[450]]]]]],[11,"remote_public_key",E,"Get the remote host's authentication public key",2,[[["self"]],[[R[450]],[R[0],[R[450]]]]]],[11,"send_handshake",E,"Write the next handshake packet into the given buffer",2,[[["self"],[T]],[[R[450]],[R[0],["usize",R[450]]],["usize"]]]],[11,"recv_handshake",E,"Read the next handshake packet from the given buffer",2,[[["self"],[T]],[[R[450]],[R[0],["usize",R[450]]],["usize"]]]],[11,"handshake_done",E,"Returns whether the handshake process is complete.",2,[[["self"]],[["bool"],[R[450]],[R[0],["bool",R[450]]]]]],[11,"send_data",E,"Encrypts data into a packet suitable for sending over the…",2,[[["self"],[T]],[[R[450]],[R[0],["usize",R[450]]],["usize"]]]],[11,"recv_data",E,"Decrypts data from a packet received from a remote host",2,[[["self"],[T],["r"]],[[R[0],[R[450]]],[R[450]]]]],[11,"flush",E,"Write any cached encrypted data waiting to be sent",2,[[["self"],["r"]],[[R[450]],[R[0],["usize",R[450]]],["usize"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[396],E,E,2,[[]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[[T],["self"]]]],[11,"into",E,E,1,[[],[U]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[["tryfromsliceerror"]],["self"]]],[11,"from",E,E,0,[[[R[436]]],["self"]]],[11,"from",E,E,0,[[[R[64]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"eq",E,E,0,[[["self"],[R[450]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[450]]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[450]]]],[11,"clone",E,E,1,[[["self"]],[R[452]]]],[11,R[128],E,E,2,[[],["self"]]],[11,"fmt",E,E,0,[[[R[32]],["self"]],[R[0]]]]],"p":[[4,R[453]],[4,R[454]],[3,R[455]]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,"RngCore","rand",R[323],N,N],[10,R[22],E,R[324],0,[[["self"]],["u32"]]],[10,R[23],E,R[325],0,[[["self"]],["u64"]]],[10,R[24],E,R[326],0,[[["self"]]]],[10,R[25],E,R[327],0,[[["self"]],[[R[0],["error"]],["error"]]]],[8,R[328],E,R[329],N,N],[8,R[39],E,R[330],N,N],[16,"Seed",E,R[331],1,N],[10,R[26],E,R[332],1,[[],["self"]]],[11,R[27],E,R[333],1,[[["u64"]],["self"]]],[11,R[28],E,R[334],1,[[["r"]],[[R[0],["error"]],["error"]]]],[4,R[35],E,R[312],N,N],[13,R[313],E,R[314],2,N],[13,R[315],E,R[316],2,N],[13,R[317],E,R[318],2,N],[13,"NotReady",E,R[319],2,N],[3,"Error",E,R[320],N,N],[12,"kind",E,R[321],3,N],[12,"msg",E,R[322],3,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],[R[278]]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions.",N,N],[3,R[302],R[252],"Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform",E,R[249],N,N],[3,R[303],E,R[248],N,N],[3,"Open01",E,R[248],N,N],[3,R[286],E,"The Bernoulli distribution.",N,N],[3,R[287],E,"A distribution using weighted sampling to pick a…",N,N],[3,R[288],E,"Samples uniformly from the surface of the unit sphere in…",N,N],[3,R[289],E,"Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma",E,"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,R[290],E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta",E,"The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,R[291],E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,R[304],E,"Samples floating-point numbers according to the normal…",N,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1",E,"Samples floating-point numbers according to the…",N,N],[3,"Pareto",E,"Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson",E,"The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial",E,"The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy",E,"The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,R[292],E,"The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,R[293],E,"The triangular distribution.",N,N],[3,"Weibull",E,"Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter",E,"An iterator that generates random values of `T` with…",N,N],[3,"Standard",E,"A generic random value distribution, implemented for many…",N,N],[3,"Weighted",E,"A value with a particular weight for use with…",N,N],[12,"weight",E,"The numerical weight of this item",4,N],[12,"item",E,"The actual item which is being weighted",4,N],[3,R[295],E,"A distribution that selects from a finite collection of…",N,N],[4,R[282],E,"Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem",E,"The provided iterator contained no items.",5,N],[13,"NegativeWeight",E,"A weight lower than zero was used.",5,N],[13,"AllWeightsZero",E,"All items in the provided iterator had a weight of zero.",5,N],[0,R[272],E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[266],R[249],N,N],[3,R[305],E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[306],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[307],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[283],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",6,N],[8,R[284],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",7,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",7,[[["b2"],["b1"]],["self"]]],[10,R[250],E,"Construct self, with inclusive bounds `[low, high]`.",7,[[["b2"],["b1"]],["self"]]],[10,"sample",E,"Sample a value.",7,[[["self"],["r"]]]],[11,R[271],E,"Sample a single value uniformly from a range with…",7,[[["b2"],["b1"],["r"]]]],[8,R[285],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[3],E,"Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new",E,R[251],9,[[["b2"],["b1"]],[R[272]]]],[11,R[250],E,R[251],9,[[["b2"],["b1"]],[R[272]]]],[11,"new",R[252],"Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],[R[253]]]],[11,"from_ratio",E,"Construct a new `Bernoulli` with the probability of…",10,[[["u32"]],[R[253]]]],[11,"new",E,"Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],[[R[254]],[R[255]],[R[0],[R[254],R[255]]]]]],[11,"new",E,"Construct a new `UnitSphereSurface` distribution.",12,[[],[R[273]]]],[11,"new",E,"Construct a new `UnitCircle` distribution.",13,[[],[R[274]]]],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",15,[[["f64"]],[R[275]]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",16,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new",E,"Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"]],["beta"]]],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",19,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",20,[[["f64"]],[R[276]]]],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new",E,"Construct a new Pareto distribution with given `scale` and…",22,[[["f64"]],["pareto"]]],[11,"new",E,"Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new",E,"Construct a new `Binomial` with the given shape parameters…",24,[[["f64"],["u64"]],["binomial"]]],[11,"new",E,"Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"]],["cauchy"]]],[11,"new",E,"Construct a new `Dirichlet` with the given alpha parameter…",26,[[["into",["vec"]],["vec",["f64"]]],[R[256]]]],[11,"new_with_param",E,"Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],[R[256]]]],[11,"new",E,"Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"]],[R[277]]]],[11,"new",E,"Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"]],["weibull"]]],[8,R[294],E,"Types (distributions) that can be used to create a random…",N,N],[10,"sample",E,"Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],[T]]],[11,R[258],E,"Create an iterator that generates random values of `T`,…",29,[[["r"],["self"]],["distiter"]]],[11,"new",E,"Create a new `WeightedChoice`.",30,[[],["weightedchoice"]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng",E,"Pseudo-random number generators.",N,N],[0,"rngs",E,"Random number generators and adapters for common usage:",N,N],[3,R[228],R[257],R[345],N,N],[4,R[227],E,R[346],N,N],[13,"NoTimer",E,R[347],31,N],[13,R[348],E,R[349],31,N],[13,R[350],E,R[351],31,N],[13,R[352],E,R[353],31,N],[13,R[354],E,R[355],31,N],[3,"OsRng",E,R[365],N,N],[3,R[297],E,"An interface returning random data from external…",N,N],[3,"SmallRng",E,"An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,R[308],E,"The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadRng",R[268],"An RNG that reads random bytes straight from any type…",N,N],[3,R[296],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",33,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",33,[[["self"]],[[R[0],["error"]],["error"]]]],[11,"new",R[257],"Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[269],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,R[309],R[259],"Iterator over multiple choices, as returned by…",N,N],[5,R[258],E,"Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],[[R[0],["vec","vec"]],["vec"]]]],[5,"sample_slice",E,"Randomly sample exactly `amount` values from `slice`.",N,[[["r"],["usize"]],["vec"]]],[5,"sample_slice_ref",E,"Randomly sample exactly `amount` references from `slice`.",N,[[["r"],["usize"]],[["vec"],[T]]]],[0,"index",E,"Index sampling",N,N],[4,"IndexVec",R[270],"A vector of indices.",N,N],[4,R[310],E,"Return type of `IndexVec::iter`.",N,N],[4,R[311],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["r"],["usize"]],[R[279]]]],[11,"len",E,"Returns the number of indices",36,[[["self"]],["usize"]]],[11,"index",E,"Return the value at the given `index`.",36,[[["self"],["usize"]],["usize"]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",36,[[],[["usize"],["vec",["usize"]]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,R[214],E,"Convert into an iterator over the indices as a sequence of…",36,[[],[R[280]]]],[8,R[298],R[259],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",37,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",37,[[["self"],["r"]],[R[44]]]],[10,R[264],E,"Returns a mutable reference to one random element of the…",37,[[["self"],["r"]],[R[44]]]],[10,R[260],E,"Produces an iterator that chooses `amount` elements from…",37,[[["self"],["r"],["usize"]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], where the likelihood of each…",37,[[["self"],["r"],["f"]],[[R[0],[R[255]]],[R[255]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], where the likelihood of each…",37,[[["self"],["r"],["f"]],[[R[0],[R[255]]],[R[255]]]]],[10,"shuffle",E,R[265],37,[[["self"],["r"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",37,[[["self"],["r"],["usize"]]]],[8,R[299],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator. If you…",38,[[["r"]],[R[44]]]],[11,"choose_multiple_fill",E,R[261],38,[[["r"]],["usize"]]],[11,R[260],E,R[261],38,[[["r"],["usize"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",39,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",39,[[["self"],["b1"],["b2"]],["sampleuniform"]]],[11,"sample",E,"Sample a new value, using the given distribution.",39,[[["self"],[R[262]]],[T]]],[11,R[258],E,"Create an iterator that generates values using the given…",39,[[["self"],["d"]],[["distiter"],[R[262]]]]],[11,"fill",E,R[263],39,[[["self"],[T]]]],[11,"try_fill",E,R[263],39,[[["self"],[T]],[[R[0],["error"]],["error"]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",39,[[["self"],["u32"]],["bool"]]],[11,"choose",E,"Return a random element from `values`.",39,[[["self"]],[[T],[R[44]]]]],[11,R[264],E,"Return a mutable pointer to a random element from `values`.",39,[[["self"]],[[T],[R[44]]]]],[11,"shuffle",E,R[265],39,[[["self"]]]],[8,R[300],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",40,[[["self"]]]],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,R[301],E,"A convenience extension to [`SeedableRng`] allowing…",N,N],[10,R[267],E,"Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[["self"]],[T]]],[11,R[21],E,E,2,[[[T],["self"]]]],[11,"into",E,E,2,[[],[U]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[66],E,E,3,[[["self"]],["string"]]],[11,"into",E,E,3,[[],[U]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,"from",R[252],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[1],E,E,42,[[[U]],[R[0]]]],[11,R[2],E,E,42,[[],[R[0]]]],[11,R[4],E,E,42,[[["self"]],[T]]],[11,R[3],E,E,42,[[["self"]],[T]]],[11,R[5],E,E,42,[[["self"]],[R[6]]]],[11,"from",R[266],E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[["self"]],[T]]],[11,R[21],E,E,9,[[[T],["self"]]]],[11,"into",E,E,9,[[],[U]]],[11,R[1],E,E,9,[[[U]],[R[0]]]],[11,R[2],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[3],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[R[6]]]],[11,"from",R[252],E,43,[[[T]],[T]]],[11,R[20],E,E,43,[[["self"]],[T]]],[11,R[21],E,E,43,[[[T],["self"]]]],[11,"into",E,E,43,[[],[U]]],[11,R[1],E,E,43,[[[U]],[R[0]]]],[11,R[2],E,E,43,[[],[R[0]]]],[11,R[4],E,E,43,[[["self"]],[T]]],[11,R[3],E,E,43,[[["self"]],[T]]],[11,R[5],E,E,43,[[["self"]],[R[6]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[20],E,E,44,[[["self"]],[T]]],[11,R[21],E,E,44,[[[T],["self"]]]],[11,"into",E,E,44,[[],[U]]],[11,R[1],E,E,44,[[[U]],[R[0]]]],[11,R[2],E,E,44,[[],[R[0]]]],[11,R[4],E,E,44,[[["self"]],[T]]],[11,R[3],E,E,44,[[["self"]],[T]]],[11,R[5],E,E,44,[[["self"]],[R[6]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[20],E,E,10,[[["self"]],[T]]],[11,R[21],E,E,10,[[[T],["self"]]]],[11,"into",E,E,10,[[],[U]]],[11,R[1],E,E,10,[[[U]],[R[0]]]],[11,R[2],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[3],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[R[6]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[20],E,E,11,[[["self"]],[T]]],[11,R[21],E,E,11,[[[T],["self"]]]],[11,"into",E,E,11,[[],[U]]],[11,R[1],E,E,11,[[[U]],[R[0]]]],[11,R[2],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[3],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[R[6]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[20],E,E,12,[[["self"]],[T]]],[11,R[21],E,E,12,[[[T],["self"]]]],[11,"into",E,E,12,[[],[U]]],[11,R[1],E,E,12,[[[U]],[R[0]]]],[11,R[2],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[3],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[R[6]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[20],E,E,13,[[["self"]],[T]]],[11,R[21],E,E,13,[[[T],["self"]]]],[11,"into",E,E,13,[[],[U]]],[11,R[1],E,E,13,[[[U]],[R[0]]]],[11,R[2],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[3],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[R[6]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[20],E,E,14,[[["self"]],[T]]],[11,R[21],E,E,14,[[[T],["self"]]]],[11,"into",E,E,14,[[],[U]]],[11,R[1],E,E,14,[[[U]],[R[0]]]],[11,R[2],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[3],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[R[6]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[20],E,E,15,[[["self"]],[T]]],[11,R[21],E,E,15,[[[T],["self"]]]],[11,"into",E,E,15,[[],[U]]],[11,R[1],E,E,15,[[[U]],[R[0]]]],[11,R[2],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[3],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[R[6]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[20],E,E,16,[[["self"]],[T]]],[11,R[21],E,E,16,[[[T],["self"]]]],[11,"into",E,E,16,[[],[U]]],[11,R[1],E,E,16,[[[U]],[R[0]]]],[11,R[2],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[3],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[R[6]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[20],E,E,17,[[["self"]],[T]]],[11,R[21],E,E,17,[[[T],["self"]]]],[11,"into",E,E,17,[[],[U]]],[11,R[1],E,E,17,[[[U]],[R[0]]]],[11,R[2],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[3],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[R[6]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[20],E,E,18,[[["self"]],[T]]],[11,R[21],E,E,18,[[[T],["self"]]]],[11,"into",E,E,18,[[],[U]]],[11,R[1],E,E,18,[[[U]],[R[0]]]],[11,R[2],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[3],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[R[6]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[20],E,E,19,[[["self"]],[T]]],[11,R[21],E,E,19,[[[T],["self"]]]],[11,"into",E,E,19,[[],[U]]],[11,R[1],E,E,19,[[[U]],[R[0]]]],[11,R[2],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[3],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[R[6]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[20],E,E,20,[[["self"]],[T]]],[11,R[21],E,E,20,[[[T],["self"]]]],[11,"into",E,E,20,[[],[U]]],[11,R[1],E,E,20,[[[U]],[R[0]]]],[11,R[2],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[3],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[R[6]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[20],E,E,45,[[["self"]],[T]]],[11,R[21],E,E,45,[[[T],["self"]]]],[11,"into",E,E,45,[[],[U]]],[11,R[1],E,E,45,[[[U]],[R[0]]]],[11,R[2],E,E,45,[[],[R[0]]]],[11,R[4],E,E,45,[[["self"]],[T]]],[11,R[3],E,E,45,[[["self"]],[T]]],[11,R[5],E,E,45,[[["self"]],[R[6]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[20],E,E,21,[[["self"]],[T]]],[11,R[21],E,E,21,[[[T],["self"]]]],[11,"into",E,E,21,[[],[U]]],[11,R[1],E,E,21,[[[U]],[R[0]]]],[11,R[2],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[3],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[R[6]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[20],E,E,46,[[["self"]],[T]]],[11,R[21],E,E,46,[[[T],["self"]]]],[11,"into",E,E,46,[[],[U]]],[11,R[1],E,E,46,[[[U]],[R[0]]]],[11,R[2],E,E,46,[[],[R[0]]]],[11,R[4],E,E,46,[[["self"]],[T]]],[11,R[3],E,E,46,[[["self"]],[T]]],[11,R[5],E,E,46,[[["self"]],[R[6]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[20],E,E,22,[[["self"]],[T]]],[11,R[21],E,E,22,[[[T],["self"]]]],[11,"into",E,E,22,[[],[U]]],[11,R[1],E,E,22,[[[U]],[R[0]]]],[11,R[2],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[3],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[R[6]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[20],E,E,23,[[["self"]],[T]]],[11,R[21],E,E,23,[[[T],["self"]]]],[11,"into",E,E,23,[[],[U]]],[11,R[1],E,E,23,[[[U]],[R[0]]]],[11,R[2],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[3],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[R[6]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[20],E,E,24,[[["self"]],[T]]],[11,R[21],E,E,24,[[[T],["self"]]]],[11,"into",E,E,24,[[],[U]]],[11,R[1],E,E,24,[[[U]],[R[0]]]],[11,R[2],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[3],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[R[6]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[20],E,E,25,[[["self"]],[T]]],[11,R[21],E,E,25,[[[T],["self"]]]],[11,"into",E,E,25,[[],[U]]],[11,R[1],E,E,25,[[[U]],[R[0]]]],[11,R[2],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[3],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[R[6]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[20],E,E,26,[[["self"]],[T]]],[11,R[21],E,E,26,[[[T],["self"]]]],[11,"into",E,E,26,[[],[U]]],[11,R[1],E,E,26,[[[U]],[R[0]]]],[11,R[2],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[3],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[R[6]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[20],E,E,27,[[["self"]],[T]]],[11,R[21],E,E,27,[[[T],["self"]]]],[11,"into",E,E,27,[[],[U]]],[11,R[1],E,E,27,[[[U]],[R[0]]]],[11,R[2],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[3],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[R[6]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[20],E,E,28,[[["self"]],[T]]],[11,R[21],E,E,28,[[[T],["self"]]]],[11,"into",E,E,28,[[],[U]]],[11,R[1],E,E,28,[[[U]],[R[0]]]],[11,R[2],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[3],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[R[6]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[214],E,E,47,[[],["i"]]],[11,"into",E,E,47,[[],[U]]],[11,R[1],E,E,47,[[[U]],[R[0]]]],[11,R[2],E,E,47,[[],[R[0]]]],[11,R[4],E,E,47,[[["self"]],[T]]],[11,R[3],E,E,47,[[["self"]],[T]]],[11,R[5],E,E,47,[[["self"]],[R[6]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[20],E,E,48,[[["self"]],[T]]],[11,R[21],E,E,48,[[[T],["self"]]]],[11,"into",E,E,48,[[],[U]]],[11,R[1],E,E,48,[[[U]],[R[0]]]],[11,R[2],E,E,48,[[],[R[0]]]],[11,R[4],E,E,48,[[["self"]],[T]]],[11,R[3],E,E,48,[[["self"]],[T]]],[11,R[5],E,E,48,[[["self"]],[R[6]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[["self"]],[T]]],[11,R[21],E,E,4,[[[T],["self"]]]],[11,"into",E,E,4,[[],[U]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[1],E,E,30,[[[U]],[R[0]]]],[11,R[2],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[3],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[R[6]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[["self"]],[T]]],[11,R[21],E,E,5,[[[T],["self"]]]],[11,R[66],E,E,5,[[["self"]],["string"]]],[11,"into",E,E,5,[[],[U]]],[11,R[1],E,E,5,[[[U]],[R[0]]]],[11,R[2],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[3],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[R[6]]]],[11,"from",R[266],E,49,[[[T]],[T]]],[11,R[20],E,E,49,[[["self"]],[T]]],[11,R[21],E,E,49,[[[T],["self"]]]],[11,"into",E,E,49,[[],[U]]],[11,R[1],E,E,49,[[[U]],[R[0]]]],[11,R[2],E,E,49,[[],[R[0]]]],[11,R[4],E,E,49,[[["self"]],[T]]],[11,R[3],E,E,49,[[["self"]],[T]]],[11,R[5],E,E,49,[[["self"]],[R[6]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[20],E,E,50,[[["self"]],[T]]],[11,R[21],E,E,50,[[[T],["self"]]]],[11,"into",E,E,50,[[],[U]]],[11,R[1],E,E,50,[[[U]],[R[0]]]],[11,R[2],E,E,50,[[],[R[0]]]],[11,R[4],E,E,50,[[["self"]],[T]]],[11,R[3],E,E,50,[[["self"]],[T]]],[11,R[5],E,E,50,[[["self"]],[R[6]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[20],E,E,51,[[["self"]],[T]]],[11,R[21],E,E,51,[[[T],["self"]]]],[11,"into",E,E,51,[[],[U]]],[11,R[1],E,E,51,[[[U]],[R[0]]]],[11,R[2],E,E,51,[[],[R[0]]]],[11,R[4],E,E,51,[[["self"]],[T]]],[11,R[3],E,E,51,[[["self"]],[T]]],[11,R[5],E,E,51,[[["self"]],[R[6]]]],[11,"from",R[257],E,52,[[[T]],[T]]],[11,R[20],E,E,52,[[["self"]],[T]]],[11,R[21],E,E,52,[[[T],["self"]]]],[11,"into",E,E,52,[[],[U]]],[11,R[1],E,E,52,[[[U]],[R[0]]]],[11,R[2],E,E,52,[[],[R[0]]]],[11,R[4],E,E,52,[[["self"]],[T]]],[11,R[3],E,E,52,[[["self"]],[T]]],[11,R[5],E,E,52,[[["self"]],[R[6]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[20],E,E,31,[[["self"]],[T]]],[11,R[21],E,E,31,[[[T],["self"]]]],[11,R[66],E,E,31,[[["self"]],["string"]]],[11,"into",E,E,31,[[],[U]]],[11,R[1],E,E,31,[[[U]],[R[0]]]],[11,R[2],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[3],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[R[6]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[20],E,E,53,[[["self"]],[T]]],[11,R[21],E,E,53,[[[T],["self"]]]],[11,"into",E,E,53,[[],[U]]],[11,R[1],E,E,53,[[[U]],[R[0]]]],[11,R[2],E,E,53,[[],[R[0]]]],[11,R[4],E,E,53,[[["self"]],[T]]],[11,R[3],E,E,53,[[["self"]],[T]]],[11,R[5],E,E,53,[[["self"]],[R[6]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[1],E,E,34,[[[U]],[R[0]]]],[11,R[2],E,E,34,[[],[R[0]]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[3],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[R[6]]]],[11,R[267],E,E,54,[[],["r"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[20],E,E,54,[[["self"]],[T]]],[11,R[21],E,E,54,[[[T],["self"]]]],[11,"into",E,E,54,[[],[U]]],[11,R[1],E,E,54,[[[U]],[R[0]]]],[11,R[2],E,E,54,[[],[R[0]]]],[11,R[4],E,E,54,[[["self"]],[T]]],[11,R[3],E,E,54,[[["self"]],[T]]],[11,R[5],E,E,54,[[["self"]],[R[6]]]],[11,R[267],E,E,55,[[],["r"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[20],E,E,55,[[["self"]],[T]]],[11,R[21],E,E,55,[[[T],["self"]]]],[11,"into",E,E,55,[[],[U]]],[11,R[1],E,E,55,[[[U]],[R[0]]]],[11,R[2],E,E,55,[[],[R[0]]]],[11,R[4],E,E,55,[[["self"]],[T]]],[11,R[3],E,E,55,[[["self"]],[T]]],[11,R[5],E,E,55,[[["self"]],[R[6]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[20],E,E,56,[[["self"]],[T]]],[11,R[21],E,E,56,[[[T],["self"]]]],[11,"into",E,E,56,[[],[U]]],[11,R[1],E,E,56,[[[U]],[R[0]]]],[11,R[2],E,E,56,[[],[R[0]]]],[11,R[4],E,E,56,[[["self"]],[T]]],[11,R[3],E,E,56,[[["self"]],[T]]],[11,R[5],E,E,56,[[["self"]],[R[6]]]],[11,"from",R[268],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[1],E,E,32,[[[U]],[R[0]]]],[11,R[2],E,E,32,[[],[R[0]]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[3],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[R[6]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[20],E,E,33,[[["self"]],[T]]],[11,R[21],E,E,33,[[[T],["self"]]]],[11,"into",E,E,33,[[],[U]]],[11,R[1],E,E,33,[[[U]],[R[0]]]],[11,R[2],E,E,33,[[],[R[0]]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[3],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[R[6]]]],[11,"from",R[269],E,35,[[[T]],[T]]],[11,R[20],E,E,35,[[["self"]],[T]]],[11,R[21],E,E,35,[[[T],["self"]]]],[11,"into",E,E,35,[[],[U]]],[11,R[1],E,E,35,[[[U]],[R[0]]]],[11,R[2],E,E,35,[[],[R[0]]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[3],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[R[6]]]],[11,"from",R[259],E,57,[[[T]],[T]]],[11,R[214],E,E,57,[[],["i"]]],[11,"into",E,E,57,[[],[U]]],[11,R[1],E,E,57,[[[U]],[R[0]]]],[11,R[2],E,E,57,[[],[R[0]]]],[11,R[4],E,E,57,[[["self"]],[T]]],[11,R[3],E,E,57,[[["self"]],[T]]],[11,R[5],E,E,57,[[["self"]],[R[6]]]],[11,"from",R[270],E,36,[[[T]],[T]]],[11,R[20],E,E,36,[[["self"]],[T]]],[11,R[21],E,E,36,[[[T],["self"]]]],[11,"into",E,E,36,[[],[U]]],[11,R[1],E,E,36,[[[U]],[R[0]]]],[11,R[2],E,E,36,[[],[R[0]]]],[11,R[4],E,E,36,[[["self"]],[T]]],[11,R[3],E,E,36,[[["self"]],[T]]],[11,R[5],E,E,36,[[["self"]],[R[6]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[214],E,E,58,[[],["i"]]],[11,"into",E,E,58,[[],[U]]],[11,R[1],E,E,58,[[[U]],[R[0]]]],[11,R[2],E,E,58,[[],[R[0]]]],[11,R[4],E,E,58,[[["self"]],[T]]],[11,R[3],E,E,58,[[["self"]],[T]]],[11,R[5],E,E,58,[[["self"]],[R[6]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[214],E,E,59,[[],["i"]]],[11,R[20],E,E,59,[[["self"]],[T]]],[11,R[21],E,E,59,[[[T],["self"]]]],[11,"into",E,E,59,[[],[U]]],[11,R[1],E,E,59,[[[U]],[R[0]]]],[11,R[2],E,E,59,[[],[R[0]]]],[11,R[4],E,E,59,[[["self"]],[T]]],[11,R[3],E,E,59,[[["self"]],[T]]],[11,R[5],E,E,59,[[["self"]],[R[6]]]],[11,"eq",R[257],E,31,[[["self"],[R[226]]],["bool"]]],[11,"from","rand",E,3,[[[R[226]]],["error"]]],[11,"fmt",R[257],E,31,[[["self"],[R[32]]],[["error"],[R[0],["error"]]]]],[11,R[22],E,E,52,[[["self"]],["u32"]]],[11,R[23],E,E,52,[[["self"]],["u64"]]],[11,R[24],E,E,52,[[["self"]]]],[11,R[25],E,E,52,[[["self"]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,31,[[["self"],[R[32]]],[["error"],[R[0],["error"]]]]],[11,"fmt",E,E,52,[[["self"],[R[32]]],[["error"],[R[0],["error"]]]]],[11,"clone",E,E,31,[[["self"]],[R[226]]]],[11,"clone",E,E,52,[[["self"]],[R[225]]]],[11,R[33],E,E,31,[[["self"]],["str"]]],[11,"fmt","rand",E,3,[[["self"],[R[32]]],[["error"],[R[0],["error"]]]]],[11,"fmt",E,E,2,[[["self"],[R[32]]],[["error"],[R[0],["error"]]]]],[11,"fmt",E,E,3,[[["self"],[R[32]]],[["error"],[R[0],["error"]]]]],[11,"eq",E,E,2,[[["self"],[R[9]]],["bool"]]],[11,R[33],E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],[[R[44],["error"]],["error"]]]],[11,"read",E,E,0,[[["self"]],[[R[0],["usize","error"]],["usize"],["error"]]]],[11,"clone",E,E,2,[[["self"]],[R[9]]]],[11,"clone",R[257],E,53,[[["self"]],["osrng"]]],[11,"fmt",E,E,53,[[["self"],[R[32]]],[["error"],[R[0],["error"]]]]],[11,R[22],E,E,53,[[["self"]],["u32"]]],[11,R[23],E,E,53,[[["self"]],["u64"]]],[11,R[24],E,E,53,[[["self"]]]],[11,R[25],E,E,53,[[["self"]],[[R[0],["error"]],["error"]]]],[11,"new",R[266],E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[271],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,50,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,50,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,50,[[["self"],["r"]]]],[11,R[271],E,E,50,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,50,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,50,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,50,[[["self"],["r"]]]],[11,R[271],E,E,50,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,51,[[["b2"],["b1"]],["self"]]],[11,R[250],E,E,51,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,51,[[["self"],["r"]],["duration"]]],[11,"sample",E,E,9,[[["self"],["r"]],["x"]]],[11,"sample",R[252],E,10,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,11,[[["self"],["r"]],["usize"]]],[11,"sample",E,E,12,[[["self"],["r"]]]],[11,"sample",E,E,13,[[["self"],["r"]]]],[11,"sample",E,E,14,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,15,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,16,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,17,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,18,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,45,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,19,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,20,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,21,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,22,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,23,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,24,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,25,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,26,[[["self"],["r"]],[["vec",["f64"]],["f64"]]]],[11,"sample",E,E,27,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,28,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u128"]]],[11,"sample",E,E,48,[[["self"],["r"]],["usize"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i128"]]],[11,"sample",E,E,48,[[["self"],["r"]],["isize"]]],[11,"sample",E,E,48,[[["self"],["r"]],["char"]]],[11,"sample",E,E,42,[[["self"],["r"]],["char"]]],[11,"sample",E,E,48,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]],[R[44]]]],[11,"sample",E,E,48,[[["self"],["r"]],["wrapping"]]],[11,"sample",E,E,30,[[["self"],["r"]],[T]]],[11,"from",R[266],E,9,[[["range"]],[R[272]]]],[11,"from",E,E,9,[[["rangeinclusive"]],[R[272]]]],[11,"from",R[270],E,36,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from",E,E,36,[[["usize"],["vec",["usize"]]],["self"]]],[11,"eq",R[252],E,5,[[["self"],[R[255]]],["bool"]]],[11,"eq",R[270],E,36,[[[R[279]],["self"]],["bool"]]],[11,"clone",R[266],E,9,[[["self"]],[R[272]]]],[11,"clone",E,E,49,[[["self"]],["uniformint"]]],[11,"clone",E,E,50,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,51,[[["self"]],["uniformduration"]]],[11,"clone",R[252],E,10,[[["self"]],[R[253]]]],[11,"clone",E,E,11,[[["self"]],[R[254]]]],[11,"clone",E,E,5,[[["self"]],[R[255]]]],[11,"clone",E,E,12,[[["self"]],[R[273]]]],[11,"clone",E,E,13,[[["self"]],[R[274]]]],[11,"clone",E,E,14,[[["self"]],["gamma"]]],[11,"clone",E,E,15,[[["self"]],[R[275]]]],[11,"clone",E,E,16,[[["self"]],["fisherf"]]],[11,"clone",E,E,17,[[["self"]],["studentt"]]],[11,"clone",E,E,18,[[["self"]],["beta"]]],[11,"clone",E,E,45,[[["self"]],["standardnormal"]]],[11,"clone",E,E,19,[[["self"]],["normal"]]],[11,"clone",E,E,20,[[["self"]],[R[276]]]],[11,"clone",E,E,46,[[["self"]],["exp1"]]],[11,"clone",E,E,21,[[["self"]],["exp"]]],[11,"clone",E,E,22,[[["self"]],["pareto"]]],[11,"clone",E,E,23,[[["self"]],["poisson"]]],[11,"clone",E,E,24,[[["self"]],["binomial"]]],[11,"clone",E,E,25,[[["self"]],["cauchy"]]],[11,"clone",E,E,26,[[["self"]],[R[256]]]],[11,"clone",E,E,27,[[["self"]],[R[277]]]],[11,"clone",E,E,28,[[["self"]],["weibull"]]],[11,"clone",E,E,43,[[["self"]],["openclosed01"]]],[11,"clone",E,E,44,[[["self"]],["open01"]]],[11,"clone",E,E,48,[[["self"]],["standard"]]],[11,"clone",E,E,4,[[["self"]],["weighted"]]],[11,"clone",R[268],E,33,[[["self"]],["reseedingrng"]]],[11,"clone",R[269],E,35,[[["self"]],["steprng"]]],[11,"clone",R[257],E,54,[[["self"]],["smallrng"]]],[11,"clone",E,E,55,[[["self"]],["stdrng"]]],[11,"clone",E,E,56,[[["self"]],[R[278]]]],[11,"clone",R[270],E,36,[[["self"]],[R[279]]]],[11,"clone",E,E,59,[[["self"]],[R[280]]]],[11,R[128],R[257],E,34,[[],["self"]]],[11,R[128],E,E,56,[[],[R[278]]]],[11,"len",R[259],E,57,[[["self"]],["usize"]]],[11,"next",R[252],E,47,[[["self"]],[R[44]]]],[11,R[281],E,E,47,[[["self"]]]],[11,"next",R[270],E,58,[[["self"]],[["usize"],[R[44],["usize"]]]]],[11,R[281],E,E,58,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[44]]]],[11,R[281],E,E,59,[[["self"]]]],[11,"next",R[259],E,57,[[["self"]],[R[44]]]],[11,R[281],E,E,57,[[["self"]]]],[11,"fmt",R[252],E,5,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[266],E,9,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,49,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,50,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,51,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[252],E,10,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,45,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,46,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,23,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,25,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,26,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,43,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,44,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,42,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,47,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,48,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,30,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[268],E,32,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,33,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[257],E,34,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[269],E,35,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[257],E,54,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,55,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,56,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[270],E,36,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,58,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,59,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[259],E,57,[[["self"],[R[32]]],[R[0]]]],[11,R[33],R[252],E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[["error"],[R[44],["error"]]]]],[11,R[22],R[268],E,32,[[["self"]],["u32"]]],[11,R[23],E,E,32,[[["self"]],["u64"]]],[11,R[24],E,E,32,[[["self"]]]],[11,R[25],E,E,32,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[22],E,E,33,[[["self"]],["u32"]]],[11,R[23],E,E,33,[[["self"]],["u64"]]],[11,R[24],E,E,33,[[["self"]]]],[11,R[25],E,E,33,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[22],R[257],E,34,[[["self"]],["u32"]]],[11,R[23],E,E,34,[[["self"]],["u64"]]],[11,R[24],E,E,34,[[["self"]]]],[11,R[25],E,E,34,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[22],R[269],E,35,[[["self"]],["u32"]]],[11,R[23],E,E,35,[[["self"]],["u64"]]],[11,R[24],E,E,35,[[["self"]]]],[11,R[25],E,E,35,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[22],R[257],E,54,[[["self"]],["u32"]]],[11,R[23],E,E,54,[[["self"]],["u64"]]],[11,R[24],E,E,54,[[["self"]]]],[11,R[25],E,E,54,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[22],E,E,55,[[["self"]],["u32"]]],[11,R[23],E,E,55,[[["self"]],["u64"]]],[11,R[24],E,E,55,[[["self"]]]],[11,R[25],E,E,55,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[22],E,E,56,[[["self"]],["u32"]]],[11,R[23],E,E,56,[[["self"]],["u64"]]],[11,R[24],E,E,56,[[["self"]]]],[11,R[25],E,E,56,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[26],E,E,54,[[],["self"]]],[11,R[28],E,E,54,[[[R[29]]],[[R[0],["error"]],["error"]]]],[11,R[26],E,E,55,[[],["self"]]],[11,R[28],E,E,55,[[[R[29]]],[[R[0],["error"]],["error"]]]],[11,R[335],"rand",R[336],2,[[],["bool"]]],[11,R[337],E,R[338],2,[[],["bool"]]],[11,R[33],E,R[339],2,[[],["str"]]],[11,"new",E,R[340],3,[[[R[9]],["str"]],["error"]]],[11,R[341],E,R[342],3,[[["e"],[R[9]],["str"]],["error"]]],[11,R[343],E,R[344],3,[[["self"]],[[R[44],["box"]],["box",["error"]]]]],[11,"new",R[257],R[356],52,[[],[[R[0],[R[225],R[226]]],[R[225]],[R[226]]]]],[11,R[357],E,R[358],52,[[],[R[225]]]],[11,R[359],E,R[360],52,[[["self"],["u8"]]]],[11,R[361],E,R[362],52,[[["self"]],[[R[226]],[R[0],["u8",R[226]]],["u8"]]]],[11,R[363],E,R[364],52,[[["self"],["bool"]],["i64"]]],[11,"new",E,R[366],53,[[],[[R[0],["osrng","error"]],["error"],["osrng"]]]]],"p":[[8,"RngCore"],[8,R[39]],[4,R[35]],[3,"Error"],[3,"Weighted"],[4,R[282]],[8,R[283]],[8,R[284]],[8,R[285]],[3,"Uniform"],[3,R[286]],[3,R[287]],[3,R[288]],[3,R[289]],[3,"Gamma"],[3,R[290]],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,R[291]],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,R[292]],[3,R[293]],[3,"Weibull"],[8,R[294]],[3,R[295]],[4,R[227]],[3,"ReadRng"],[3,R[296]],[3,R[297]],[3,"StepRng"],[4,"IndexVec"],[8,R[298]],[8,R[299]],[8,"Rng"],[8,R[300]],[8,R[301]],[3,R[302]],[3,R[303]],[3,"Open01"],[3,R[304]],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,R[305]],[3,R[306]],[3,R[307]],[3,R[228]],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,R[308]],[3,R[309]],[4,R[310]],[4,R[311]]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","i":[[3,R[188],"rand_chacha",R[202],N,N],[3,R[189],E,"The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos",E,"Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos",E,"Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream",E,"Set the stream number.",0,[[["self"],["u64"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,R[20],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[[T],["self"]]]],[11,"from",E,E,0,[[[R[187]]],["self"]]],[11,"fmt",E,E,0,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[32]]],[R[0]]]],[11,"clone",E,E,0,[[["self"]],["chacharng"]]],[11,"clone",E,E,1,[[["self"]],[R[187]]]],[11,R[26],E,E,0,[[],["self"]]],[11,R[28],E,E,0,[[[R[29]]],[["error"],[R[0],["error"]]]]],[11,R[26],E,E,1,[[],["self"]]],[11,R[22],E,E,0,[[["self"]],["u32"]]],[11,R[23],E,E,0,[[["self"]],["u64"]]],[11,R[24],E,E,0,[[["self"]]]],[11,R[25],E,E,0,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[195],E,E,1,[[["self"]]]]],"p":[[3,R[188]],[3,R[189]]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","i":[[4,R[35],R[17],R[312],N,N],[13,R[313],E,R[314],0,N],[13,R[315],E,R[316],0,N],[13,R[317],E,R[318],0,N],[13,"NotReady",E,R[319],0,N],[3,"Error",E,R[320],N,N],[12,"kind",E,R[321],1,N],[12,"msg",E,R[322],1,N],[0,"block",E,"The `BlockRngCore` trait and implementation helpers",N,N],[8,R[38],R[19],"A trait for RNGs which do not generate random numbers…",N,N],[16,"Item",E,"Results element type, e.g. `u32`.",2,N],[16,"Results",E,"Results type. This is the 'block' an RNG implementing…",2,N],[10,R[195],E,"Generate a new block of results.",2,[[["self"]]]],[3,R[36],E,R[10],N,N],[12,"core",E,R[11],3,N],[3,R[37],E,R[10],N,N],[12,"core",E,R[11],4,N],[0,"impls",R[17],"Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next",E,"Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,[[["r"]]]],[5,"fill_via_u32_chunks",E,R[18],N,[[]]],[5,"fill_via_u64_chunks",E,R[18],N,[[]]],[5,"next_u32_via_fill",E,"Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill",E,"Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le",R[17],"Little-Endian utilities",N,N],[5,R[86],"rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,[[]]],[5,R[87],E,"Reads unsigned 64 bit integers from `src` into `dst`.…",N,[[]]],[8,"RngCore",R[17],R[323],N,N],[10,R[22],E,R[324],5,[[["self"]],["u32"]]],[10,R[23],E,R[325],5,[[["self"]],["u64"]]],[10,R[24],E,R[326],5,[[["self"]]]],[10,R[25],E,R[327],5,[[["self"]],[["error"],[R[0],["error"]]]]],[8,R[328],E,R[329],N,N],[8,R[39],E,R[330],N,N],[16,"Seed",E,R[331],6,N],[10,R[26],E,R[332],6,[[],["self"]]],[11,R[27],E,R[333],6,[[["u64"]],["self"]]],[11,R[28],E,R[334],6,[[["r"]],[[R[0],["error"]],["error"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,R[66],E,E,1,[[["self"]],["string"]]],[11,"from",R[19],E,3,[[[T]],[T]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,R[20],E,E,3,[[["self"]],[T]]],[11,R[21],E,E,3,[[[T],["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,"into",E,E,4,[[],[U]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,R[20],E,E,4,[[["self"]],[T]]],[11,R[21],E,E,4,[[[T],["self"]]]],[11,"fmt",R[17],E,1,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[19],E,4,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[17],E,1,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"eq",E,E,0,[[["self"],[R[9]]],["bool"]]],[11,R[33],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[[R[44],["error"]],["error"]]]],[11,R[26],R[19],E,3,[[],[R[30]]]],[11,R[27],E,E,3,[[["u64"]],[R[30]]]],[11,R[28],E,E,3,[[["s"]],[[R[0],[R[30],"error"]],["error"],[R[30]]]]],[11,R[26],E,E,4,[[],[R[31]]]],[11,R[27],E,E,4,[[["u64"]],[R[31]]]],[11,R[28],E,E,4,[[["s"]],[[R[0],[R[31],"error"]],[R[31]],["error"]]]],[11,"read",R[17],E,5,[[["self"]],[["error"],["usize"],[R[0],["usize","error"]]]]],[11,R[22],R[19],E,3,[[["self"]],["u32"]]],[11,R[23],E,E,3,[[["self"]],["u64"]]],[11,R[24],E,E,3,[[["self"]]]],[11,R[25],E,E,3,[[["self"]],[["error"],[R[0],["error"]]]]],[11,R[22],E,E,4,[[["self"]],["u32"]]],[11,R[23],E,E,4,[[["self"]],["u64"]]],[11,R[24],E,E,4,[[["self"]]]],[11,R[25],E,E,4,[[["self"]],[["error"],[R[0],["error"]]]]],[11,"clone",E,E,4,[[["self"]],[R[31]]]],[11,"clone",E,E,3,[[["self"]],[R[30]]]],[11,"clone",R[17],E,0,[[["self"]],[R[9]]]],[11,R[335],E,R[336],0,[[],["bool"]]],[11,R[337],E,R[338],0,[[],["bool"]]],[11,R[33],E,R[339],0,[[],["str"]]],[11,"new",E,R[340],1,[[[R[9]],["str"]],["error"]]],[11,R[341],E,R[342],1,[[[R[9]],["e"],["str"]],["error"]]],[11,R[343],E,R[344],1,[[["self"]],[[R[44],["box"]],["box",["error"]]]]],[11,"new",R[19],R[12],3,[[["r"]],[R[30]]]],[11,"index",E,R[13],3,[[["self"]],["usize"]]],[11,"reset",E,R[14],3,[[["self"]]]],[11,R[15],E,R[16],3,[[["self"],["usize"]]]],[11,"new",E,R[12],4,[[["r"]],[R[31]]]],[11,"index",E,R[13],4,[[["self"]],["usize"]]],[11,"reset",E,R[14],4,[[["self"]]]],[11,R[15],E,R[16],4,[[["self"],["usize"]]]]],"p":[[4,R[35]],[3,"Error"],[8,R[38]],[3,R[36]],[3,R[37]],[8,"RngCore"],[8,R[39]]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","i":[[3,"Hc128Rng","rand_hc",R[202],N,N],[3,R[203],E,"The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,R[20],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[[T],["self"]]]],[11,"fmt",E,E,0,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[32]]],[R[0]]]],[11,"clone",E,E,0,[[["self"]],["hc128rng"]]],[11,"clone",E,E,1,[[["self"]],["hc128core"]]],[11,R[26],E,E,0,[[],["self"]]],[11,R[28],E,E,0,[[[R[29]]],[["error"],[R[0],["error"]]]]],[11,R[26],E,"Create an HC-128 random number generator with a seed. The…",1,[[],["self"]]],[11,R[22],E,E,0,[[["self"]],["u32"]]],[11,R[23],E,E,0,[[["self"]],["u64"]]],[11,R[24],E,E,0,[[["self"]]]],[11,R[25],E,E,0,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[195],E,E,1,[[["self"]]]]],"p":[[3,"Hc128Rng"],[3,R[203]]]};
searchIndex["rand_isaac"]={"doc":"The ISAAC and ISAAC-64 random number generators.","i":[[0,"isaac",R[190],"The ISAAC random number generator.",N,N],[3,"IsaacRng",R[193],"A random number generator that uses the ISAAC algorithm.",N,N],[3,R[201],E,"The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,R[191],E,R[198],0,[[["u64"]],["self"]]],[0,"isaac64",R[190],"The ISAAC-64 random number generator.",N,N],[3,R[199],R[194],"A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,R[200],E,"The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,R[191],E,R[192],1,[[["u64"]],["self"]]],[11,R[191],E,R[192],2,[[["u64"]],["self"]]],[11,"from",R[193],E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,R[20],E,E,3,[[["self"]],[T]]],[11,R[21],E,E,3,[[[T],["self"]]]],[11,"from",R[194],E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,R[20],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,R[20],E,E,2,[[["self"]],[T]]],[11,R[21],E,E,2,[[[T],["self"]]]],[11,"fmt",R[193],E,0,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",R[194],E,1,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[32]]],[R[0]]]],[11,"clone",R[193],E,0,[[["self"]],["isaacrng"]]],[11,"clone",E,E,3,[[["self"]],["isaaccore"]]],[11,"clone",R[194],E,1,[[["self"]],["isaac64rng"]]],[11,"clone",E,E,2,[[["self"]],["isaac64core"]]],[11,R[26],R[193],E,0,[[],["self"]]],[11,R[27],E,R[198],0,[[["u64"]],["self"]]],[11,R[28],E,E,0,[[[R[29]]],[["error"],[R[0],["error"]]]]],[11,R[26],E,E,3,[[],["self"]]],[11,R[27],E,R[198],3,[[["u64"]],["self"]]],[11,R[28],E,E,3,[[[R[29]]],[["error"],[R[0],["error"]]]]],[11,R[26],R[194],E,1,[[],["self"]]],[11,R[27],E,R[198],1,[[["u64"]],["self"]]],[11,R[28],E,E,1,[[[R[29]]],[["error"],[R[0],["error"]]]]],[11,R[26],E,E,2,[[],["self"]]],[11,R[27],E,E,2,[[["u64"]],["self"]]],[11,R[28],E,E,2,[[[R[29]]],[["error"],[R[0],["error"]]]]],[11,R[22],R[193],E,0,[[["self"]],["u32"]]],[11,R[23],E,E,0,[[["self"]],["u64"]]],[11,R[24],E,E,0,[[["self"]]]],[11,R[25],E,E,0,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[22],R[194],E,1,[[["self"]],["u32"]]],[11,R[23],E,E,1,[[["self"]],["u64"]]],[11,R[24],E,E,1,[[["self"]]]],[11,R[25],E,E,1,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[195],R[193],R[196],3,[[["self"],[R[197]]]]],[11,R[195],R[194],R[196],2,[[["self"],[R[197]]]]]],"p":[[3,"IsaacRng"],[3,R[199]],[3,R[200]],[3,R[201]]]};
searchIndex["rand_jitter"]={"doc":"Non-physical true random number generator based on timing…","i":[[3,R[228],"rand_jitter",R[345],N,N],[4,R[227],E,R[346],N,N],[13,"NoTimer",E,R[347],0,N],[13,R[348],E,R[349],0,N],[13,R[350],E,R[351],0,N],[13,R[352],E,R[353],0,N],[13,R[354],E,R[355],0,N],[11,"new",E,R[356],1,[[],[[R[225]],[R[0],[R[225],R[226]]],[R[226]]]]],[11,R[357],E,R[358],1,[[],[R[225]]]],[11,R[359],E,R[360],1,[[["self"],["u8"]]]],[11,R[361],E,R[362],1,[[["self"]],[["u8"],[R[226]],[R[0],["u8",R[226]]]]]],[11,R[363],E,R[364],1,[[["self"],["bool"]],["i64"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,R[20],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[[T],["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[66],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"eq",E,E,0,[[["self"],[R[226]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,0,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[32]]],[R[0]]]],[11,"clone",E,E,0,[[["self"]],[R[226]]]],[11,"clone",E,E,1,[[["self"]],[R[225]]]],[11,R[33],E,E,0,[[["self"]],["str"]]],[11,R[22],E,E,1,[[["self"]],["u32"]]],[11,R[23],E,E,1,[[["self"]],["u64"]]],[11,R[24],E,E,1,[[["self"]]]],[11,R[25],E,E,1,[[["self"]],[[R[0],["error"]],["error"]]]]],"p":[[4,R[227]],[3,R[228]]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","i":[[3,"OsRng","rand_os",R[365],N,N],[11,"new",E,R[366],0,[[],[[R[0],["osrng","error"]],["error"],["osrng"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"clone",E,E,0,[[["self"]],["osrng"]]],[11,"fmt",E,E,0,[[["self"],[R[32]]],[R[0]]]],[11,R[22],E,E,0,[[["self"]],["u32"]]],[11,R[23],E,E,0,[[["self"]],["u64"]]],[11,R[24],E,E,0,[[["self"]]]],[11,R[25],E,E,0,[[["self"]],[["error"],[R[0],["error"]]]]]],"p":[[3,"OsRng"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","i":[[3,R[185],"rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,R[186],E,"A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new",E,"Construct an instance compatible with PCG seed and stream.",0,[[["u64"]],["self"]]],[11,"new",E,"Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32",E,"`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg",E,"A friendly name for `Mcg128Xsl64`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,R[20],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[[T],["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[32]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[32]]],[R[0]]]],[11,"clone",E,E,0,[[["self"]],["lcg64xsh32"]]],[11,"clone",E,E,1,[[["self"]],["mcg128xsl64"]]],[11,R[22],E,E,0,[[["self"]],["u32"]]],[11,R[23],E,E,0,[[["self"]],["u64"]]],[11,R[24],E,E,0,[[["self"]]]],[11,R[25],E,E,0,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[22],E,E,1,[[["self"]],["u32"]]],[11,R[23],E,E,1,[[["self"]],["u64"]]],[11,R[24],E,E,1,[[["self"]]]],[11,R[25],E,E,1,[[["self"]],[[R[0],["error"]],["error"]]]],[11,R[26],E,E,0,[[],["self"]]],[11,R[26],E,E,1,[[],["self"]]]],"p":[[3,R[185]],[3,R[186]]]};
searchIndex["rand_xorshift"]={"doc":"The xorshift random number generator.","i":[[3,R[204],"rand_xorshift","An Xorshift random number generator.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[32]]],[R[0]]]],[11,"clone",E,E,0,[[["self"]],["xorshiftrng"]]],[11,R[26],E,E,0,[[],["self"]]],[11,R[28],E,E,0,[[[R[29]]],[["error"],[R[0],["error"]]]]],[11,R[22],E,E,0,[[["self"]],["u32"]]],[11,R[23],E,E,0,[[["self"]],["u64"]]],[11,R[24],E,E,0,[[["self"]]]],[11,R[25],E,E,0,[[["self"]],[[R[0],["error"]],["error"]]]]],"p":[[3,R[204]]]};
searchIndex["sha2"]={"doc":"An implementation of the [SHA-2][1] cryptographic hash…","i":[[8,"Digest","sha2",R[367],N,N],[16,R[237],E,E,0,N],[10,"new",E,R[368],0,[[],["self"]]],[10,"input",E,R[231],0,[[["self"],["b"]]]],[10,"chain",E,R[236],0,[[["b"]],["self"]]],[10,R[0],E,R[238],0,[[],[[R[213],["u8"]],["u8"]]]],[10,R[232],E,R[369],0,[[["self"]],[[R[213],["u8"]],["u8"]]]],[10,"reset",E,R[233],0,[[["self"]]]],[10,R[234],E,R[235],0,[[],["usize"]]],[10,"digest",E,R[370],0,[[],[[R[213],["u8"]],["u8"]]]],[3,"Sha256",E,"The SHA-256 hash algorithm with the SHA-256 initial hash…",N,N],[3,"Sha224",E,"The SHA-256 hash algorithm with the SHA-224 initial hash…",N,N],[3,"Sha512",E,R[435],N,N],[3,"Sha384",E,"The SHA-512 hash algorithm with the SHA-384 initial hash…",N,N],[3,R[374],E,"The SHA-512 hash algorithm with the SHA-512/224 initial…",N,N],[3,R[375],E,"The SHA-512 hash algorithm with the SHA-512/256 initial…",N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"new",E,E,1,[[],["d"]]],[11,"input",E,E,1,[[["self"],["b"]]]],[11,"chain",E,E,1,[[["b"]],["d"]]],[11,R[0],E,E,1,[[],[[R[213],["u8"]],["u8"]]]],[11,R[232],E,E,1,[[["self"]],[[R[213],["u8"]],["u8"]]]],[11,"reset",E,E,1,[[["self"]]]],[11,R[234],E,E,1,[[],["usize"]]],[11,"digest",E,E,1,[[],[[R[213],["u8"]],["u8"]]]],[11,"input",E,R[231],1,[[["self"]]]],[11,R[232],E,R[371],1,[[["self"]],["box"]]],[11,R[0],E,R[372],1,[[["box"]],["box"]]],[11,"reset",E,E,1,[[["self"]]]],[11,R[234],E,R[235],1,[[["self"]],["usize"]]],[11,R[20],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,"new",E,E,2,[[],["d"]]],[11,"input",E,E,2,[[["self"],["b"]]]],[11,"chain",E,E,2,[[["b"]],["d"]]],[11,R[0],E,E,2,[[],[[R[213],["u8"]],["u8"]]]],[11,R[232],E,E,2,[[["self"]],[[R[213],["u8"]],["u8"]]]],[11,"reset",E,E,2,[[["self"]]]],[11,R[234],E,E,2,[[],["usize"]]],[11,"digest",E,E,2,[[],[[R[213],["u8"]],["u8"]]]],[11,"input",E,R[231],2,[[["self"]]]],[11,R[232],E,R[371],2,[[["self"]],["box"]]],[11,R[0],E,R[372],2,[[["box"]],["box"]]],[11,"reset",E,E,2,[[["self"]]]],[11,R[234],E,R[235],2,[[["self"]],["usize"]]],[11,R[20],E,E,2,[[["self"]],[T]]],[11,R[21],E,E,2,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,"new",E,E,3,[[],["d"]]],[11,"input",E,E,3,[[["self"],["b"]]]],[11,"chain",E,E,3,[[["b"]],["d"]]],[11,R[0],E,E,3,[[],[[R[213],["u8"]],["u8"]]]],[11,R[232],E,E,3,[[["self"]],[[R[213],["u8"]],["u8"]]]],[11,"reset",E,E,3,[[["self"]]]],[11,R[234],E,E,3,[[],["usize"]]],[11,"digest",E,E,3,[[],[[R[213],["u8"]],["u8"]]]],[11,"input",E,R[231],3,[[["self"]]]],[11,R[232],E,R[371],3,[[["self"]],["box"]]],[11,R[0],E,R[372],3,[[["box"]],["box"]]],[11,"reset",E,E,3,[[["self"]]]],[11,R[234],E,R[235],3,[[["self"]],["usize"]]],[11,R[20],E,E,3,[[["self"]],[T]]],[11,R[21],E,E,3,[[[T],["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,"into",E,E,4,[[],[U]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,"new",E,E,4,[[],["d"]]],[11,"input",E,E,4,[[["self"],["b"]]]],[11,"chain",E,E,4,[[["b"]],["d"]]],[11,R[0],E,E,4,[[],[[R[213],["u8"]],["u8"]]]],[11,R[232],E,E,4,[[["self"]],[[R[213],["u8"]],["u8"]]]],[11,"reset",E,E,4,[[["self"]]]],[11,R[234],E,E,4,[[],["usize"]]],[11,"digest",E,E,4,[[],[[R[213],["u8"]],["u8"]]]],[11,"input",E,R[231],4,[[["self"]]]],[11,R[232],E,R[371],4,[[["self"]],["box"]]],[11,R[0],E,R[372],4,[[["box"]],["box"]]],[11,"reset",E,E,4,[[["self"]]]],[11,R[234],E,R[235],4,[[["self"]],["usize"]]],[11,R[20],E,E,4,[[["self"]],[T]]],[11,R[21],E,E,4,[[[T],["self"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[1],E,E,5,[[[U]],[R[0]]]],[11,"into",E,E,5,[[],[U]]],[11,R[2],E,E,5,[[],[R[0]]]],[11,R[3],E,E,5,[[["self"]],[T]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[R[6]]]],[11,"new",E,E,5,[[],["d"]]],[11,"input",E,E,5,[[["self"],["b"]]]],[11,"chain",E,E,5,[[["b"]],["d"]]],[11,R[0],E,E,5,[[],[[R[213],["u8"]],["u8"]]]],[11,R[232],E,E,5,[[["self"]],[[R[213],["u8"]],["u8"]]]],[11,"reset",E,E,5,[[["self"]]]],[11,R[234],E,E,5,[[],["usize"]]],[11,"digest",E,E,5,[[],[[R[213],["u8"]],["u8"]]]],[11,"input",E,R[231],5,[[["self"]]]],[11,R[232],E,R[371],5,[[["self"]],["box"]]],[11,R[0],E,R[372],5,[[["box"]],["box"]]],[11,"reset",E,E,5,[[["self"]]]],[11,R[234],E,R[235],5,[[["self"]],["usize"]]],[11,R[20],E,E,5,[[["self"]],[T]]],[11,R[21],E,E,5,[[[T],["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[1],E,E,6,[[[U]],[R[0]]]],[11,"into",E,E,6,[[],[U]]],[11,R[2],E,E,6,[[],[R[0]]]],[11,R[3],E,E,6,[[["self"]],[T]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[R[6]]]],[11,"new",E,E,6,[[],["d"]]],[11,"input",E,E,6,[[["self"],["b"]]]],[11,"chain",E,E,6,[[["b"]],["d"]]],[11,R[0],E,E,6,[[],[[R[213],["u8"]],["u8"]]]],[11,R[232],E,E,6,[[["self"]],[[R[213],["u8"]],["u8"]]]],[11,"reset",E,E,6,[[["self"]]]],[11,R[234],E,E,6,[[],["usize"]]],[11,"digest",E,E,6,[[],[[R[213],["u8"]],["u8"]]]],[11,"input",E,R[231],6,[[["self"]]]],[11,R[232],E,R[371],6,[[["self"]],["box"]]],[11,R[0],E,R[372],6,[[["box"]],["box"]]],[11,"reset",E,E,6,[[["self"]]]],[11,R[234],E,R[235],6,[[["self"]],["usize"]]],[11,R[20],E,E,6,[[["self"]],[T]]],[11,R[21],E,E,6,[[[T],["self"]]]],[11,"fmt",E,E,2,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,5,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[32]]],[[R[0],["error"]],["error"]]]],[11,"clone",E,E,1,[[["self"]],["sha256"]]],[11,"clone",E,E,2,[[["self"]],["sha224"]]],[11,"clone",E,E,3,[[["self"]],["sha512"]]],[11,"clone",E,E,4,[[["self"]],["sha384"]]],[11,"clone",E,E,6,[[["self"]],["sha512trunc256"]]],[11,"clone",E,E,5,[[["self"]],["sha512trunc224"]]],[11,R[128],E,E,1,[[],["self"]]],[11,R[128],E,E,2,[[],["self"]]],[11,R[128],E,E,3,[[],["self"]]],[11,R[128],E,E,4,[[],["self"]]],[11,R[128],E,E,6,[[],["self"]]],[11,R[128],E,E,5,[[],["self"]]],[11,R[373],E,E,1,[[],[["u8"],[R[213],["u8"]]]]],[11,R[373],E,E,2,[[],[["u8"],[R[213],["u8"]]]]],[11,R[373],E,E,3,[[],[["u8"],[R[213],["u8"]]]]],[11,R[373],E,E,4,[[],[["u8"],[R[213],["u8"]]]]],[11,R[373],E,E,6,[[],[["u8"],[R[213],["u8"]]]]],[11,R[373],E,E,5,[[],[["u8"],[R[213],["u8"]]]]],[11,"input",E,E,1,[[["self"],["asref"]]]],[11,"input",E,E,2,[[["self"],["asref"]]]],[11,"input",E,E,3,[[["self"],["asref"]]]],[11,"input",E,E,4,[[["self"],["asref"]]]],[11,"input",E,E,6,[[["self"],["asref"]]]],[11,"input",E,E,5,[[["self"],["asref"]]]],[11,"reset",E,E,1,[[["self"]]]],[11,"reset",E,E,2,[[["self"]]]],[11,"reset",E,E,3,[[["self"]]]],[11,"reset",E,E,4,[[["self"]]]],[11,"reset",E,E,6,[[["self"]]]],[11,"reset",E,E,5,[[["self"]]]],[11,"write",E,E,2,[[["self"]],[["usize"],[R[0],["usize"]]]]],[11,"flush",E,E,2,[[["self"]],[R[0]]]],[11,"write",E,E,1,[[["self"]],[["usize"],[R[0],["usize"]]]]],[11,"flush",E,E,1,[[["self"]],[R[0]]]],[11,"write",E,E,4,[[["self"]],[["usize"],[R[0],["usize"]]]]],[11,"flush",E,E,4,[[["self"]],[R[0]]]],[11,"write",E,E,3,[[["self"]],[["usize"],[R[0],["usize"]]]]],[11,"flush",E,E,3,[[["self"]],[R[0]]]],[11,"write",E,E,5,[[["self"]],[["usize"],[R[0],["usize"]]]]],[11,"flush",E,E,5,[[["self"]],[R[0]]]],[11,"write",E,E,6,[[["self"]],[["usize"],[R[0],["usize"]]]]],[11,"flush",E,E,6,[[["self"]],[R[0]]]]],"p":[[8,"Digest"],[3,"Sha256"],[3,"Sha224"],[3,"Sha512"],[3,"Sha384"],[3,R[374]],[3,R[375]]]};
searchIndex["subtle"]={"doc":R[425],"i":[[3,"Choice","subtle","The `Choice` struct represents a choice for use in…",N,N],[3,R[56],E,"The `CtOption<T>` type represents an optional value…",N,N],[8,R[53],E,"An `Eq`-like trait that produces a `Choice` instead of a…",N,N],[10,"ct_eq",E,"Determine if two items are equal.",0,[[["self"]],[R[48]]]],[8,R[54],E,"A type which can be conditionally selected in constant time.",N,N],[10,R[52],E,"Select `a` or `b` according to `choice`.",1,[[["self"],[R[48]]],["self"]]],[11,"conditional_assign",E,"Conditionally assign `other` to `self`, according to…",1,[[["self"],["self"],[R[48]]]]],[11,"conditional_swap",E,"Conditionally swap `self` and `other` if `choice == 1`;…",1,[[["self"],[R[48]]]]],[8,R[55],E,"A type which can be conditionally negated in constant time.",N,N],[10,R[400],E,"Negate `self` if `choice == Choice(1)`; otherwise, leave…",2,[[["self"],[R[48]]]]],[11,"unwrap_u8",E,"Unwrap the `Choice` wrapper to reveal the underlying `u8`.",3,[[["self"]],["u8"]]],[11,"new",E,"This method is used to construct a new `CtOption<T>` and…",4,[[[T],[R[48]]],[R[50]]]],[11,"unwrap",E,"This returns the underlying value but panics if it is not…",4,[[],[T]]],[11,"unwrap_or",E,R[49],4,[[[T]],[T]]],[11,"unwrap_or_else",E,R[49],4,[[["f"]],[T]]],[11,"is_some",E,"Returns a true `Choice` if this value is `Some`.",4,[[["self"]],[R[48]]]],[11,"is_none",E,"Returns a true `Choice` if this value is `None`.",4,[[["self"]],[R[48]]]],[11,"map",E,R[51],4,[[["f"]],[R[50]]]],[11,"and_then",E,R[51],4,[[["f"]],[R[50]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,R[20],E,E,3,[[["self"]],[T]]],[11,R[21],E,E,3,[[[T],["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,"into",E,E,4,[[],[U]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,R[20],E,E,4,[[["self"]],[T]]],[11,R[21],E,E,4,[[[T],["self"]]]],[11,"ct_eq",E,"Two `CtOption<T>`s are equal if they are both `Some` and…",4,[[[R[50]],["self"]],[R[48]]]],[11,R[52],E,E,3,[[["self"],[R[48]]],["self"]]],[11,R[52],E,E,4,[[["self"],[R[48]]],["self"]]],[11,"from",E,E,3,[[["u8"]],[R[48]]]],[11,"fmt",E,E,3,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,4,[[[R[32]],["self"]],[R[0]]]],[11,"not",E,E,3,[[],[R[48]]]],[11,"bitand",E,E,3,[[[R[48]]],[R[48]]]],[11,"bitor",E,E,3,[[[R[48]]],[R[48]]]],[11,"bitxor",E,E,3,[[[R[48]]],[R[48]]]],[11,"bitand_assign",E,E,3,[[["self"],[R[48]]]]],[11,"bitor_assign",E,E,3,[[["self"],[R[48]]]]],[11,"bitxor_assign",E,E,3,[[["self"],[R[48]]]]],[11,"clone",E,E,3,[[["self"]],[R[48]]]],[11,"clone",E,E,4,[[["self"]],[R[50]]]]],"p":[[8,R[53]],[8,R[54]],[8,R[55]],[3,"Choice"],[3,R[56]]]};
searchIndex["typenum"]={"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater",R[110],R[106],N,N],[3,"Less",E,R[106],N,N],[3,"Equal",E,R[106],N,N],[0,"consts",E,"Type aliases for many constants.",N,N],[6,"True","typenum::consts",E,N,N],[6,"False",E,E,N,N],[6,"U0",E,E,N,N],[6,"U1",E,E,N,N],[6,"P1",E,E,N,N],[6,"N1",E,E,N,N],[6,"U2",E,E,N,N],[6,"P2",E,E,N,N],[6,"N2",E,E,N,N],[6,"U3",E,E,N,N],[6,"P3",E,E,N,N],[6,"N3",E,E,N,N],[6,"U4",E,E,N,N],[6,"P4",E,E,N,N],[6,"N4",E,E,N,N],[6,"U5",E,E,N,N],[6,"P5",E,E,N,N],[6,"N5",E,E,N,N],[6,"U6",E,E,N,N],[6,"P6",E,E,N,N],[6,"N6",E,E,N,N],[6,"U7",E,E,N,N],[6,"P7",E,E,N,N],[6,"N7",E,E,N,N],[6,"U8",E,E,N,N],[6,"P8",E,E,N,N],[6,"N8",E,E,N,N],[6,"U9",E,E,N,N],[6,"P9",E,E,N,N],[6,"N9",E,E,N,N],[6,"U10",E,E,N,N],[6,"P10",E,E,N,N],[6,"N10",E,E,N,N],[6,"U11",E,E,N,N],[6,"P11",E,E,N,N],[6,"N11",E,E,N,N],[6,"U12",E,E,N,N],[6,"P12",E,E,N,N],[6,"N12",E,E,N,N],[6,"U13",E,E,N,N],[6,"P13",E,E,N,N],[6,"N13",E,E,N,N],[6,"U14",E,E,N,N],[6,"P14",E,E,N,N],[6,"N14",E,E,N,N],[6,"U15",E,E,N,N],[6,"P15",E,E,N,N],[6,"N15",E,E,N,N],[6,"U16",E,E,N,N],[6,"P16",E,E,N,N],[6,"N16",E,E,N,N],[6,"U17",E,E,N,N],[6,"P17",E,E,N,N],[6,"N17",E,E,N,N],[6,"U18",E,E,N,N],[6,"P18",E,E,N,N],[6,"N18",E,E,N,N],[6,"U19",E,E,N,N],[6,"P19",E,E,N,N],[6,"N19",E,E,N,N],[6,"U20",E,E,N,N],[6,"P20",E,E,N,N],[6,"N20",E,E,N,N],[6,"U21",E,E,N,N],[6,"P21",E,E,N,N],[6,"N21",E,E,N,N],[6,"U22",E,E,N,N],[6,"P22",E,E,N,N],[6,"N22",E,E,N,N],[6,"U23",E,E,N,N],[6,"P23",E,E,N,N],[6,"N23",E,E,N,N],[6,"U24",E,E,N,N],[6,"P24",E,E,N,N],[6,"N24",E,E,N,N],[6,"U25",E,E,N,N],[6,"P25",E,E,N,N],[6,"N25",E,E,N,N],[6,"U26",E,E,N,N],[6,"P26",E,E,N,N],[6,"N26",E,E,N,N],[6,"U27",E,E,N,N],[6,"P27",E,E,N,N],[6,"N27",E,E,N,N],[6,"U28",E,E,N,N],[6,"P28",E,E,N,N],[6,"N28",E,E,N,N],[6,"U29",E,E,N,N],[6,"P29",E,E,N,N],[6,"N29",E,E,N,N],[6,"U30",E,E,N,N],[6,"P30",E,E,N,N],[6,"N30",E,E,N,N],[6,"U31",E,E,N,N],[6,"P31",E,E,N,N],[6,"N31",E,E,N,N],[6,"U32",E,E,N,N],[6,"P32",E,E,N,N],[6,"N32",E,E,N,N],[6,"U33",E,E,N,N],[6,"P33",E,E,N,N],[6,"N33",E,E,N,N],[6,"U34",E,E,N,N],[6,"P34",E,E,N,N],[6,"N34",E,E,N,N],[6,"U35",E,E,N,N],[6,"P35",E,E,N,N],[6,"N35",E,E,N,N],[6,"U36",E,E,N,N],[6,"P36",E,E,N,N],[6,"N36",E,E,N,N],[6,"U37",E,E,N,N],[6,"P37",E,E,N,N],[6,"N37",E,E,N,N],[6,"U38",E,E,N,N],[6,"P38",E,E,N,N],[6,"N38",E,E,N,N],[6,"U39",E,E,N,N],[6,"P39",E,E,N,N],[6,"N39",E,E,N,N],[6,"U40",E,E,N,N],[6,"P40",E,E,N,N],[6,"N40",E,E,N,N],[6,"U41",E,E,N,N],[6,"P41",E,E,N,N],[6,"N41",E,E,N,N],[6,"U42",E,E,N,N],[6,"P42",E,E,N,N],[6,"N42",E,E,N,N],[6,"U43",E,E,N,N],[6,"P43",E,E,N,N],[6,"N43",E,E,N,N],[6,"U44",E,E,N,N],[6,"P44",E,E,N,N],[6,"N44",E,E,N,N],[6,"U45",E,E,N,N],[6,"P45",E,E,N,N],[6,"N45",E,E,N,N],[6,"U46",E,E,N,N],[6,"P46",E,E,N,N],[6,"N46",E,E,N,N],[6,"U47",E,E,N,N],[6,"P47",E,E,N,N],[6,"N47",E,E,N,N],[6,"U48",E,E,N,N],[6,"P48",E,E,N,N],[6,"N48",E,E,N,N],[6,"U49",E,E,N,N],[6,"P49",E,E,N,N],[6,"N49",E,E,N,N],[6,"U50",E,E,N,N],[6,"P50",E,E,N,N],[6,"N50",E,E,N,N],[6,"U51",E,E,N,N],[6,"P51",E,E,N,N],[6,"N51",E,E,N,N],[6,"U52",E,E,N,N],[6,"P52",E,E,N,N],[6,"N52",E,E,N,N],[6,"U53",E,E,N,N],[6,"P53",E,E,N,N],[6,"N53",E,E,N,N],[6,"U54",E,E,N,N],[6,"P54",E,E,N,N],[6,"N54",E,E,N,N],[6,"U55",E,E,N,N],[6,"P55",E,E,N,N],[6,"N55",E,E,N,N],[6,"U56",E,E,N,N],[6,"P56",E,E,N,N],[6,"N56",E,E,N,N],[6,"U57",E,E,N,N],[6,"P57",E,E,N,N],[6,"N57",E,E,N,N],[6,"U58",E,E,N,N],[6,"P58",E,E,N,N],[6,"N58",E,E,N,N],[6,"U59",E,E,N,N],[6,"P59",E,E,N,N],[6,"N59",E,E,N,N],[6,"U60",E,E,N,N],[6,"P60",E,E,N,N],[6,"N60",E,E,N,N],[6,"U61",E,E,N,N],[6,"P61",E,E,N,N],[6,"N61",E,E,N,N],[6,"U62",E,E,N,N],[6,"P62",E,E,N,N],[6,"N62",E,E,N,N],[6,"U63",E,E,N,N],[6,"P63",E,E,N,N],[6,"N63",E,E,N,N],[6,"U64",E,E,N,N],[6,"P64",E,E,N,N],[6,"N64",E,E,N,N],[6,"U65",E,E,N,N],[6,"P65",E,E,N,N],[6,"N65",E,E,N,N],[6,"U66",E,E,N,N],[6,"P66",E,E,N,N],[6,"N66",E,E,N,N],[6,"U67",E,E,N,N],[6,"P67",E,E,N,N],[6,"N67",E,E,N,N],[6,"U68",E,E,N,N],[6,"P68",E,E,N,N],[6,"N68",E,E,N,N],[6,"U69",E,E,N,N],[6,"P69",E,E,N,N],[6,"N69",E,E,N,N],[6,"U70",E,E,N,N],[6,"P70",E,E,N,N],[6,"N70",E,E,N,N],[6,"U71",E,E,N,N],[6,"P71",E,E,N,N],[6,"N71",E,E,N,N],[6,"U72",E,E,N,N],[6,"P72",E,E,N,N],[6,"N72",E,E,N,N],[6,"U73",E,E,N,N],[6,"P73",E,E,N,N],[6,"N73",E,E,N,N],[6,"U74",E,E,N,N],[6,"P74",E,E,N,N],[6,"N74",E,E,N,N],[6,"U75",E,E,N,N],[6,"P75",E,E,N,N],[6,"N75",E,E,N,N],[6,"U76",E,E,N,N],[6,"P76",E,E,N,N],[6,"N76",E,E,N,N],[6,"U77",E,E,N,N],[6,"P77",E,E,N,N],[6,"N77",E,E,N,N],[6,"U78",E,E,N,N],[6,"P78",E,E,N,N],[6,"N78",E,E,N,N],[6,"U79",E,E,N,N],[6,"P79",E,E,N,N],[6,"N79",E,E,N,N],[6,"U80",E,E,N,N],[6,"P80",E,E,N,N],[6,"N80",E,E,N,N],[6,"U81",E,E,N,N],[6,"P81",E,E,N,N],[6,"N81",E,E,N,N],[6,"U82",E,E,N,N],[6,"P82",E,E,N,N],[6,"N82",E,E,N,N],[6,"U83",E,E,N,N],[6,"P83",E,E,N,N],[6,"N83",E,E,N,N],[6,"U84",E,E,N,N],[6,"P84",E,E,N,N],[6,"N84",E,E,N,N],[6,"U85",E,E,N,N],[6,"P85",E,E,N,N],[6,"N85",E,E,N,N],[6,"U86",E,E,N,N],[6,"P86",E,E,N,N],[6,"N86",E,E,N,N],[6,"U87",E,E,N,N],[6,"P87",E,E,N,N],[6,"N87",E,E,N,N],[6,"U88",E,E,N,N],[6,"P88",E,E,N,N],[6,"N88",E,E,N,N],[6,"U89",E,E,N,N],[6,"P89",E,E,N,N],[6,"N89",E,E,N,N],[6,"U90",E,E,N,N],[6,"P90",E,E,N,N],[6,"N90",E,E,N,N],[6,"U91",E,E,N,N],[6,"P91",E,E,N,N],[6,"N91",E,E,N,N],[6,"U92",E,E,N,N],[6,"P92",E,E,N,N],[6,"N92",E,E,N,N],[6,"U93",E,E,N,N],[6,"P93",E,E,N,N],[6,"N93",E,E,N,N],[6,"U94",E,E,N,N],[6,"P94",E,E,N,N],[6,"N94",E,E,N,N],[6,"U95",E,E,N,N],[6,"P95",E,E,N,N],[6,"N95",E,E,N,N],[6,"U96",E,E,N,N],[6,"P96",E,E,N,N],[6,"N96",E,E,N,N],[6,"U97",E,E,N,N],[6,"P97",E,E,N,N],[6,"N97",E,E,N,N],[6,"U98",E,E,N,N],[6,"P98",E,E,N,N],[6,"N98",E,E,N,N],[6,"U99",E,E,N,N],[6,"P99",E,E,N,N],[6,"N99",E,E,N,N],[6,"U100",E,E,N,N],[6,"P100",E,E,N,N],[6,"N100",E,E,N,N],[6,"U101",E,E,N,N],[6,"P101",E,E,N,N],[6,"N101",E,E,N,N],[6,"U102",E,E,N,N],[6,"P102",E,E,N,N],[6,"N102",E,E,N,N],[6,"U103",E,E,N,N],[6,"P103",E,E,N,N],[6,"N103",E,E,N,N],[6,"U104",E,E,N,N],[6,"P104",E,E,N,N],[6,"N104",E,E,N,N],[6,"U105",E,E,N,N],[6,"P105",E,E,N,N],[6,"N105",E,E,N,N],[6,"U106",E,E,N,N],[6,"P106",E,E,N,N],[6,"N106",E,E,N,N],[6,"U107",E,E,N,N],[6,"P107",E,E,N,N],[6,"N107",E,E,N,N],[6,"U108",E,E,N,N],[6,"P108",E,E,N,N],[6,"N108",E,E,N,N],[6,"U109",E,E,N,N],[6,"P109",E,E,N,N],[6,"N109",E,E,N,N],[6,"U110",E,E,N,N],[6,"P110",E,E,N,N],[6,"N110",E,E,N,N],[6,"U111",E,E,N,N],[6,"P111",E,E,N,N],[6,"N111",E,E,N,N],[6,"U112",E,E,N,N],[6,"P112",E,E,N,N],[6,"N112",E,E,N,N],[6,"U113",E,E,N,N],[6,"P113",E,E,N,N],[6,"N113",E,E,N,N],[6,"U114",E,E,N,N],[6,"P114",E,E,N,N],[6,"N114",E,E,N,N],[6,"U115",E,E,N,N],[6,"P115",E,E,N,N],[6,"N115",E,E,N,N],[6,"U116",E,E,N,N],[6,"P116",E,E,N,N],[6,"N116",E,E,N,N],[6,"U117",E,E,N,N],[6,"P117",E,E,N,N],[6,"N117",E,E,N,N],[6,"U118",E,E,N,N],[6,"P118",E,E,N,N],[6,"N118",E,E,N,N],[6,"U119",E,E,N,N],[6,"P119",E,E,N,N],[6,"N119",E,E,N,N],[6,"U120",E,E,N,N],[6,"P120",E,E,N,N],[6,"N120",E,E,N,N],[6,"U121",E,E,N,N],[6,"P121",E,E,N,N],[6,"N121",E,E,N,N],[6,"U122",E,E,N,N],[6,"P122",E,E,N,N],[6,"N122",E,E,N,N],[6,"U123",E,E,N,N],[6,"P123",E,E,N,N],[6,"N123",E,E,N,N],[6,"U124",E,E,N,N],[6,"P124",E,E,N,N],[6,"N124",E,E,N,N],[6,"U125",E,E,N,N],[6,"P125",E,E,N,N],[6,"N125",E,E,N,N],[6,"U126",E,E,N,N],[6,"P126",E,E,N,N],[6,"N126",E,E,N,N],[6,"U127",E,E,N,N],[6,"P127",E,E,N,N],[6,"N127",E,E,N,N],[6,"U128",E,E,N,N],[6,"P128",E,E,N,N],[6,"N128",E,E,N,N],[6,"U129",E,E,N,N],[6,"P129",E,E,N,N],[6,"N129",E,E,N,N],[6,"U130",E,E,N,N],[6,"P130",E,E,N,N],[6,"N130",E,E,N,N],[6,"U131",E,E,N,N],[6,"P131",E,E,N,N],[6,"N131",E,E,N,N],[6,"U132",E,E,N,N],[6,"P132",E,E,N,N],[6,"N132",E,E,N,N],[6,"U133",E,E,N,N],[6,"P133",E,E,N,N],[6,"N133",E,E,N,N],[6,"U134",E,E,N,N],[6,"P134",E,E,N,N],[6,"N134",E,E,N,N],[6,"U135",E,E,N,N],[6,"P135",E,E,N,N],[6,"N135",E,E,N,N],[6,"U136",E,E,N,N],[6,"P136",E,E,N,N],[6,"N136",E,E,N,N],[6,"U137",E,E,N,N],[6,"P137",E,E,N,N],[6,"N137",E,E,N,N],[6,"U138",E,E,N,N],[6,"P138",E,E,N,N],[6,"N138",E,E,N,N],[6,"U139",E,E,N,N],[6,"P139",E,E,N,N],[6,"N139",E,E,N,N],[6,"U140",E,E,N,N],[6,"P140",E,E,N,N],[6,"N140",E,E,N,N],[6,"U141",E,E,N,N],[6,"P141",E,E,N,N],[6,"N141",E,E,N,N],[6,"U142",E,E,N,N],[6,"P142",E,E,N,N],[6,"N142",E,E,N,N],[6,"U143",E,E,N,N],[6,"P143",E,E,N,N],[6,"N143",E,E,N,N],[6,"U144",E,E,N,N],[6,"P144",E,E,N,N],[6,"N144",E,E,N,N],[6,"U145",E,E,N,N],[6,"P145",E,E,N,N],[6,"N145",E,E,N,N],[6,"U146",E,E,N,N],[6,"P146",E,E,N,N],[6,"N146",E,E,N,N],[6,"U147",E,E,N,N],[6,"P147",E,E,N,N],[6,"N147",E,E,N,N],[6,"U148",E,E,N,N],[6,"P148",E,E,N,N],[6,"N148",E,E,N,N],[6,"U149",E,E,N,N],[6,"P149",E,E,N,N],[6,"N149",E,E,N,N],[6,"U150",E,E,N,N],[6,"P150",E,E,N,N],[6,"N150",E,E,N,N],[6,"U151",E,E,N,N],[6,"P151",E,E,N,N],[6,"N151",E,E,N,N],[6,"U152",E,E,N,N],[6,"P152",E,E,N,N],[6,"N152",E,E,N,N],[6,"U153",E,E,N,N],[6,"P153",E,E,N,N],[6,"N153",E,E,N,N],[6,"U154",E,E,N,N],[6,"P154",E,E,N,N],[6,"N154",E,E,N,N],[6,"U155",E,E,N,N],[6,"P155",E,E,N,N],[6,"N155",E,E,N,N],[6,"U156",E,E,N,N],[6,"P156",E,E,N,N],[6,"N156",E,E,N,N],[6,"U157",E,E,N,N],[6,"P157",E,E,N,N],[6,"N157",E,E,N,N],[6,"U158",E,E,N,N],[6,"P158",E,E,N,N],[6,"N158",E,E,N,N],[6,"U159",E,E,N,N],[6,"P159",E,E,N,N],[6,"N159",E,E,N,N],[6,"U160",E,E,N,N],[6,"P160",E,E,N,N],[6,"N160",E,E,N,N],[6,"U161",E,E,N,N],[6,"P161",E,E,N,N],[6,"N161",E,E,N,N],[6,"U162",E,E,N,N],[6,"P162",E,E,N,N],[6,"N162",E,E,N,N],[6,"U163",E,E,N,N],[6,"P163",E,E,N,N],[6,"N163",E,E,N,N],[6,"U164",E,E,N,N],[6,"P164",E,E,N,N],[6,"N164",E,E,N,N],[6,"U165",E,E,N,N],[6,"P165",E,E,N,N],[6,"N165",E,E,N,N],[6,"U166",E,E,N,N],[6,"P166",E,E,N,N],[6,"N166",E,E,N,N],[6,"U167",E,E,N,N],[6,"P167",E,E,N,N],[6,"N167",E,E,N,N],[6,"U168",E,E,N,N],[6,"P168",E,E,N,N],[6,"N168",E,E,N,N],[6,"U169",E,E,N,N],[6,"P169",E,E,N,N],[6,"N169",E,E,N,N],[6,"U170",E,E,N,N],[6,"P170",E,E,N,N],[6,"N170",E,E,N,N],[6,"U171",E,E,N,N],[6,"P171",E,E,N,N],[6,"N171",E,E,N,N],[6,"U172",E,E,N,N],[6,"P172",E,E,N,N],[6,"N172",E,E,N,N],[6,"U173",E,E,N,N],[6,"P173",E,E,N,N],[6,"N173",E,E,N,N],[6,"U174",E,E,N,N],[6,"P174",E,E,N,N],[6,"N174",E,E,N,N],[6,"U175",E,E,N,N],[6,"P175",E,E,N,N],[6,"N175",E,E,N,N],[6,"U176",E,E,N,N],[6,"P176",E,E,N,N],[6,"N176",E,E,N,N],[6,"U177",E,E,N,N],[6,"P177",E,E,N,N],[6,"N177",E,E,N,N],[6,"U178",E,E,N,N],[6,"P178",E,E,N,N],[6,"N178",E,E,N,N],[6,"U179",E,E,N,N],[6,"P179",E,E,N,N],[6,"N179",E,E,N,N],[6,"U180",E,E,N,N],[6,"P180",E,E,N,N],[6,"N180",E,E,N,N],[6,"U181",E,E,N,N],[6,"P181",E,E,N,N],[6,"N181",E,E,N,N],[6,"U182",E,E,N,N],[6,"P182",E,E,N,N],[6,"N182",E,E,N,N],[6,"U183",E,E,N,N],[6,"P183",E,E,N,N],[6,"N183",E,E,N,N],[6,"U184",E,E,N,N],[6,"P184",E,E,N,N],[6,"N184",E,E,N,N],[6,"U185",E,E,N,N],[6,"P185",E,E,N,N],[6,"N185",E,E,N,N],[6,"U186",E,E,N,N],[6,"P186",E,E,N,N],[6,"N186",E,E,N,N],[6,"U187",E,E,N,N],[6,"P187",E,E,N,N],[6,"N187",E,E,N,N],[6,"U188",E,E,N,N],[6,"P188",E,E,N,N],[6,"N188",E,E,N,N],[6,"U189",E,E,N,N],[6,"P189",E,E,N,N],[6,"N189",E,E,N,N],[6,"U190",E,E,N,N],[6,"P190",E,E,N,N],[6,"N190",E,E,N,N],[6,"U191",E,E,N,N],[6,"P191",E,E,N,N],[6,"N191",E,E,N,N],[6,"U192",E,E,N,N],[6,"P192",E,E,N,N],[6,"N192",E,E,N,N],[6,"U193",E,E,N,N],[6,"P193",E,E,N,N],[6,"N193",E,E,N,N],[6,"U194",E,E,N,N],[6,"P194",E,E,N,N],[6,"N194",E,E,N,N],[6,"U195",E,E,N,N],[6,"P195",E,E,N,N],[6,"N195",E,E,N,N],[6,"U196",E,E,N,N],[6,"P196",E,E,N,N],[6,"N196",E,E,N,N],[6,"U197",E,E,N,N],[6,"P197",E,E,N,N],[6,"N197",E,E,N,N],[6,"U198",E,E,N,N],[6,"P198",E,E,N,N],[6,"N198",E,E,N,N],[6,"U199",E,E,N,N],[6,"P199",E,E,N,N],[6,"N199",E,E,N,N],[6,"U200",E,E,N,N],[6,"P200",E,E,N,N],[6,"N200",E,E,N,N],[6,"U201",E,E,N,N],[6,"P201",E,E,N,N],[6,"N201",E,E,N,N],[6,"U202",E,E,N,N],[6,"P202",E,E,N,N],[6,"N202",E,E,N,N],[6,"U203",E,E,N,N],[6,"P203",E,E,N,N],[6,"N203",E,E,N,N],[6,"U204",E,E,N,N],[6,"P204",E,E,N,N],[6,"N204",E,E,N,N],[6,"U205",E,E,N,N],[6,"P205",E,E,N,N],[6,"N205",E,E,N,N],[6,"U206",E,E,N,N],[6,"P206",E,E,N,N],[6,"N206",E,E,N,N],[6,"U207",E,E,N,N],[6,"P207",E,E,N,N],[6,"N207",E,E,N,N],[6,"U208",E,E,N,N],[6,"P208",E,E,N,N],[6,"N208",E,E,N,N],[6,"U209",E,E,N,N],[6,"P209",E,E,N,N],[6,"N209",E,E,N,N],[6,"U210",E,E,N,N],[6,"P210",E,E,N,N],[6,"N210",E,E,N,N],[6,"U211",E,E,N,N],[6,"P211",E,E,N,N],[6,"N211",E,E,N,N],[6,"U212",E,E,N,N],[6,"P212",E,E,N,N],[6,"N212",E,E,N,N],[6,"U213",E,E,N,N],[6,"P213",E,E,N,N],[6,"N213",E,E,N,N],[6,"U214",E,E,N,N],[6,"P214",E,E,N,N],[6,"N214",E,E,N,N],[6,"U215",E,E,N,N],[6,"P215",E,E,N,N],[6,"N215",E,E,N,N],[6,"U216",E,E,N,N],[6,"P216",E,E,N,N],[6,"N216",E,E,N,N],[6,"U217",E,E,N,N],[6,"P217",E,E,N,N],[6,"N217",E,E,N,N],[6,"U218",E,E,N,N],[6,"P218",E,E,N,N],[6,"N218",E,E,N,N],[6,"U219",E,E,N,N],[6,"P219",E,E,N,N],[6,"N219",E,E,N,N],[6,"U220",E,E,N,N],[6,"P220",E,E,N,N],[6,"N220",E,E,N,N],[6,"U221",E,E,N,N],[6,"P221",E,E,N,N],[6,"N221",E,E,N,N],[6,"U222",E,E,N,N],[6,"P222",E,E,N,N],[6,"N222",E,E,N,N],[6,"U223",E,E,N,N],[6,"P223",E,E,N,N],[6,"N223",E,E,N,N],[6,"U224",E,E,N,N],[6,"P224",E,E,N,N],[6,"N224",E,E,N,N],[6,"U225",E,E,N,N],[6,"P225",E,E,N,N],[6,"N225",E,E,N,N],[6,"U226",E,E,N,N],[6,"P226",E,E,N,N],[6,"N226",E,E,N,N],[6,"U227",E,E,N,N],[6,"P227",E,E,N,N],[6,"N227",E,E,N,N],[6,"U228",E,E,N,N],[6,"P228",E,E,N,N],[6,"N228",E,E,N,N],[6,"U229",E,E,N,N],[6,"P229",E,E,N,N],[6,"N229",E,E,N,N],[6,"U230",E,E,N,N],[6,"P230",E,E,N,N],[6,"N230",E,E,N,N],[6,"U231",E,E,N,N],[6,"P231",E,E,N,N],[6,"N231",E,E,N,N],[6,"U232",E,E,N,N],[6,"P232",E,E,N,N],[6,"N232",E,E,N,N],[6,"U233",E,E,N,N],[6,"P233",E,E,N,N],[6,"N233",E,E,N,N],[6,"U234",E,E,N,N],[6,"P234",E,E,N,N],[6,"N234",E,E,N,N],[6,"U235",E,E,N,N],[6,"P235",E,E,N,N],[6,"N235",E,E,N,N],[6,"U236",E,E,N,N],[6,"P236",E,E,N,N],[6,"N236",E,E,N,N],[6,"U237",E,E,N,N],[6,"P237",E,E,N,N],[6,"N237",E,E,N,N],[6,"U238",E,E,N,N],[6,"P238",E,E,N,N],[6,"N238",E,E,N,N],[6,"U239",E,E,N,N],[6,"P239",E,E,N,N],[6,"N239",E,E,N,N],[6,"U240",E,E,N,N],[6,"P240",E,E,N,N],[6,"N240",E,E,N,N],[6,"U241",E,E,N,N],[6,"P241",E,E,N,N],[6,"N241",E,E,N,N],[6,"U242",E,E,N,N],[6,"P242",E,E,N,N],[6,"N242",E,E,N,N],[6,"U243",E,E,N,N],[6,"P243",E,E,N,N],[6,"N243",E,E,N,N],[6,"U244",E,E,N,N],[6,"P244",E,E,N,N],[6,"N244",E,E,N,N],[6,"U245",E,E,N,N],[6,"P245",E,E,N,N],[6,"N245",E,E,N,N],[6,"U246",E,E,N,N],[6,"P246",E,E,N,N],[6,"N246",E,E,N,N],[6,"U247",E,E,N,N],[6,"P247",E,E,N,N],[6,"N247",E,E,N,N],[6,"U248",E,E,N,N],[6,"P248",E,E,N,N],[6,"N248",E,E,N,N],[6,"U249",E,E,N,N],[6,"P249",E,E,N,N],[6,"N249",E,E,N,N],[6,"U250",E,E,N,N],[6,"P250",E,E,N,N],[6,"N250",E,E,N,N],[6,"U251",E,E,N,N],[6,"P251",E,E,N,N],[6,"N251",E,E,N,N],[6,"U252",E,E,N,N],[6,"P252",E,E,N,N],[6,"N252",E,E,N,N],[6,"U253",E,E,N,N],[6,"P253",E,E,N,N],[6,"N253",E,E,N,N],[6,"U254",E,E,N,N],[6,"P254",E,E,N,N],[6,"N254",E,E,N,N],[6,"U255",E,E,N,N],[6,"P255",E,E,N,N],[6,"N255",E,E,N,N],[6,"U256",E,E,N,N],[6,"P256",E,E,N,N],[6,"N256",E,E,N,N],[6,"U257",E,E,N,N],[6,"P257",E,E,N,N],[6,"N257",E,E,N,N],[6,"U258",E,E,N,N],[6,"P258",E,E,N,N],[6,"N258",E,E,N,N],[6,"U259",E,E,N,N],[6,"P259",E,E,N,N],[6,"N259",E,E,N,N],[6,"U260",E,E,N,N],[6,"P260",E,E,N,N],[6,"N260",E,E,N,N],[6,"U261",E,E,N,N],[6,"P261",E,E,N,N],[6,"N261",E,E,N,N],[6,"U262",E,E,N,N],[6,"P262",E,E,N,N],[6,"N262",E,E,N,N],[6,"U263",E,E,N,N],[6,"P263",E,E,N,N],[6,"N263",E,E,N,N],[6,"U264",E,E,N,N],[6,"P264",E,E,N,N],[6,"N264",E,E,N,N],[6,"U265",E,E,N,N],[6,"P265",E,E,N,N],[6,"N265",E,E,N,N],[6,"U266",E,E,N,N],[6,"P266",E,E,N,N],[6,"N266",E,E,N,N],[6,"U267",E,E,N,N],[6,"P267",E,E,N,N],[6,"N267",E,E,N,N],[6,"U268",E,E,N,N],[6,"P268",E,E,N,N],[6,"N268",E,E,N,N],[6,"U269",E,E,N,N],[6,"P269",E,E,N,N],[6,"N269",E,E,N,N],[6,"U270",E,E,N,N],[6,"P270",E,E,N,N],[6,"N270",E,E,N,N],[6,"U271",E,E,N,N],[6,"P271",E,E,N,N],[6,"N271",E,E,N,N],[6,"U272",E,E,N,N],[6,"P272",E,E,N,N],[6,"N272",E,E,N,N],[6,"U273",E,E,N,N],[6,"P273",E,E,N,N],[6,"N273",E,E,N,N],[6,"U274",E,E,N,N],[6,"P274",E,E,N,N],[6,"N274",E,E,N,N],[6,"U275",E,E,N,N],[6,"P275",E,E,N,N],[6,"N275",E,E,N,N],[6,"U276",E,E,N,N],[6,"P276",E,E,N,N],[6,"N276",E,E,N,N],[6,"U277",E,E,N,N],[6,"P277",E,E,N,N],[6,"N277",E,E,N,N],[6,"U278",E,E,N,N],[6,"P278",E,E,N,N],[6,"N278",E,E,N,N],[6,"U279",E,E,N,N],[6,"P279",E,E,N,N],[6,"N279",E,E,N,N],[6,"U280",E,E,N,N],[6,"P280",E,E,N,N],[6,"N280",E,E,N,N],[6,"U281",E,E,N,N],[6,"P281",E,E,N,N],[6,"N281",E,E,N,N],[6,"U282",E,E,N,N],[6,"P282",E,E,N,N],[6,"N282",E,E,N,N],[6,"U283",E,E,N,N],[6,"P283",E,E,N,N],[6,"N283",E,E,N,N],[6,"U284",E,E,N,N],[6,"P284",E,E,N,N],[6,"N284",E,E,N,N],[6,"U285",E,E,N,N],[6,"P285",E,E,N,N],[6,"N285",E,E,N,N],[6,"U286",E,E,N,N],[6,"P286",E,E,N,N],[6,"N286",E,E,N,N],[6,"U287",E,E,N,N],[6,"P287",E,E,N,N],[6,"N287",E,E,N,N],[6,"U288",E,E,N,N],[6,"P288",E,E,N,N],[6,"N288",E,E,N,N],[6,"U289",E,E,N,N],[6,"P289",E,E,N,N],[6,"N289",E,E,N,N],[6,"U290",E,E,N,N],[6,"P290",E,E,N,N],[6,"N290",E,E,N,N],[6,"U291",E,E,N,N],[6,"P291",E,E,N,N],[6,"N291",E,E,N,N],[6,"U292",E,E,N,N],[6,"P292",E,E,N,N],[6,"N292",E,E,N,N],[6,"U293",E,E,N,N],[6,"P293",E,E,N,N],[6,"N293",E,E,N,N],[6,"U294",E,E,N,N],[6,"P294",E,E,N,N],[6,"N294",E,E,N,N],[6,"U295",E,E,N,N],[6,"P295",E,E,N,N],[6,"N295",E,E,N,N],[6,"U296",E,E,N,N],[6,"P296",E,E,N,N],[6,"N296",E,E,N,N],[6,"U297",E,E,N,N],[6,"P297",E,E,N,N],[6,"N297",E,E,N,N],[6,"U298",E,E,N,N],[6,"P298",E,E,N,N],[6,"N298",E,E,N,N],[6,"U299",E,E,N,N],[6,"P299",E,E,N,N],[6,"N299",E,E,N,N],[6,"U300",E,E,N,N],[6,"P300",E,E,N,N],[6,"N300",E,E,N,N],[6,"U301",E,E,N,N],[6,"P301",E,E,N,N],[6,"N301",E,E,N,N],[6,"U302",E,E,N,N],[6,"P302",E,E,N,N],[6,"N302",E,E,N,N],[6,"U303",E,E,N,N],[6,"P303",E,E,N,N],[6,"N303",E,E,N,N],[6,"U304",E,E,N,N],[6,"P304",E,E,N,N],[6,"N304",E,E,N,N],[6,"U305",E,E,N,N],[6,"P305",E,E,N,N],[6,"N305",E,E,N,N],[6,"U306",E,E,N,N],[6,"P306",E,E,N,N],[6,"N306",E,E,N,N],[6,"U307",E,E,N,N],[6,"P307",E,E,N,N],[6,"N307",E,E,N,N],[6,"U308",E,E,N,N],[6,"P308",E,E,N,N],[6,"N308",E,E,N,N],[6,"U309",E,E,N,N],[6,"P309",E,E,N,N],[6,"N309",E,E,N,N],[6,"U310",E,E,N,N],[6,"P310",E,E,N,N],[6,"N310",E,E,N,N],[6,"U311",E,E,N,N],[6,"P311",E,E,N,N],[6,"N311",E,E,N,N],[6,"U312",E,E,N,N],[6,"P312",E,E,N,N],[6,"N312",E,E,N,N],[6,"U313",E,E,N,N],[6,"P313",E,E,N,N],[6,"N313",E,E,N,N],[6,"U314",E,E,N,N],[6,"P314",E,E,N,N],[6,"N314",E,E,N,N],[6,"U315",E,E,N,N],[6,"P315",E,E,N,N],[6,"N315",E,E,N,N],[6,"U316",E,E,N,N],[6,"P316",E,E,N,N],[6,"N316",E,E,N,N],[6,"U317",E,E,N,N],[6,"P317",E,E,N,N],[6,"N317",E,E,N,N],[6,"U318",E,E,N,N],[6,"P318",E,E,N,N],[6,"N318",E,E,N,N],[6,"U319",E,E,N,N],[6,"P319",E,E,N,N],[6,"N319",E,E,N,N],[6,"U320",E,E,N,N],[6,"P320",E,E,N,N],[6,"N320",E,E,N,N],[6,"U321",E,E,N,N],[6,"P321",E,E,N,N],[6,"N321",E,E,N,N],[6,"U322",E,E,N,N],[6,"P322",E,E,N,N],[6,"N322",E,E,N,N],[6,"U323",E,E,N,N],[6,"P323",E,E,N,N],[6,"N323",E,E,N,N],[6,"U324",E,E,N,N],[6,"P324",E,E,N,N],[6,"N324",E,E,N,N],[6,"U325",E,E,N,N],[6,"P325",E,E,N,N],[6,"N325",E,E,N,N],[6,"U326",E,E,N,N],[6,"P326",E,E,N,N],[6,"N326",E,E,N,N],[6,"U327",E,E,N,N],[6,"P327",E,E,N,N],[6,"N327",E,E,N,N],[6,"U328",E,E,N,N],[6,"P328",E,E,N,N],[6,"N328",E,E,N,N],[6,"U329",E,E,N,N],[6,"P329",E,E,N,N],[6,"N329",E,E,N,N],[6,"U330",E,E,N,N],[6,"P330",E,E,N,N],[6,"N330",E,E,N,N],[6,"U331",E,E,N,N],[6,"P331",E,E,N,N],[6,"N331",E,E,N,N],[6,"U332",E,E,N,N],[6,"P332",E,E,N,N],[6,"N332",E,E,N,N],[6,"U333",E,E,N,N],[6,"P333",E,E,N,N],[6,"N333",E,E,N,N],[6,"U334",E,E,N,N],[6,"P334",E,E,N,N],[6,"N334",E,E,N,N],[6,"U335",E,E,N,N],[6,"P335",E,E,N,N],[6,"N335",E,E,N,N],[6,"U336",E,E,N,N],[6,"P336",E,E,N,N],[6,"N336",E,E,N,N],[6,"U337",E,E,N,N],[6,"P337",E,E,N,N],[6,"N337",E,E,N,N],[6,"U338",E,E,N,N],[6,"P338",E,E,N,N],[6,"N338",E,E,N,N],[6,"U339",E,E,N,N],[6,"P339",E,E,N,N],[6,"N339",E,E,N,N],[6,"U340",E,E,N,N],[6,"P340",E,E,N,N],[6,"N340",E,E,N,N],[6,"U341",E,E,N,N],[6,"P341",E,E,N,N],[6,"N341",E,E,N,N],[6,"U342",E,E,N,N],[6,"P342",E,E,N,N],[6,"N342",E,E,N,N],[6,"U343",E,E,N,N],[6,"P343",E,E,N,N],[6,"N343",E,E,N,N],[6,"U344",E,E,N,N],[6,"P344",E,E,N,N],[6,"N344",E,E,N,N],[6,"U345",E,E,N,N],[6,"P345",E,E,N,N],[6,"N345",E,E,N,N],[6,"U346",E,E,N,N],[6,"P346",E,E,N,N],[6,"N346",E,E,N,N],[6,"U347",E,E,N,N],[6,"P347",E,E,N,N],[6,"N347",E,E,N,N],[6,"U348",E,E,N,N],[6,"P348",E,E,N,N],[6,"N348",E,E,N,N],[6,"U349",E,E,N,N],[6,"P349",E,E,N,N],[6,"N349",E,E,N,N],[6,"U350",E,E,N,N],[6,"P350",E,E,N,N],[6,"N350",E,E,N,N],[6,"U351",E,E,N,N],[6,"P351",E,E,N,N],[6,"N351",E,E,N,N],[6,"U352",E,E,N,N],[6,"P352",E,E,N,N],[6,"N352",E,E,N,N],[6,"U353",E,E,N,N],[6,"P353",E,E,N,N],[6,"N353",E,E,N,N],[6,"U354",E,E,N,N],[6,"P354",E,E,N,N],[6,"N354",E,E,N,N],[6,"U355",E,E,N,N],[6,"P355",E,E,N,N],[6,"N355",E,E,N,N],[6,"U356",E,E,N,N],[6,"P356",E,E,N,N],[6,"N356",E,E,N,N],[6,"U357",E,E,N,N],[6,"P357",E,E,N,N],[6,"N357",E,E,N,N],[6,"U358",E,E,N,N],[6,"P358",E,E,N,N],[6,"N358",E,E,N,N],[6,"U359",E,E,N,N],[6,"P359",E,E,N,N],[6,"N359",E,E,N,N],[6,"U360",E,E,N,N],[6,"P360",E,E,N,N],[6,"N360",E,E,N,N],[6,"U361",E,E,N,N],[6,"P361",E,E,N,N],[6,"N361",E,E,N,N],[6,"U362",E,E,N,N],[6,"P362",E,E,N,N],[6,"N362",E,E,N,N],[6,"U363",E,E,N,N],[6,"P363",E,E,N,N],[6,"N363",E,E,N,N],[6,"U364",E,E,N,N],[6,"P364",E,E,N,N],[6,"N364",E,E,N,N],[6,"U365",E,E,N,N],[6,"P365",E,E,N,N],[6,"N365",E,E,N,N],[6,"U366",E,E,N,N],[6,"P366",E,E,N,N],[6,"N366",E,E,N,N],[6,"U367",E,E,N,N],[6,"P367",E,E,N,N],[6,"N367",E,E,N,N],[6,"U368",E,E,N,N],[6,"P368",E,E,N,N],[6,"N368",E,E,N,N],[6,"U369",E,E,N,N],[6,"P369",E,E,N,N],[6,"N369",E,E,N,N],[6,"U370",E,E,N,N],[6,"P370",E,E,N,N],[6,"N370",E,E,N,N],[6,"U371",E,E,N,N],[6,"P371",E,E,N,N],[6,"N371",E,E,N,N],[6,"U372",E,E,N,N],[6,"P372",E,E,N,N],[6,"N372",E,E,N,N],[6,"U373",E,E,N,N],[6,"P373",E,E,N,N],[6,"N373",E,E,N,N],[6,"U374",E,E,N,N],[6,"P374",E,E,N,N],[6,"N374",E,E,N,N],[6,"U375",E,E,N,N],[6,"P375",E,E,N,N],[6,"N375",E,E,N,N],[6,"U376",E,E,N,N],[6,"P376",E,E,N,N],[6,"N376",E,E,N,N],[6,"U377",E,E,N,N],[6,"P377",E,E,N,N],[6,"N377",E,E,N,N],[6,"U378",E,E,N,N],[6,"P378",E,E,N,N],[6,"N378",E,E,N,N],[6,"U379",E,E,N,N],[6,"P379",E,E,N,N],[6,"N379",E,E,N,N],[6,"U380",E,E,N,N],[6,"P380",E,E,N,N],[6,"N380",E,E,N,N],[6,"U381",E,E,N,N],[6,"P381",E,E,N,N],[6,"N381",E,E,N,N],[6,"U382",E,E,N,N],[6,"P382",E,E,N,N],[6,"N382",E,E,N,N],[6,"U383",E,E,N,N],[6,"P383",E,E,N,N],[6,"N383",E,E,N,N],[6,"U384",E,E,N,N],[6,"P384",E,E,N,N],[6,"N384",E,E,N,N],[6,"U385",E,E,N,N],[6,"P385",E,E,N,N],[6,"N385",E,E,N,N],[6,"U386",E,E,N,N],[6,"P386",E,E,N,N],[6,"N386",E,E,N,N],[6,"U387",E,E,N,N],[6,"P387",E,E,N,N],[6,"N387",E,E,N,N],[6,"U388",E,E,N,N],[6,"P388",E,E,N,N],[6,"N388",E,E,N,N],[6,"U389",E,E,N,N],[6,"P389",E,E,N,N],[6,"N389",E,E,N,N],[6,"U390",E,E,N,N],[6,"P390",E,E,N,N],[6,"N390",E,E,N,N],[6,"U391",E,E,N,N],[6,"P391",E,E,N,N],[6,"N391",E,E,N,N],[6,"U392",E,E,N,N],[6,"P392",E,E,N,N],[6,"N392",E,E,N,N],[6,"U393",E,E,N,N],[6,"P393",E,E,N,N],[6,"N393",E,E,N,N],[6,"U394",E,E,N,N],[6,"P394",E,E,N,N],[6,"N394",E,E,N,N],[6,"U395",E,E,N,N],[6,"P395",E,E,N,N],[6,"N395",E,E,N,N],[6,"U396",E,E,N,N],[6,"P396",E,E,N,N],[6,"N396",E,E,N,N],[6,"U397",E,E,N,N],[6,"P397",E,E,N,N],[6,"N397",E,E,N,N],[6,"U398",E,E,N,N],[6,"P398",E,E,N,N],[6,"N398",E,E,N,N],[6,"U399",E,E,N,N],[6,"P399",E,E,N,N],[6,"N399",E,E,N,N],[6,"U400",E,E,N,N],[6,"P400",E,E,N,N],[6,"N400",E,E,N,N],[6,"U401",E,E,N,N],[6,"P401",E,E,N,N],[6,"N401",E,E,N,N],[6,"U402",E,E,N,N],[6,"P402",E,E,N,N],[6,"N402",E,E,N,N],[6,"U403",E,E,N,N],[6,"P403",E,E,N,N],[6,"N403",E,E,N,N],[6,"U404",E,E,N,N],[6,"P404",E,E,N,N],[6,"N404",E,E,N,N],[6,"U405",E,E,N,N],[6,"P405",E,E,N,N],[6,"N405",E,E,N,N],[6,"U406",E,E,N,N],[6,"P406",E,E,N,N],[6,"N406",E,E,N,N],[6,"U407",E,E,N,N],[6,"P407",E,E,N,N],[6,"N407",E,E,N,N],[6,"U408",E,E,N,N],[6,"P408",E,E,N,N],[6,"N408",E,E,N,N],[6,"U409",E,E,N,N],[6,"P409",E,E,N,N],[6,"N409",E,E,N,N],[6,"U410",E,E,N,N],[6,"P410",E,E,N,N],[6,"N410",E,E,N,N],[6,"U411",E,E,N,N],[6,"P411",E,E,N,N],[6,"N411",E,E,N,N],[6,"U412",E,E,N,N],[6,"P412",E,E,N,N],[6,"N412",E,E,N,N],[6,"U413",E,E,N,N],[6,"P413",E,E,N,N],[6,"N413",E,E,N,N],[6,"U414",E,E,N,N],[6,"P414",E,E,N,N],[6,"N414",E,E,N,N],[6,"U415",E,E,N,N],[6,"P415",E,E,N,N],[6,"N415",E,E,N,N],[6,"U416",E,E,N,N],[6,"P416",E,E,N,N],[6,"N416",E,E,N,N],[6,"U417",E,E,N,N],[6,"P417",E,E,N,N],[6,"N417",E,E,N,N],[6,"U418",E,E,N,N],[6,"P418",E,E,N,N],[6,"N418",E,E,N,N],[6,"U419",E,E,N,N],[6,"P419",E,E,N,N],[6,"N419",E,E,N,N],[6,"U420",E,E,N,N],[6,"P420",E,E,N,N],[6,"N420",E,E,N,N],[6,"U421",E,E,N,N],[6,"P421",E,E,N,N],[6,"N421",E,E,N,N],[6,"U422",E,E,N,N],[6,"P422",E,E,N,N],[6,"N422",E,E,N,N],[6,"U423",E,E,N,N],[6,"P423",E,E,N,N],[6,"N423",E,E,N,N],[6,"U424",E,E,N,N],[6,"P424",E,E,N,N],[6,"N424",E,E,N,N],[6,"U425",E,E,N,N],[6,"P425",E,E,N,N],[6,"N425",E,E,N,N],[6,"U426",E,E,N,N],[6,"P426",E,E,N,N],[6,"N426",E,E,N,N],[6,"U427",E,E,N,N],[6,"P427",E,E,N,N],[6,"N427",E,E,N,N],[6,"U428",E,E,N,N],[6,"P428",E,E,N,N],[6,"N428",E,E,N,N],[6,"U429",E,E,N,N],[6,"P429",E,E,N,N],[6,"N429",E,E,N,N],[6,"U430",E,E,N,N],[6,"P430",E,E,N,N],[6,"N430",E,E,N,N],[6,"U431",E,E,N,N],[6,"P431",E,E,N,N],[6,"N431",E,E,N,N],[6,"U432",E,E,N,N],[6,"P432",E,E,N,N],[6,"N432",E,E,N,N],[6,"U433",E,E,N,N],[6,"P433",E,E,N,N],[6,"N433",E,E,N,N],[6,"U434",E,E,N,N],[6,"P434",E,E,N,N],[6,"N434",E,E,N,N],[6,"U435",E,E,N,N],[6,"P435",E,E,N,N],[6,"N435",E,E,N,N],[6,"U436",E,E,N,N],[6,"P436",E,E,N,N],[6,"N436",E,E,N,N],[6,"U437",E,E,N,N],[6,"P437",E,E,N,N],[6,"N437",E,E,N,N],[6,"U438",E,E,N,N],[6,"P438",E,E,N,N],[6,"N438",E,E,N,N],[6,"U439",E,E,N,N],[6,"P439",E,E,N,N],[6,"N439",E,E,N,N],[6,"U440",E,E,N,N],[6,"P440",E,E,N,N],[6,"N440",E,E,N,N],[6,"U441",E,E,N,N],[6,"P441",E,E,N,N],[6,"N441",E,E,N,N],[6,"U442",E,E,N,N],[6,"P442",E,E,N,N],[6,"N442",E,E,N,N],[6,"U443",E,E,N,N],[6,"P443",E,E,N,N],[6,"N443",E,E,N,N],[6,"U444",E,E,N,N],[6,"P444",E,E,N,N],[6,"N444",E,E,N,N],[6,"U445",E,E,N,N],[6,"P445",E,E,N,N],[6,"N445",E,E,N,N],[6,"U446",E,E,N,N],[6,"P446",E,E,N,N],[6,"N446",E,E,N,N],[6,"U447",E,E,N,N],[6,"P447",E,E,N,N],[6,"N447",E,E,N,N],[6,"U448",E,E,N,N],[6,"P448",E,E,N,N],[6,"N448",E,E,N,N],[6,"U449",E,E,N,N],[6,"P449",E,E,N,N],[6,"N449",E,E,N,N],[6,"U450",E,E,N,N],[6,"P450",E,E,N,N],[6,"N450",E,E,N,N],[6,"U451",E,E,N,N],[6,"P451",E,E,N,N],[6,"N451",E,E,N,N],[6,"U452",E,E,N,N],[6,"P452",E,E,N,N],[6,"N452",E,E,N,N],[6,"U453",E,E,N,N],[6,"P453",E,E,N,N],[6,"N453",E,E,N,N],[6,"U454",E,E,N,N],[6,"P454",E,E,N,N],[6,"N454",E,E,N,N],[6,"U455",E,E,N,N],[6,"P455",E,E,N,N],[6,"N455",E,E,N,N],[6,"U456",E,E,N,N],[6,"P456",E,E,N,N],[6,"N456",E,E,N,N],[6,"U457",E,E,N,N],[6,"P457",E,E,N,N],[6,"N457",E,E,N,N],[6,"U458",E,E,N,N],[6,"P458",E,E,N,N],[6,"N458",E,E,N,N],[6,"U459",E,E,N,N],[6,"P459",E,E,N,N],[6,"N459",E,E,N,N],[6,"U460",E,E,N,N],[6,"P460",E,E,N,N],[6,"N460",E,E,N,N],[6,"U461",E,E,N,N],[6,"P461",E,E,N,N],[6,"N461",E,E,N,N],[6,"U462",E,E,N,N],[6,"P462",E,E,N,N],[6,"N462",E,E,N,N],[6,"U463",E,E,N,N],[6,"P463",E,E,N,N],[6,"N463",E,E,N,N],[6,"U464",E,E,N,N],[6,"P464",E,E,N,N],[6,"N464",E,E,N,N],[6,"U465",E,E,N,N],[6,"P465",E,E,N,N],[6,"N465",E,E,N,N],[6,"U466",E,E,N,N],[6,"P466",E,E,N,N],[6,"N466",E,E,N,N],[6,"U467",E,E,N,N],[6,"P467",E,E,N,N],[6,"N467",E,E,N,N],[6,"U468",E,E,N,N],[6,"P468",E,E,N,N],[6,"N468",E,E,N,N],[6,"U469",E,E,N,N],[6,"P469",E,E,N,N],[6,"N469",E,E,N,N],[6,"U470",E,E,N,N],[6,"P470",E,E,N,N],[6,"N470",E,E,N,N],[6,"U471",E,E,N,N],[6,"P471",E,E,N,N],[6,"N471",E,E,N,N],[6,"U472",E,E,N,N],[6,"P472",E,E,N,N],[6,"N472",E,E,N,N],[6,"U473",E,E,N,N],[6,"P473",E,E,N,N],[6,"N473",E,E,N,N],[6,"U474",E,E,N,N],[6,"P474",E,E,N,N],[6,"N474",E,E,N,N],[6,"U475",E,E,N,N],[6,"P475",E,E,N,N],[6,"N475",E,E,N,N],[6,"U476",E,E,N,N],[6,"P476",E,E,N,N],[6,"N476",E,E,N,N],[6,"U477",E,E,N,N],[6,"P477",E,E,N,N],[6,"N477",E,E,N,N],[6,"U478",E,E,N,N],[6,"P478",E,E,N,N],[6,"N478",E,E,N,N],[6,"U479",E,E,N,N],[6,"P479",E,E,N,N],[6,"N479",E,E,N,N],[6,"U480",E,E,N,N],[6,"P480",E,E,N,N],[6,"N480",E,E,N,N],[6,"U481",E,E,N,N],[6,"P481",E,E,N,N],[6,"N481",E,E,N,N],[6,"U482",E,E,N,N],[6,"P482",E,E,N,N],[6,"N482",E,E,N,N],[6,"U483",E,E,N,N],[6,"P483",E,E,N,N],[6,"N483",E,E,N,N],[6,"U484",E,E,N,N],[6,"P484",E,E,N,N],[6,"N484",E,E,N,N],[6,"U485",E,E,N,N],[6,"P485",E,E,N,N],[6,"N485",E,E,N,N],[6,"U486",E,E,N,N],[6,"P486",E,E,N,N],[6,"N486",E,E,N,N],[6,"U487",E,E,N,N],[6,"P487",E,E,N,N],[6,"N487",E,E,N,N],[6,"U488",E,E,N,N],[6,"P488",E,E,N,N],[6,"N488",E,E,N,N],[6,"U489",E,E,N,N],[6,"P489",E,E,N,N],[6,"N489",E,E,N,N],[6,"U490",E,E,N,N],[6,"P490",E,E,N,N],[6,"N490",E,E,N,N],[6,"U491",E,E,N,N],[6,"P491",E,E,N,N],[6,"N491",E,E,N,N],[6,"U492",E,E,N,N],[6,"P492",E,E,N,N],[6,"N492",E,E,N,N],[6,"U493",E,E,N,N],[6,"P493",E,E,N,N],[6,"N493",E,E,N,N],[6,"U494",E,E,N,N],[6,"P494",E,E,N,N],[6,"N494",E,E,N,N],[6,"U495",E,E,N,N],[6,"P495",E,E,N,N],[6,"N495",E,E,N,N],[6,"U496",E,E,N,N],[6,"P496",E,E,N,N],[6,"N496",E,E,N,N],[6,"U497",E,E,N,N],[6,"P497",E,E,N,N],[6,"N497",E,E,N,N],[6,"U498",E,E,N,N],[6,"P498",E,E,N,N],[6,"N498",E,E,N,N],[6,"U499",E,E,N,N],[6,"P499",E,E,N,N],[6,"N499",E,E,N,N],[6,"U500",E,E,N,N],[6,"P500",E,E,N,N],[6,"N500",E,E,N,N],[6,"U501",E,E,N,N],[6,"P501",E,E,N,N],[6,"N501",E,E,N,N],[6,"U502",E,E,N,N],[6,"P502",E,E,N,N],[6,"N502",E,E,N,N],[6,"U503",E,E,N,N],[6,"P503",E,E,N,N],[6,"N503",E,E,N,N],[6,"U504",E,E,N,N],[6,"P504",E,E,N,N],[6,"N504",E,E,N,N],[6,"U505",E,E,N,N],[6,"P505",E,E,N,N],[6,"N505",E,E,N,N],[6,"U506",E,E,N,N],[6,"P506",E,E,N,N],[6,"N506",E,E,N,N],[6,"U507",E,E,N,N],[6,"P507",E,E,N,N],[6,"N507",E,E,N,N],[6,"U508",E,E,N,N],[6,"P508",E,E,N,N],[6,"N508",E,E,N,N],[6,"U509",E,E,N,N],[6,"P509",E,E,N,N],[6,"N509",E,E,N,N],[6,"U510",E,E,N,N],[6,"P510",E,E,N,N],[6,"N510",E,E,N,N],[6,"U511",E,E,N,N],[6,"P511",E,E,N,N],[6,"N511",E,E,N,N],[6,"U512",E,E,N,N],[6,"P512",E,E,N,N],[6,"N512",E,E,N,N],[6,"U513",E,E,N,N],[6,"P513",E,E,N,N],[6,"N513",E,E,N,N],[6,"U514",E,E,N,N],[6,"P514",E,E,N,N],[6,"N514",E,E,N,N],[6,"U515",E,E,N,N],[6,"P515",E,E,N,N],[6,"N515",E,E,N,N],[6,"U516",E,E,N,N],[6,"P516",E,E,N,N],[6,"N516",E,E,N,N],[6,"U517",E,E,N,N],[6,"P517",E,E,N,N],[6,"N517",E,E,N,N],[6,"U518",E,E,N,N],[6,"P518",E,E,N,N],[6,"N518",E,E,N,N],[6,"U519",E,E,N,N],[6,"P519",E,E,N,N],[6,"N519",E,E,N,N],[6,"U520",E,E,N,N],[6,"P520",E,E,N,N],[6,"N520",E,E,N,N],[6,"U521",E,E,N,N],[6,"P521",E,E,N,N],[6,"N521",E,E,N,N],[6,"U522",E,E,N,N],[6,"P522",E,E,N,N],[6,"N522",E,E,N,N],[6,"U523",E,E,N,N],[6,"P523",E,E,N,N],[6,"N523",E,E,N,N],[6,"U524",E,E,N,N],[6,"P524",E,E,N,N],[6,"N524",E,E,N,N],[6,"U525",E,E,N,N],[6,"P525",E,E,N,N],[6,"N525",E,E,N,N],[6,"U526",E,E,N,N],[6,"P526",E,E,N,N],[6,"N526",E,E,N,N],[6,"U527",E,E,N,N],[6,"P527",E,E,N,N],[6,"N527",E,E,N,N],[6,"U528",E,E,N,N],[6,"P528",E,E,N,N],[6,"N528",E,E,N,N],[6,"U529",E,E,N,N],[6,"P529",E,E,N,N],[6,"N529",E,E,N,N],[6,"U530",E,E,N,N],[6,"P530",E,E,N,N],[6,"N530",E,E,N,N],[6,"U531",E,E,N,N],[6,"P531",E,E,N,N],[6,"N531",E,E,N,N],[6,"U532",E,E,N,N],[6,"P532",E,E,N,N],[6,"N532",E,E,N,N],[6,"U533",E,E,N,N],[6,"P533",E,E,N,N],[6,"N533",E,E,N,N],[6,"U534",E,E,N,N],[6,"P534",E,E,N,N],[6,"N534",E,E,N,N],[6,"U535",E,E,N,N],[6,"P535",E,E,N,N],[6,"N535",E,E,N,N],[6,"U536",E,E,N,N],[6,"P536",E,E,N,N],[6,"N536",E,E,N,N],[6,"U537",E,E,N,N],[6,"P537",E,E,N,N],[6,"N537",E,E,N,N],[6,"U538",E,E,N,N],[6,"P538",E,E,N,N],[6,"N538",E,E,N,N],[6,"U539",E,E,N,N],[6,"P539",E,E,N,N],[6,"N539",E,E,N,N],[6,"U540",E,E,N,N],[6,"P540",E,E,N,N],[6,"N540",E,E,N,N],[6,"U541",E,E,N,N],[6,"P541",E,E,N,N],[6,"N541",E,E,N,N],[6,"U542",E,E,N,N],[6,"P542",E,E,N,N],[6,"N542",E,E,N,N],[6,"U543",E,E,N,N],[6,"P543",E,E,N,N],[6,"N543",E,E,N,N],[6,"U544",E,E,N,N],[6,"P544",E,E,N,N],[6,"N544",E,E,N,N],[6,"U545",E,E,N,N],[6,"P545",E,E,N,N],[6,"N545",E,E,N,N],[6,"U546",E,E,N,N],[6,"P546",E,E,N,N],[6,"N546",E,E,N,N],[6,"U547",E,E,N,N],[6,"P547",E,E,N,N],[6,"N547",E,E,N,N],[6,"U548",E,E,N,N],[6,"P548",E,E,N,N],[6,"N548",E,E,N,N],[6,"U549",E,E,N,N],[6,"P549",E,E,N,N],[6,"N549",E,E,N,N],[6,"U550",E,E,N,N],[6,"P550",E,E,N,N],[6,"N550",E,E,N,N],[6,"U551",E,E,N,N],[6,"P551",E,E,N,N],[6,"N551",E,E,N,N],[6,"U552",E,E,N,N],[6,"P552",E,E,N,N],[6,"N552",E,E,N,N],[6,"U553",E,E,N,N],[6,"P553",E,E,N,N],[6,"N553",E,E,N,N],[6,"U554",E,E,N,N],[6,"P554",E,E,N,N],[6,"N554",E,E,N,N],[6,"U555",E,E,N,N],[6,"P555",E,E,N,N],[6,"N555",E,E,N,N],[6,"U556",E,E,N,N],[6,"P556",E,E,N,N],[6,"N556",E,E,N,N],[6,"U557",E,E,N,N],[6,"P557",E,E,N,N],[6,"N557",E,E,N,N],[6,"U558",E,E,N,N],[6,"P558",E,E,N,N],[6,"N558",E,E,N,N],[6,"U559",E,E,N,N],[6,"P559",E,E,N,N],[6,"N559",E,E,N,N],[6,"U560",E,E,N,N],[6,"P560",E,E,N,N],[6,"N560",E,E,N,N],[6,"U561",E,E,N,N],[6,"P561",E,E,N,N],[6,"N561",E,E,N,N],[6,"U562",E,E,N,N],[6,"P562",E,E,N,N],[6,"N562",E,E,N,N],[6,"U563",E,E,N,N],[6,"P563",E,E,N,N],[6,"N563",E,E,N,N],[6,"U564",E,E,N,N],[6,"P564",E,E,N,N],[6,"N564",E,E,N,N],[6,"U565",E,E,N,N],[6,"P565",E,E,N,N],[6,"N565",E,E,N,N],[6,"U566",E,E,N,N],[6,"P566",E,E,N,N],[6,"N566",E,E,N,N],[6,"U567",E,E,N,N],[6,"P567",E,E,N,N],[6,"N567",E,E,N,N],[6,"U568",E,E,N,N],[6,"P568",E,E,N,N],[6,"N568",E,E,N,N],[6,"U569",E,E,N,N],[6,"P569",E,E,N,N],[6,"N569",E,E,N,N],[6,"U570",E,E,N,N],[6,"P570",E,E,N,N],[6,"N570",E,E,N,N],[6,"U571",E,E,N,N],[6,"P571",E,E,N,N],[6,"N571",E,E,N,N],[6,"U572",E,E,N,N],[6,"P572",E,E,N,N],[6,"N572",E,E,N,N],[6,"U573",E,E,N,N],[6,"P573",E,E,N,N],[6,"N573",E,E,N,N],[6,"U574",E,E,N,N],[6,"P574",E,E,N,N],[6,"N574",E,E,N,N],[6,"U575",E,E,N,N],[6,"P575",E,E,N,N],[6,"N575",E,E,N,N],[6,"U576",E,E,N,N],[6,"P576",E,E,N,N],[6,"N576",E,E,N,N],[6,"U577",E,E,N,N],[6,"P577",E,E,N,N],[6,"N577",E,E,N,N],[6,"U578",E,E,N,N],[6,"P578",E,E,N,N],[6,"N578",E,E,N,N],[6,"U579",E,E,N,N],[6,"P579",E,E,N,N],[6,"N579",E,E,N,N],[6,"U580",E,E,N,N],[6,"P580",E,E,N,N],[6,"N580",E,E,N,N],[6,"U581",E,E,N,N],[6,"P581",E,E,N,N],[6,"N581",E,E,N,N],[6,"U582",E,E,N,N],[6,"P582",E,E,N,N],[6,"N582",E,E,N,N],[6,"U583",E,E,N,N],[6,"P583",E,E,N,N],[6,"N583",E,E,N,N],[6,"U584",E,E,N,N],[6,"P584",E,E,N,N],[6,"N584",E,E,N,N],[6,"U585",E,E,N,N],[6,"P585",E,E,N,N],[6,"N585",E,E,N,N],[6,"U586",E,E,N,N],[6,"P586",E,E,N,N],[6,"N586",E,E,N,N],[6,"U587",E,E,N,N],[6,"P587",E,E,N,N],[6,"N587",E,E,N,N],[6,"U588",E,E,N,N],[6,"P588",E,E,N,N],[6,"N588",E,E,N,N],[6,"U589",E,E,N,N],[6,"P589",E,E,N,N],[6,"N589",E,E,N,N],[6,"U590",E,E,N,N],[6,"P590",E,E,N,N],[6,"N590",E,E,N,N],[6,"U591",E,E,N,N],[6,"P591",E,E,N,N],[6,"N591",E,E,N,N],[6,"U592",E,E,N,N],[6,"P592",E,E,N,N],[6,"N592",E,E,N,N],[6,"U593",E,E,N,N],[6,"P593",E,E,N,N],[6,"N593",E,E,N,N],[6,"U594",E,E,N,N],[6,"P594",E,E,N,N],[6,"N594",E,E,N,N],[6,"U595",E,E,N,N],[6,"P595",E,E,N,N],[6,"N595",E,E,N,N],[6,"U596",E,E,N,N],[6,"P596",E,E,N,N],[6,"N596",E,E,N,N],[6,"U597",E,E,N,N],[6,"P597",E,E,N,N],[6,"N597",E,E,N,N],[6,"U598",E,E,N,N],[6,"P598",E,E,N,N],[6,"N598",E,E,N,N],[6,"U599",E,E,N,N],[6,"P599",E,E,N,N],[6,"N599",E,E,N,N],[6,"U600",E,E,N,N],[6,"P600",E,E,N,N],[6,"N600",E,E,N,N],[6,"U601",E,E,N,N],[6,"P601",E,E,N,N],[6,"N601",E,E,N,N],[6,"U602",E,E,N,N],[6,"P602",E,E,N,N],[6,"N602",E,E,N,N],[6,"U603",E,E,N,N],[6,"P603",E,E,N,N],[6,"N603",E,E,N,N],[6,"U604",E,E,N,N],[6,"P604",E,E,N,N],[6,"N604",E,E,N,N],[6,"U605",E,E,N,N],[6,"P605",E,E,N,N],[6,"N605",E,E,N,N],[6,"U606",E,E,N,N],[6,"P606",E,E,N,N],[6,"N606",E,E,N,N],[6,"U607",E,E,N,N],[6,"P607",E,E,N,N],[6,"N607",E,E,N,N],[6,"U608",E,E,N,N],[6,"P608",E,E,N,N],[6,"N608",E,E,N,N],[6,"U609",E,E,N,N],[6,"P609",E,E,N,N],[6,"N609",E,E,N,N],[6,"U610",E,E,N,N],[6,"P610",E,E,N,N],[6,"N610",E,E,N,N],[6,"U611",E,E,N,N],[6,"P611",E,E,N,N],[6,"N611",E,E,N,N],[6,"U612",E,E,N,N],[6,"P612",E,E,N,N],[6,"N612",E,E,N,N],[6,"U613",E,E,N,N],[6,"P613",E,E,N,N],[6,"N613",E,E,N,N],[6,"U614",E,E,N,N],[6,"P614",E,E,N,N],[6,"N614",E,E,N,N],[6,"U615",E,E,N,N],[6,"P615",E,E,N,N],[6,"N615",E,E,N,N],[6,"U616",E,E,N,N],[6,"P616",E,E,N,N],[6,"N616",E,E,N,N],[6,"U617",E,E,N,N],[6,"P617",E,E,N,N],[6,"N617",E,E,N,N],[6,"U618",E,E,N,N],[6,"P618",E,E,N,N],[6,"N618",E,E,N,N],[6,"U619",E,E,N,N],[6,"P619",E,E,N,N],[6,"N619",E,E,N,N],[6,"U620",E,E,N,N],[6,"P620",E,E,N,N],[6,"N620",E,E,N,N],[6,"U621",E,E,N,N],[6,"P621",E,E,N,N],[6,"N621",E,E,N,N],[6,"U622",E,E,N,N],[6,"P622",E,E,N,N],[6,"N622",E,E,N,N],[6,"U623",E,E,N,N],[6,"P623",E,E,N,N],[6,"N623",E,E,N,N],[6,"U624",E,E,N,N],[6,"P624",E,E,N,N],[6,"N624",E,E,N,N],[6,"U625",E,E,N,N],[6,"P625",E,E,N,N],[6,"N625",E,E,N,N],[6,"U626",E,E,N,N],[6,"P626",E,E,N,N],[6,"N626",E,E,N,N],[6,"U627",E,E,N,N],[6,"P627",E,E,N,N],[6,"N627",E,E,N,N],[6,"U628",E,E,N,N],[6,"P628",E,E,N,N],[6,"N628",E,E,N,N],[6,"U629",E,E,N,N],[6,"P629",E,E,N,N],[6,"N629",E,E,N,N],[6,"U630",E,E,N,N],[6,"P630",E,E,N,N],[6,"N630",E,E,N,N],[6,"U631",E,E,N,N],[6,"P631",E,E,N,N],[6,"N631",E,E,N,N],[6,"U632",E,E,N,N],[6,"P632",E,E,N,N],[6,"N632",E,E,N,N],[6,"U633",E,E,N,N],[6,"P633",E,E,N,N],[6,"N633",E,E,N,N],[6,"U634",E,E,N,N],[6,"P634",E,E,N,N],[6,"N634",E,E,N,N],[6,"U635",E,E,N,N],[6,"P635",E,E,N,N],[6,"N635",E,E,N,N],[6,"U636",E,E,N,N],[6,"P636",E,E,N,N],[6,"N636",E,E,N,N],[6,"U637",E,E,N,N],[6,"P637",E,E,N,N],[6,"N637",E,E,N,N],[6,"U638",E,E,N,N],[6,"P638",E,E,N,N],[6,"N638",E,E,N,N],[6,"U639",E,E,N,N],[6,"P639",E,E,N,N],[6,"N639",E,E,N,N],[6,"U640",E,E,N,N],[6,"P640",E,E,N,N],[6,"N640",E,E,N,N],[6,"U641",E,E,N,N],[6,"P641",E,E,N,N],[6,"N641",E,E,N,N],[6,"U642",E,E,N,N],[6,"P642",E,E,N,N],[6,"N642",E,E,N,N],[6,"U643",E,E,N,N],[6,"P643",E,E,N,N],[6,"N643",E,E,N,N],[6,"U644",E,E,N,N],[6,"P644",E,E,N,N],[6,"N644",E,E,N,N],[6,"U645",E,E,N,N],[6,"P645",E,E,N,N],[6,"N645",E,E,N,N],[6,"U646",E,E,N,N],[6,"P646",E,E,N,N],[6,"N646",E,E,N,N],[6,"U647",E,E,N,N],[6,"P647",E,E,N,N],[6,"N647",E,E,N,N],[6,"U648",E,E,N,N],[6,"P648",E,E,N,N],[6,"N648",E,E,N,N],[6,"U649",E,E,N,N],[6,"P649",E,E,N,N],[6,"N649",E,E,N,N],[6,"U650",E,E,N,N],[6,"P650",E,E,N,N],[6,"N650",E,E,N,N],[6,"U651",E,E,N,N],[6,"P651",E,E,N,N],[6,"N651",E,E,N,N],[6,"U652",E,E,N,N],[6,"P652",E,E,N,N],[6,"N652",E,E,N,N],[6,"U653",E,E,N,N],[6,"P653",E,E,N,N],[6,"N653",E,E,N,N],[6,"U654",E,E,N,N],[6,"P654",E,E,N,N],[6,"N654",E,E,N,N],[6,"U655",E,E,N,N],[6,"P655",E,E,N,N],[6,"N655",E,E,N,N],[6,"U656",E,E,N,N],[6,"P656",E,E,N,N],[6,"N656",E,E,N,N],[6,"U657",E,E,N,N],[6,"P657",E,E,N,N],[6,"N657",E,E,N,N],[6,"U658",E,E,N,N],[6,"P658",E,E,N,N],[6,"N658",E,E,N,N],[6,"U659",E,E,N,N],[6,"P659",E,E,N,N],[6,"N659",E,E,N,N],[6,"U660",E,E,N,N],[6,"P660",E,E,N,N],[6,"N660",E,E,N,N],[6,"U661",E,E,N,N],[6,"P661",E,E,N,N],[6,"N661",E,E,N,N],[6,"U662",E,E,N,N],[6,"P662",E,E,N,N],[6,"N662",E,E,N,N],[6,"U663",E,E,N,N],[6,"P663",E,E,N,N],[6,"N663",E,E,N,N],[6,"U664",E,E,N,N],[6,"P664",E,E,N,N],[6,"N664",E,E,N,N],[6,"U665",E,E,N,N],[6,"P665",E,E,N,N],[6,"N665",E,E,N,N],[6,"U666",E,E,N,N],[6,"P666",E,E,N,N],[6,"N666",E,E,N,N],[6,"U667",E,E,N,N],[6,"P667",E,E,N,N],[6,"N667",E,E,N,N],[6,"U668",E,E,N,N],[6,"P668",E,E,N,N],[6,"N668",E,E,N,N],[6,"U669",E,E,N,N],[6,"P669",E,E,N,N],[6,"N669",E,E,N,N],[6,"U670",E,E,N,N],[6,"P670",E,E,N,N],[6,"N670",E,E,N,N],[6,"U671",E,E,N,N],[6,"P671",E,E,N,N],[6,"N671",E,E,N,N],[6,"U672",E,E,N,N],[6,"P672",E,E,N,N],[6,"N672",E,E,N,N],[6,"U673",E,E,N,N],[6,"P673",E,E,N,N],[6,"N673",E,E,N,N],[6,"U674",E,E,N,N],[6,"P674",E,E,N,N],[6,"N674",E,E,N,N],[6,"U675",E,E,N,N],[6,"P675",E,E,N,N],[6,"N675",E,E,N,N],[6,"U676",E,E,N,N],[6,"P676",E,E,N,N],[6,"N676",E,E,N,N],[6,"U677",E,E,N,N],[6,"P677",E,E,N,N],[6,"N677",E,E,N,N],[6,"U678",E,E,N,N],[6,"P678",E,E,N,N],[6,"N678",E,E,N,N],[6,"U679",E,E,N,N],[6,"P679",E,E,N,N],[6,"N679",E,E,N,N],[6,"U680",E,E,N,N],[6,"P680",E,E,N,N],[6,"N680",E,E,N,N],[6,"U681",E,E,N,N],[6,"P681",E,E,N,N],[6,"N681",E,E,N,N],[6,"U682",E,E,N,N],[6,"P682",E,E,N,N],[6,"N682",E,E,N,N],[6,"U683",E,E,N,N],[6,"P683",E,E,N,N],[6,"N683",E,E,N,N],[6,"U684",E,E,N,N],[6,"P684",E,E,N,N],[6,"N684",E,E,N,N],[6,"U685",E,E,N,N],[6,"P685",E,E,N,N],[6,"N685",E,E,N,N],[6,"U686",E,E,N,N],[6,"P686",E,E,N,N],[6,"N686",E,E,N,N],[6,"U687",E,E,N,N],[6,"P687",E,E,N,N],[6,"N687",E,E,N,N],[6,"U688",E,E,N,N],[6,"P688",E,E,N,N],[6,"N688",E,E,N,N],[6,"U689",E,E,N,N],[6,"P689",E,E,N,N],[6,"N689",E,E,N,N],[6,"U690",E,E,N,N],[6,"P690",E,E,N,N],[6,"N690",E,E,N,N],[6,"U691",E,E,N,N],[6,"P691",E,E,N,N],[6,"N691",E,E,N,N],[6,"U692",E,E,N,N],[6,"P692",E,E,N,N],[6,"N692",E,E,N,N],[6,"U693",E,E,N,N],[6,"P693",E,E,N,N],[6,"N693",E,E,N,N],[6,"U694",E,E,N,N],[6,"P694",E,E,N,N],[6,"N694",E,E,N,N],[6,"U695",E,E,N,N],[6,"P695",E,E,N,N],[6,"N695",E,E,N,N],[6,"U696",E,E,N,N],[6,"P696",E,E,N,N],[6,"N696",E,E,N,N],[6,"U697",E,E,N,N],[6,"P697",E,E,N,N],[6,"N697",E,E,N,N],[6,"U698",E,E,N,N],[6,"P698",E,E,N,N],[6,"N698",E,E,N,N],[6,"U699",E,E,N,N],[6,"P699",E,E,N,N],[6,"N699",E,E,N,N],[6,"U700",E,E,N,N],[6,"P700",E,E,N,N],[6,"N700",E,E,N,N],[6,"U701",E,E,N,N],[6,"P701",E,E,N,N],[6,"N701",E,E,N,N],[6,"U702",E,E,N,N],[6,"P702",E,E,N,N],[6,"N702",E,E,N,N],[6,"U703",E,E,N,N],[6,"P703",E,E,N,N],[6,"N703",E,E,N,N],[6,"U704",E,E,N,N],[6,"P704",E,E,N,N],[6,"N704",E,E,N,N],[6,"U705",E,E,N,N],[6,"P705",E,E,N,N],[6,"N705",E,E,N,N],[6,"U706",E,E,N,N],[6,"P706",E,E,N,N],[6,"N706",E,E,N,N],[6,"U707",E,E,N,N],[6,"P707",E,E,N,N],[6,"N707",E,E,N,N],[6,"U708",E,E,N,N],[6,"P708",E,E,N,N],[6,"N708",E,E,N,N],[6,"U709",E,E,N,N],[6,"P709",E,E,N,N],[6,"N709",E,E,N,N],[6,"U710",E,E,N,N],[6,"P710",E,E,N,N],[6,"N710",E,E,N,N],[6,"U711",E,E,N,N],[6,"P711",E,E,N,N],[6,"N711",E,E,N,N],[6,"U712",E,E,N,N],[6,"P712",E,E,N,N],[6,"N712",E,E,N,N],[6,"U713",E,E,N,N],[6,"P713",E,E,N,N],[6,"N713",E,E,N,N],[6,"U714",E,E,N,N],[6,"P714",E,E,N,N],[6,"N714",E,E,N,N],[6,"U715",E,E,N,N],[6,"P715",E,E,N,N],[6,"N715",E,E,N,N],[6,"U716",E,E,N,N],[6,"P716",E,E,N,N],[6,"N716",E,E,N,N],[6,"U717",E,E,N,N],[6,"P717",E,E,N,N],[6,"N717",E,E,N,N],[6,"U718",E,E,N,N],[6,"P718",E,E,N,N],[6,"N718",E,E,N,N],[6,"U719",E,E,N,N],[6,"P719",E,E,N,N],[6,"N719",E,E,N,N],[6,"U720",E,E,N,N],[6,"P720",E,E,N,N],[6,"N720",E,E,N,N],[6,"U721",E,E,N,N],[6,"P721",E,E,N,N],[6,"N721",E,E,N,N],[6,"U722",E,E,N,N],[6,"P722",E,E,N,N],[6,"N722",E,E,N,N],[6,"U723",E,E,N,N],[6,"P723",E,E,N,N],[6,"N723",E,E,N,N],[6,"U724",E,E,N,N],[6,"P724",E,E,N,N],[6,"N724",E,E,N,N],[6,"U725",E,E,N,N],[6,"P725",E,E,N,N],[6,"N725",E,E,N,N],[6,"U726",E,E,N,N],[6,"P726",E,E,N,N],[6,"N726",E,E,N,N],[6,"U727",E,E,N,N],[6,"P727",E,E,N,N],[6,"N727",E,E,N,N],[6,"U728",E,E,N,N],[6,"P728",E,E,N,N],[6,"N728",E,E,N,N],[6,"U729",E,E,N,N],[6,"P729",E,E,N,N],[6,"N729",E,E,N,N],[6,"U730",E,E,N,N],[6,"P730",E,E,N,N],[6,"N730",E,E,N,N],[6,"U731",E,E,N,N],[6,"P731",E,E,N,N],[6,"N731",E,E,N,N],[6,"U732",E,E,N,N],[6,"P732",E,E,N,N],[6,"N732",E,E,N,N],[6,"U733",E,E,N,N],[6,"P733",E,E,N,N],[6,"N733",E,E,N,N],[6,"U734",E,E,N,N],[6,"P734",E,E,N,N],[6,"N734",E,E,N,N],[6,"U735",E,E,N,N],[6,"P735",E,E,N,N],[6,"N735",E,E,N,N],[6,"U736",E,E,N,N],[6,"P736",E,E,N,N],[6,"N736",E,E,N,N],[6,"U737",E,E,N,N],[6,"P737",E,E,N,N],[6,"N737",E,E,N,N],[6,"U738",E,E,N,N],[6,"P738",E,E,N,N],[6,"N738",E,E,N,N],[6,"U739",E,E,N,N],[6,"P739",E,E,N,N],[6,"N739",E,E,N,N],[6,"U740",E,E,N,N],[6,"P740",E,E,N,N],[6,"N740",E,E,N,N],[6,"U741",E,E,N,N],[6,"P741",E,E,N,N],[6,"N741",E,E,N,N],[6,"U742",E,E,N,N],[6,"P742",E,E,N,N],[6,"N742",E,E,N,N],[6,"U743",E,E,N,N],[6,"P743",E,E,N,N],[6,"N743",E,E,N,N],[6,"U744",E,E,N,N],[6,"P744",E,E,N,N],[6,"N744",E,E,N,N],[6,"U745",E,E,N,N],[6,"P745",E,E,N,N],[6,"N745",E,E,N,N],[6,"U746",E,E,N,N],[6,"P746",E,E,N,N],[6,"N746",E,E,N,N],[6,"U747",E,E,N,N],[6,"P747",E,E,N,N],[6,"N747",E,E,N,N],[6,"U748",E,E,N,N],[6,"P748",E,E,N,N],[6,"N748",E,E,N,N],[6,"U749",E,E,N,N],[6,"P749",E,E,N,N],[6,"N749",E,E,N,N],[6,"U750",E,E,N,N],[6,"P750",E,E,N,N],[6,"N750",E,E,N,N],[6,"U751",E,E,N,N],[6,"P751",E,E,N,N],[6,"N751",E,E,N,N],[6,"U752",E,E,N,N],[6,"P752",E,E,N,N],[6,"N752",E,E,N,N],[6,"U753",E,E,N,N],[6,"P753",E,E,N,N],[6,"N753",E,E,N,N],[6,"U754",E,E,N,N],[6,"P754",E,E,N,N],[6,"N754",E,E,N,N],[6,"U755",E,E,N,N],[6,"P755",E,E,N,N],[6,"N755",E,E,N,N],[6,"U756",E,E,N,N],[6,"P756",E,E,N,N],[6,"N756",E,E,N,N],[6,"U757",E,E,N,N],[6,"P757",E,E,N,N],[6,"N757",E,E,N,N],[6,"U758",E,E,N,N],[6,"P758",E,E,N,N],[6,"N758",E,E,N,N],[6,"U759",E,E,N,N],[6,"P759",E,E,N,N],[6,"N759",E,E,N,N],[6,"U760",E,E,N,N],[6,"P760",E,E,N,N],[6,"N760",E,E,N,N],[6,"U761",E,E,N,N],[6,"P761",E,E,N,N],[6,"N761",E,E,N,N],[6,"U762",E,E,N,N],[6,"P762",E,E,N,N],[6,"N762",E,E,N,N],[6,"U763",E,E,N,N],[6,"P763",E,E,N,N],[6,"N763",E,E,N,N],[6,"U764",E,E,N,N],[6,"P764",E,E,N,N],[6,"N764",E,E,N,N],[6,"U765",E,E,N,N],[6,"P765",E,E,N,N],[6,"N765",E,E,N,N],[6,"U766",E,E,N,N],[6,"P766",E,E,N,N],[6,"N766",E,E,N,N],[6,"U767",E,E,N,N],[6,"P767",E,E,N,N],[6,"N767",E,E,N,N],[6,"U768",E,E,N,N],[6,"P768",E,E,N,N],[6,"N768",E,E,N,N],[6,"U769",E,E,N,N],[6,"P769",E,E,N,N],[6,"N769",E,E,N,N],[6,"U770",E,E,N,N],[6,"P770",E,E,N,N],[6,"N770",E,E,N,N],[6,"U771",E,E,N,N],[6,"P771",E,E,N,N],[6,"N771",E,E,N,N],[6,"U772",E,E,N,N],[6,"P772",E,E,N,N],[6,"N772",E,E,N,N],[6,"U773",E,E,N,N],[6,"P773",E,E,N,N],[6,"N773",E,E,N,N],[6,"U774",E,E,N,N],[6,"P774",E,E,N,N],[6,"N774",E,E,N,N],[6,"U775",E,E,N,N],[6,"P775",E,E,N,N],[6,"N775",E,E,N,N],[6,"U776",E,E,N,N],[6,"P776",E,E,N,N],[6,"N776",E,E,N,N],[6,"U777",E,E,N,N],[6,"P777",E,E,N,N],[6,"N777",E,E,N,N],[6,"U778",E,E,N,N],[6,"P778",E,E,N,N],[6,"N778",E,E,N,N],[6,"U779",E,E,N,N],[6,"P779",E,E,N,N],[6,"N779",E,E,N,N],[6,"U780",E,E,N,N],[6,"P780",E,E,N,N],[6,"N780",E,E,N,N],[6,"U781",E,E,N,N],[6,"P781",E,E,N,N],[6,"N781",E,E,N,N],[6,"U782",E,E,N,N],[6,"P782",E,E,N,N],[6,"N782",E,E,N,N],[6,"U783",E,E,N,N],[6,"P783",E,E,N,N],[6,"N783",E,E,N,N],[6,"U784",E,E,N,N],[6,"P784",E,E,N,N],[6,"N784",E,E,N,N],[6,"U785",E,E,N,N],[6,"P785",E,E,N,N],[6,"N785",E,E,N,N],[6,"U786",E,E,N,N],[6,"P786",E,E,N,N],[6,"N786",E,E,N,N],[6,"U787",E,E,N,N],[6,"P787",E,E,N,N],[6,"N787",E,E,N,N],[6,"U788",E,E,N,N],[6,"P788",E,E,N,N],[6,"N788",E,E,N,N],[6,"U789",E,E,N,N],[6,"P789",E,E,N,N],[6,"N789",E,E,N,N],[6,"U790",E,E,N,N],[6,"P790",E,E,N,N],[6,"N790",E,E,N,N],[6,"U791",E,E,N,N],[6,"P791",E,E,N,N],[6,"N791",E,E,N,N],[6,"U792",E,E,N,N],[6,"P792",E,E,N,N],[6,"N792",E,E,N,N],[6,"U793",E,E,N,N],[6,"P793",E,E,N,N],[6,"N793",E,E,N,N],[6,"U794",E,E,N,N],[6,"P794",E,E,N,N],[6,"N794",E,E,N,N],[6,"U795",E,E,N,N],[6,"P795",E,E,N,N],[6,"N795",E,E,N,N],[6,"U796",E,E,N,N],[6,"P796",E,E,N,N],[6,"N796",E,E,N,N],[6,"U797",E,E,N,N],[6,"P797",E,E,N,N],[6,"N797",E,E,N,N],[6,"U798",E,E,N,N],[6,"P798",E,E,N,N],[6,"N798",E,E,N,N],[6,"U799",E,E,N,N],[6,"P799",E,E,N,N],[6,"N799",E,E,N,N],[6,"U800",E,E,N,N],[6,"P800",E,E,N,N],[6,"N800",E,E,N,N],[6,"U801",E,E,N,N],[6,"P801",E,E,N,N],[6,"N801",E,E,N,N],[6,"U802",E,E,N,N],[6,"P802",E,E,N,N],[6,"N802",E,E,N,N],[6,"U803",E,E,N,N],[6,"P803",E,E,N,N],[6,"N803",E,E,N,N],[6,"U804",E,E,N,N],[6,"P804",E,E,N,N],[6,"N804",E,E,N,N],[6,"U805",E,E,N,N],[6,"P805",E,E,N,N],[6,"N805",E,E,N,N],[6,"U806",E,E,N,N],[6,"P806",E,E,N,N],[6,"N806",E,E,N,N],[6,"U807",E,E,N,N],[6,"P807",E,E,N,N],[6,"N807",E,E,N,N],[6,"U808",E,E,N,N],[6,"P808",E,E,N,N],[6,"N808",E,E,N,N],[6,"U809",E,E,N,N],[6,"P809",E,E,N,N],[6,"N809",E,E,N,N],[6,"U810",E,E,N,N],[6,"P810",E,E,N,N],[6,"N810",E,E,N,N],[6,"U811",E,E,N,N],[6,"P811",E,E,N,N],[6,"N811",E,E,N,N],[6,"U812",E,E,N,N],[6,"P812",E,E,N,N],[6,"N812",E,E,N,N],[6,"U813",E,E,N,N],[6,"P813",E,E,N,N],[6,"N813",E,E,N,N],[6,"U814",E,E,N,N],[6,"P814",E,E,N,N],[6,"N814",E,E,N,N],[6,"U815",E,E,N,N],[6,"P815",E,E,N,N],[6,"N815",E,E,N,N],[6,"U816",E,E,N,N],[6,"P816",E,E,N,N],[6,"N816",E,E,N,N],[6,"U817",E,E,N,N],[6,"P817",E,E,N,N],[6,"N817",E,E,N,N],[6,"U818",E,E,N,N],[6,"P818",E,E,N,N],[6,"N818",E,E,N,N],[6,"U819",E,E,N,N],[6,"P819",E,E,N,N],[6,"N819",E,E,N,N],[6,"U820",E,E,N,N],[6,"P820",E,E,N,N],[6,"N820",E,E,N,N],[6,"U821",E,E,N,N],[6,"P821",E,E,N,N],[6,"N821",E,E,N,N],[6,"U822",E,E,N,N],[6,"P822",E,E,N,N],[6,"N822",E,E,N,N],[6,"U823",E,E,N,N],[6,"P823",E,E,N,N],[6,"N823",E,E,N,N],[6,"U824",E,E,N,N],[6,"P824",E,E,N,N],[6,"N824",E,E,N,N],[6,"U825",E,E,N,N],[6,"P825",E,E,N,N],[6,"N825",E,E,N,N],[6,"U826",E,E,N,N],[6,"P826",E,E,N,N],[6,"N826",E,E,N,N],[6,"U827",E,E,N,N],[6,"P827",E,E,N,N],[6,"N827",E,E,N,N],[6,"U828",E,E,N,N],[6,"P828",E,E,N,N],[6,"N828",E,E,N,N],[6,"U829",E,E,N,N],[6,"P829",E,E,N,N],[6,"N829",E,E,N,N],[6,"U830",E,E,N,N],[6,"P830",E,E,N,N],[6,"N830",E,E,N,N],[6,"U831",E,E,N,N],[6,"P831",E,E,N,N],[6,"N831",E,E,N,N],[6,"U832",E,E,N,N],[6,"P832",E,E,N,N],[6,"N832",E,E,N,N],[6,"U833",E,E,N,N],[6,"P833",E,E,N,N],[6,"N833",E,E,N,N],[6,"U834",E,E,N,N],[6,"P834",E,E,N,N],[6,"N834",E,E,N,N],[6,"U835",E,E,N,N],[6,"P835",E,E,N,N],[6,"N835",E,E,N,N],[6,"U836",E,E,N,N],[6,"P836",E,E,N,N],[6,"N836",E,E,N,N],[6,"U837",E,E,N,N],[6,"P837",E,E,N,N],[6,"N837",E,E,N,N],[6,"U838",E,E,N,N],[6,"P838",E,E,N,N],[6,"N838",E,E,N,N],[6,"U839",E,E,N,N],[6,"P839",E,E,N,N],[6,"N839",E,E,N,N],[6,"U840",E,E,N,N],[6,"P840",E,E,N,N],[6,"N840",E,E,N,N],[6,"U841",E,E,N,N],[6,"P841",E,E,N,N],[6,"N841",E,E,N,N],[6,"U842",E,E,N,N],[6,"P842",E,E,N,N],[6,"N842",E,E,N,N],[6,"U843",E,E,N,N],[6,"P843",E,E,N,N],[6,"N843",E,E,N,N],[6,"U844",E,E,N,N],[6,"P844",E,E,N,N],[6,"N844",E,E,N,N],[6,"U845",E,E,N,N],[6,"P845",E,E,N,N],[6,"N845",E,E,N,N],[6,"U846",E,E,N,N],[6,"P846",E,E,N,N],[6,"N846",E,E,N,N],[6,"U847",E,E,N,N],[6,"P847",E,E,N,N],[6,"N847",E,E,N,N],[6,"U848",E,E,N,N],[6,"P848",E,E,N,N],[6,"N848",E,E,N,N],[6,"U849",E,E,N,N],[6,"P849",E,E,N,N],[6,"N849",E,E,N,N],[6,"U850",E,E,N,N],[6,"P850",E,E,N,N],[6,"N850",E,E,N,N],[6,"U851",E,E,N,N],[6,"P851",E,E,N,N],[6,"N851",E,E,N,N],[6,"U852",E,E,N,N],[6,"P852",E,E,N,N],[6,"N852",E,E,N,N],[6,"U853",E,E,N,N],[6,"P853",E,E,N,N],[6,"N853",E,E,N,N],[6,"U854",E,E,N,N],[6,"P854",E,E,N,N],[6,"N854",E,E,N,N],[6,"U855",E,E,N,N],[6,"P855",E,E,N,N],[6,"N855",E,E,N,N],[6,"U856",E,E,N,N],[6,"P856",E,E,N,N],[6,"N856",E,E,N,N],[6,"U857",E,E,N,N],[6,"P857",E,E,N,N],[6,"N857",E,E,N,N],[6,"U858",E,E,N,N],[6,"P858",E,E,N,N],[6,"N858",E,E,N,N],[6,"U859",E,E,N,N],[6,"P859",E,E,N,N],[6,"N859",E,E,N,N],[6,"U860",E,E,N,N],[6,"P860",E,E,N,N],[6,"N860",E,E,N,N],[6,"U861",E,E,N,N],[6,"P861",E,E,N,N],[6,"N861",E,E,N,N],[6,"U862",E,E,N,N],[6,"P862",E,E,N,N],[6,"N862",E,E,N,N],[6,"U863",E,E,N,N],[6,"P863",E,E,N,N],[6,"N863",E,E,N,N],[6,"U864",E,E,N,N],[6,"P864",E,E,N,N],[6,"N864",E,E,N,N],[6,"U865",E,E,N,N],[6,"P865",E,E,N,N],[6,"N865",E,E,N,N],[6,"U866",E,E,N,N],[6,"P866",E,E,N,N],[6,"N866",E,E,N,N],[6,"U867",E,E,N,N],[6,"P867",E,E,N,N],[6,"N867",E,E,N,N],[6,"U868",E,E,N,N],[6,"P868",E,E,N,N],[6,"N868",E,E,N,N],[6,"U869",E,E,N,N],[6,"P869",E,E,N,N],[6,"N869",E,E,N,N],[6,"U870",E,E,N,N],[6,"P870",E,E,N,N],[6,"N870",E,E,N,N],[6,"U871",E,E,N,N],[6,"P871",E,E,N,N],[6,"N871",E,E,N,N],[6,"U872",E,E,N,N],[6,"P872",E,E,N,N],[6,"N872",E,E,N,N],[6,"U873",E,E,N,N],[6,"P873",E,E,N,N],[6,"N873",E,E,N,N],[6,"U874",E,E,N,N],[6,"P874",E,E,N,N],[6,"N874",E,E,N,N],[6,"U875",E,E,N,N],[6,"P875",E,E,N,N],[6,"N875",E,E,N,N],[6,"U876",E,E,N,N],[6,"P876",E,E,N,N],[6,"N876",E,E,N,N],[6,"U877",E,E,N,N],[6,"P877",E,E,N,N],[6,"N877",E,E,N,N],[6,"U878",E,E,N,N],[6,"P878",E,E,N,N],[6,"N878",E,E,N,N],[6,"U879",E,E,N,N],[6,"P879",E,E,N,N],[6,"N879",E,E,N,N],[6,"U880",E,E,N,N],[6,"P880",E,E,N,N],[6,"N880",E,E,N,N],[6,"U881",E,E,N,N],[6,"P881",E,E,N,N],[6,"N881",E,E,N,N],[6,"U882",E,E,N,N],[6,"P882",E,E,N,N],[6,"N882",E,E,N,N],[6,"U883",E,E,N,N],[6,"P883",E,E,N,N],[6,"N883",E,E,N,N],[6,"U884",E,E,N,N],[6,"P884",E,E,N,N],[6,"N884",E,E,N,N],[6,"U885",E,E,N,N],[6,"P885",E,E,N,N],[6,"N885",E,E,N,N],[6,"U886",E,E,N,N],[6,"P886",E,E,N,N],[6,"N886",E,E,N,N],[6,"U887",E,E,N,N],[6,"P887",E,E,N,N],[6,"N887",E,E,N,N],[6,"U888",E,E,N,N],[6,"P888",E,E,N,N],[6,"N888",E,E,N,N],[6,"U889",E,E,N,N],[6,"P889",E,E,N,N],[6,"N889",E,E,N,N],[6,"U890",E,E,N,N],[6,"P890",E,E,N,N],[6,"N890",E,E,N,N],[6,"U891",E,E,N,N],[6,"P891",E,E,N,N],[6,"N891",E,E,N,N],[6,"U892",E,E,N,N],[6,"P892",E,E,N,N],[6,"N892",E,E,N,N],[6,"U893",E,E,N,N],[6,"P893",E,E,N,N],[6,"N893",E,E,N,N],[6,"U894",E,E,N,N],[6,"P894",E,E,N,N],[6,"N894",E,E,N,N],[6,"U895",E,E,N,N],[6,"P895",E,E,N,N],[6,"N895",E,E,N,N],[6,"U896",E,E,N,N],[6,"P896",E,E,N,N],[6,"N896",E,E,N,N],[6,"U897",E,E,N,N],[6,"P897",E,E,N,N],[6,"N897",E,E,N,N],[6,"U898",E,E,N,N],[6,"P898",E,E,N,N],[6,"N898",E,E,N,N],[6,"U899",E,E,N,N],[6,"P899",E,E,N,N],[6,"N899",E,E,N,N],[6,"U900",E,E,N,N],[6,"P900",E,E,N,N],[6,"N900",E,E,N,N],[6,"U901",E,E,N,N],[6,"P901",E,E,N,N],[6,"N901",E,E,N,N],[6,"U902",E,E,N,N],[6,"P902",E,E,N,N],[6,"N902",E,E,N,N],[6,"U903",E,E,N,N],[6,"P903",E,E,N,N],[6,"N903",E,E,N,N],[6,"U904",E,E,N,N],[6,"P904",E,E,N,N],[6,"N904",E,E,N,N],[6,"U905",E,E,N,N],[6,"P905",E,E,N,N],[6,"N905",E,E,N,N],[6,"U906",E,E,N,N],[6,"P906",E,E,N,N],[6,"N906",E,E,N,N],[6,"U907",E,E,N,N],[6,"P907",E,E,N,N],[6,"N907",E,E,N,N],[6,"U908",E,E,N,N],[6,"P908",E,E,N,N],[6,"N908",E,E,N,N],[6,"U909",E,E,N,N],[6,"P909",E,E,N,N],[6,"N909",E,E,N,N],[6,"U910",E,E,N,N],[6,"P910",E,E,N,N],[6,"N910",E,E,N,N],[6,"U911",E,E,N,N],[6,"P911",E,E,N,N],[6,"N911",E,E,N,N],[6,"U912",E,E,N,N],[6,"P912",E,E,N,N],[6,"N912",E,E,N,N],[6,"U913",E,E,N,N],[6,"P913",E,E,N,N],[6,"N913",E,E,N,N],[6,"U914",E,E,N,N],[6,"P914",E,E,N,N],[6,"N914",E,E,N,N],[6,"U915",E,E,N,N],[6,"P915",E,E,N,N],[6,"N915",E,E,N,N],[6,"U916",E,E,N,N],[6,"P916",E,E,N,N],[6,"N916",E,E,N,N],[6,"U917",E,E,N,N],[6,"P917",E,E,N,N],[6,"N917",E,E,N,N],[6,"U918",E,E,N,N],[6,"P918",E,E,N,N],[6,"N918",E,E,N,N],[6,"U919",E,E,N,N],[6,"P919",E,E,N,N],[6,"N919",E,E,N,N],[6,"U920",E,E,N,N],[6,"P920",E,E,N,N],[6,"N920",E,E,N,N],[6,"U921",E,E,N,N],[6,"P921",E,E,N,N],[6,"N921",E,E,N,N],[6,"U922",E,E,N,N],[6,"P922",E,E,N,N],[6,"N922",E,E,N,N],[6,"U923",E,E,N,N],[6,"P923",E,E,N,N],[6,"N923",E,E,N,N],[6,"U924",E,E,N,N],[6,"P924",E,E,N,N],[6,"N924",E,E,N,N],[6,"U925",E,E,N,N],[6,"P925",E,E,N,N],[6,"N925",E,E,N,N],[6,"U926",E,E,N,N],[6,"P926",E,E,N,N],[6,"N926",E,E,N,N],[6,"U927",E,E,N,N],[6,"P927",E,E,N,N],[6,"N927",E,E,N,N],[6,"U928",E,E,N,N],[6,"P928",E,E,N,N],[6,"N928",E,E,N,N],[6,"U929",E,E,N,N],[6,"P929",E,E,N,N],[6,"N929",E,E,N,N],[6,"U930",E,E,N,N],[6,"P930",E,E,N,N],[6,"N930",E,E,N,N],[6,"U931",E,E,N,N],[6,"P931",E,E,N,N],[6,"N931",E,E,N,N],[6,"U932",E,E,N,N],[6,"P932",E,E,N,N],[6,"N932",E,E,N,N],[6,"U933",E,E,N,N],[6,"P933",E,E,N,N],[6,"N933",E,E,N,N],[6,"U934",E,E,N,N],[6,"P934",E,E,N,N],[6,"N934",E,E,N,N],[6,"U935",E,E,N,N],[6,"P935",E,E,N,N],[6,"N935",E,E,N,N],[6,"U936",E,E,N,N],[6,"P936",E,E,N,N],[6,"N936",E,E,N,N],[6,"U937",E,E,N,N],[6,"P937",E,E,N,N],[6,"N937",E,E,N,N],[6,"U938",E,E,N,N],[6,"P938",E,E,N,N],[6,"N938",E,E,N,N],[6,"U939",E,E,N,N],[6,"P939",E,E,N,N],[6,"N939",E,E,N,N],[6,"U940",E,E,N,N],[6,"P940",E,E,N,N],[6,"N940",E,E,N,N],[6,"U941",E,E,N,N],[6,"P941",E,E,N,N],[6,"N941",E,E,N,N],[6,"U942",E,E,N,N],[6,"P942",E,E,N,N],[6,"N942",E,E,N,N],[6,"U943",E,E,N,N],[6,"P943",E,E,N,N],[6,"N943",E,E,N,N],[6,"U944",E,E,N,N],[6,"P944",E,E,N,N],[6,"N944",E,E,N,N],[6,"U945",E,E,N,N],[6,"P945",E,E,N,N],[6,"N945",E,E,N,N],[6,"U946",E,E,N,N],[6,"P946",E,E,N,N],[6,"N946",E,E,N,N],[6,"U947",E,E,N,N],[6,"P947",E,E,N,N],[6,"N947",E,E,N,N],[6,"U948",E,E,N,N],[6,"P948",E,E,N,N],[6,"N948",E,E,N,N],[6,"U949",E,E,N,N],[6,"P949",E,E,N,N],[6,"N949",E,E,N,N],[6,"U950",E,E,N,N],[6,"P950",E,E,N,N],[6,"N950",E,E,N,N],[6,"U951",E,E,N,N],[6,"P951",E,E,N,N],[6,"N951",E,E,N,N],[6,"U952",E,E,N,N],[6,"P952",E,E,N,N],[6,"N952",E,E,N,N],[6,"U953",E,E,N,N],[6,"P953",E,E,N,N],[6,"N953",E,E,N,N],[6,"U954",E,E,N,N],[6,"P954",E,E,N,N],[6,"N954",E,E,N,N],[6,"U955",E,E,N,N],[6,"P955",E,E,N,N],[6,"N955",E,E,N,N],[6,"U956",E,E,N,N],[6,"P956",E,E,N,N],[6,"N956",E,E,N,N],[6,"U957",E,E,N,N],[6,"P957",E,E,N,N],[6,"N957",E,E,N,N],[6,"U958",E,E,N,N],[6,"P958",E,E,N,N],[6,"N958",E,E,N,N],[6,"U959",E,E,N,N],[6,"P959",E,E,N,N],[6,"N959",E,E,N,N],[6,"U960",E,E,N,N],[6,"P960",E,E,N,N],[6,"N960",E,E,N,N],[6,"U961",E,E,N,N],[6,"P961",E,E,N,N],[6,"N961",E,E,N,N],[6,"U962",E,E,N,N],[6,"P962",E,E,N,N],[6,"N962",E,E,N,N],[6,"U963",E,E,N,N],[6,"P963",E,E,N,N],[6,"N963",E,E,N,N],[6,"U964",E,E,N,N],[6,"P964",E,E,N,N],[6,"N964",E,E,N,N],[6,"U965",E,E,N,N],[6,"P965",E,E,N,N],[6,"N965",E,E,N,N],[6,"U966",E,E,N,N],[6,"P966",E,E,N,N],[6,"N966",E,E,N,N],[6,"U967",E,E,N,N],[6,"P967",E,E,N,N],[6,"N967",E,E,N,N],[6,"U968",E,E,N,N],[6,"P968",E,E,N,N],[6,"N968",E,E,N,N],[6,"U969",E,E,N,N],[6,"P969",E,E,N,N],[6,"N969",E,E,N,N],[6,"U970",E,E,N,N],[6,"P970",E,E,N,N],[6,"N970",E,E,N,N],[6,"U971",E,E,N,N],[6,"P971",E,E,N,N],[6,"N971",E,E,N,N],[6,"U972",E,E,N,N],[6,"P972",E,E,N,N],[6,"N972",E,E,N,N],[6,"U973",E,E,N,N],[6,"P973",E,E,N,N],[6,"N973",E,E,N,N],[6,"U974",E,E,N,N],[6,"P974",E,E,N,N],[6,"N974",E,E,N,N],[6,"U975",E,E,N,N],[6,"P975",E,E,N,N],[6,"N975",E,E,N,N],[6,"U976",E,E,N,N],[6,"P976",E,E,N,N],[6,"N976",E,E,N,N],[6,"U977",E,E,N,N],[6,"P977",E,E,N,N],[6,"N977",E,E,N,N],[6,"U978",E,E,N,N],[6,"P978",E,E,N,N],[6,"N978",E,E,N,N],[6,"U979",E,E,N,N],[6,"P979",E,E,N,N],[6,"N979",E,E,N,N],[6,"U980",E,E,N,N],[6,"P980",E,E,N,N],[6,"N980",E,E,N,N],[6,"U981",E,E,N,N],[6,"P981",E,E,N,N],[6,"N981",E,E,N,N],[6,"U982",E,E,N,N],[6,"P982",E,E,N,N],[6,"N982",E,E,N,N],[6,"U983",E,E,N,N],[6,"P983",E,E,N,N],[6,"N983",E,E,N,N],[6,"U984",E,E,N,N],[6,"P984",E,E,N,N],[6,"N984",E,E,N,N],[6,"U985",E,E,N,N],[6,"P985",E,E,N,N],[6,"N985",E,E,N,N],[6,"U986",E,E,N,N],[6,"P986",E,E,N,N],[6,"N986",E,E,N,N],[6,"U987",E,E,N,N],[6,"P987",E,E,N,N],[6,"N987",E,E,N,N],[6,"U988",E,E,N,N],[6,"P988",E,E,N,N],[6,"N988",E,E,N,N],[6,"U989",E,E,N,N],[6,"P989",E,E,N,N],[6,"N989",E,E,N,N],[6,"U990",E,E,N,N],[6,"P990",E,E,N,N],[6,"N990",E,E,N,N],[6,"U991",E,E,N,N],[6,"P991",E,E,N,N],[6,"N991",E,E,N,N],[6,"U992",E,E,N,N],[6,"P992",E,E,N,N],[6,"N992",E,E,N,N],[6,"U993",E,E,N,N],[6,"P993",E,E,N,N],[6,"N993",E,E,N,N],[6,"U994",E,E,N,N],[6,"P994",E,E,N,N],[6,"N994",E,E,N,N],[6,"U995",E,E,N,N],[6,"P995",E,E,N,N],[6,"N995",E,E,N,N],[6,"U996",E,E,N,N],[6,"P996",E,E,N,N],[6,"N996",E,E,N,N],[6,"U997",E,E,N,N],[6,"P997",E,E,N,N],[6,"N997",E,E,N,N],[6,"U998",E,E,N,N],[6,"P998",E,E,N,N],[6,"N998",E,E,N,N],[6,"U999",E,E,N,N],[6,"P999",E,E,N,N],[6,"N999",E,E,N,N],[6,"U1000",E,E,N,N],[6,"P1000",E,E,N,N],[6,"N1000",E,E,N,N],[6,"U1001",E,E,N,N],[6,"P1001",E,E,N,N],[6,"N1001",E,E,N,N],[6,"U1002",E,E,N,N],[6,"P1002",E,E,N,N],[6,"N1002",E,E,N,N],[6,"U1003",E,E,N,N],[6,"P1003",E,E,N,N],[6,"N1003",E,E,N,N],[6,"U1004",E,E,N,N],[6,"P1004",E,E,N,N],[6,"N1004",E,E,N,N],[6,"U1005",E,E,N,N],[6,"P1005",E,E,N,N],[6,"N1005",E,E,N,N],[6,"U1006",E,E,N,N],[6,"P1006",E,E,N,N],[6,"N1006",E,E,N,N],[6,"U1007",E,E,N,N],[6,"P1007",E,E,N,N],[6,"N1007",E,E,N,N],[6,"U1008",E,E,N,N],[6,"P1008",E,E,N,N],[6,"N1008",E,E,N,N],[6,"U1009",E,E,N,N],[6,"P1009",E,E,N,N],[6,"N1009",E,E,N,N],[6,"U1010",E,E,N,N],[6,"P1010",E,E,N,N],[6,"N1010",E,E,N,N],[6,"U1011",E,E,N,N],[6,"P1011",E,E,N,N],[6,"N1011",E,E,N,N],[6,"U1012",E,E,N,N],[6,"P1012",E,E,N,N],[6,"N1012",E,E,N,N],[6,"U1013",E,E,N,N],[6,"P1013",E,E,N,N],[6,"N1013",E,E,N,N],[6,"U1014",E,E,N,N],[6,"P1014",E,E,N,N],[6,"N1014",E,E,N,N],[6,"U1015",E,E,N,N],[6,"P1015",E,E,N,N],[6,"N1015",E,E,N,N],[6,"U1016",E,E,N,N],[6,"P1016",E,E,N,N],[6,"N1016",E,E,N,N],[6,"U1017",E,E,N,N],[6,"P1017",E,E,N,N],[6,"N1017",E,E,N,N],[6,"U1018",E,E,N,N],[6,"P1018",E,E,N,N],[6,"N1018",E,E,N,N],[6,"U1019",E,E,N,N],[6,"P1019",E,E,N,N],[6,"N1019",E,E,N,N],[6,"U1020",E,E,N,N],[6,"P1020",E,E,N,N],[6,"N1020",E,E,N,N],[6,"U1021",E,E,N,N],[6,"P1021",E,E,N,N],[6,"N1021",E,E,N,N],[6,"U1022",E,E,N,N],[6,"P1022",E,E,N,N],[6,"N1022",E,E,N,N],[6,"U1023",E,E,N,N],[6,"P1023",E,E,N,N],[6,"N1023",E,E,N,N],[6,"U1024",E,E,N,N],[6,"P1024",E,E,N,N],[6,"N1024",E,E,N,N],[6,"U2048",E,E,N,N],[6,"P2048",E,E,N,N],[6,"N2048",E,E,N,N],[6,"U4096",E,E,N,N],[6,"P4096",E,E,N,N],[6,"N4096",E,E,N,N],[6,"U8192",E,E,N,N],[6,"P8192",E,E,N,N],[6,"N8192",E,E,N,N],[6,"U16384",E,E,N,N],[6,"P16384",E,E,N,N],[6,"N16384",E,E,N,N],[6,"U32768",E,E,N,N],[6,"P32768",E,E,N,N],[6,"N32768",E,E,N,N],[6,"U65536",E,E,N,N],[6,"P65536",E,E,N,N],[6,"N65536",E,E,N,N],[6,"U131072",E,E,N,N],[6,"P131072",E,E,N,N],[6,"N131072",E,E,N,N],[6,"U262144",E,E,N,N],[6,"P262144",E,E,N,N],[6,"N262144",E,E,N,N],[6,"U524288",E,E,N,N],[6,"P524288",E,E,N,N],[6,"N524288",E,E,N,N],[6,"U1048576",E,E,N,N],[6,"P1048576",E,E,N,N],[6,"N1048576",E,E,N,N],[6,"U2097152",E,E,N,N],[6,"P2097152",E,E,N,N],[6,"N2097152",E,E,N,N],[6,"U4194304",E,E,N,N],[6,"P4194304",E,E,N,N],[6,"N4194304",E,E,N,N],[6,"U8388608",E,E,N,N],[6,"P8388608",E,E,N,N],[6,"N8388608",E,E,N,N],[6,"U16777216",E,E,N,N],[6,"P16777216",E,E,N,N],[6,"N16777216",E,E,N,N],[6,"U33554432",E,E,N,N],[6,"P33554432",E,E,N,N],[6,"N33554432",E,E,N,N],[6,"U67108864",E,E,N,N],[6,"P67108864",E,E,N,N],[6,"N67108864",E,E,N,N],[6,"U134217728",E,E,N,N],[6,"P134217728",E,E,N,N],[6,"N134217728",E,E,N,N],[6,"U268435456",E,E,N,N],[6,"P268435456",E,E,N,N],[6,"N268435456",E,E,N,N],[6,"U536870912",E,E,N,N],[6,"P536870912",E,E,N,N],[6,"N536870912",E,E,N,N],[6,"U1073741824",E,E,N,N],[6,"P1073741824",E,E,N,N],[6,"N1073741824",E,E,N,N],[6,"U2147483648",E,E,N,N],[6,"P2147483648",E,E,N,N],[6,"N2147483648",E,E,N,N],[6,"U4294967296",E,E,N,N],[6,"P4294967296",E,E,N,N],[6,"N4294967296",E,E,N,N],[6,"U8589934592",E,E,N,N],[6,"P8589934592",E,E,N,N],[6,"N8589934592",E,E,N,N],[6,"U17179869184",E,E,N,N],[6,"P17179869184",E,E,N,N],[6,"N17179869184",E,E,N,N],[6,"U34359738368",E,E,N,N],[6,"P34359738368",E,E,N,N],[6,"N34359738368",E,E,N,N],[6,"U68719476736",E,E,N,N],[6,"P68719476736",E,E,N,N],[6,"N68719476736",E,E,N,N],[6,"U137438953472",E,E,N,N],[6,"P137438953472",E,E,N,N],[6,"N137438953472",E,E,N,N],[6,"U274877906944",E,E,N,N],[6,"P274877906944",E,E,N,N],[6,"N274877906944",E,E,N,N],[6,"U549755813888",E,E,N,N],[6,"P549755813888",E,E,N,N],[6,"N549755813888",E,E,N,N],[6,"U1099511627776",E,E,N,N],[6,"P1099511627776",E,E,N,N],[6,"N1099511627776",E,E,N,N],[6,"U2199023255552",E,E,N,N],[6,"P2199023255552",E,E,N,N],[6,"N2199023255552",E,E,N,N],[6,"U4398046511104",E,E,N,N],[6,"P4398046511104",E,E,N,N],[6,"N4398046511104",E,E,N,N],[6,"U8796093022208",E,E,N,N],[6,"P8796093022208",E,E,N,N],[6,"N8796093022208",E,E,N,N],[6,"U17592186044416",E,E,N,N],[6,"P17592186044416",E,E,N,N],[6,"N17592186044416",E,E,N,N],[6,"U35184372088832",E,E,N,N],[6,"P35184372088832",E,E,N,N],[6,"N35184372088832",E,E,N,N],[6,"U70368744177664",E,E,N,N],[6,"P70368744177664",E,E,N,N],[6,"N70368744177664",E,E,N,N],[6,"U140737488355328",E,E,N,N],[6,"P140737488355328",E,E,N,N],[6,"N140737488355328",E,E,N,N],[6,"U281474976710656",E,E,N,N],[6,"P281474976710656",E,E,N,N],[6,"N281474976710656",E,E,N,N],[6,"U562949953421312",E,E,N,N],[6,"P562949953421312",E,E,N,N],[6,"N562949953421312",E,E,N,N],[6,"U1125899906842624",E,E,N,N],[6,"P1125899906842624",E,E,N,N],[6,"N1125899906842624",E,E,N,N],[6,"U2251799813685248",E,E,N,N],[6,"P2251799813685248",E,E,N,N],[6,"N2251799813685248",E,E,N,N],[6,"U4503599627370496",E,E,N,N],[6,"P4503599627370496",E,E,N,N],[6,"N4503599627370496",E,E,N,N],[6,"U9007199254740992",E,E,N,N],[6,"P9007199254740992",E,E,N,N],[6,"N9007199254740992",E,E,N,N],[6,"U18014398509481984",E,E,N,N],[6,"P18014398509481984",E,E,N,N],[6,"N18014398509481984",E,E,N,N],[6,"U36028797018963968",E,E,N,N],[6,"P36028797018963968",E,E,N,N],[6,"N36028797018963968",E,E,N,N],[6,"U72057594037927936",E,E,N,N],[6,"P72057594037927936",E,E,N,N],[6,"N72057594037927936",E,E,N,N],[6,"U144115188075855872",E,E,N,N],[6,"P144115188075855872",E,E,N,N],[6,"N144115188075855872",E,E,N,N],[6,"U288230376151711744",E,E,N,N],[6,"P288230376151711744",E,E,N,N],[6,"N288230376151711744",E,E,N,N],[6,"U576460752303423488",E,E,N,N],[6,"P576460752303423488",E,E,N,N],[6,"N576460752303423488",E,E,N,N],[6,"U1152921504606846976",E,E,N,N],[6,"P1152921504606846976",E,E,N,N],[6,"N1152921504606846976",E,E,N,N],[6,"U2305843009213693952",E,E,N,N],[6,"P2305843009213693952",E,E,N,N],[6,"N2305843009213693952",E,E,N,N],[6,"U4611686018427387904",E,E,N,N],[6,"P4611686018427387904",E,E,N,N],[6,"N4611686018427387904",E,E,N,N],[6,"U9223372036854775808",E,E,N,N],[6,"U10000",E,E,N,N],[6,"P10000",E,E,N,N],[6,"N10000",E,E,N,N],[6,"U100000",E,E,N,N],[6,"P100000",E,E,N,N],[6,"N100000",E,E,N,N],[6,"U1000000",E,E,N,N],[6,"P1000000",E,E,N,N],[6,"N1000000",E,E,N,N],[6,"U10000000",E,E,N,N],[6,"P10000000",E,E,N,N],[6,"N10000000",E,E,N,N],[6,"U100000000",E,E,N,N],[6,"P100000000",E,E,N,N],[6,"N100000000",E,E,N,N],[6,"U1000000000",E,E,N,N],[6,"P1000000000",E,E,N,N],[6,"N1000000000",E,E,N,N],[6,"U10000000000",E,E,N,N],[6,"P10000000000",E,E,N,N],[6,"N10000000000",E,E,N,N],[6,"U100000000000",E,E,N,N],[6,"P100000000000",E,E,N,N],[6,"N100000000000",E,E,N,N],[6,"U1000000000000",E,E,N,N],[6,"P1000000000000",E,E,N,N],[6,"N1000000000000",E,E,N,N],[6,"U10000000000000",E,E,N,N],[6,"P10000000000000",E,E,N,N],[6,"N10000000000000",E,E,N,N],[6,"U100000000000000",E,E,N,N],[6,"P100000000000000",E,E,N,N],[6,"N100000000000000",E,E,N,N],[6,"U1000000000000000",E,E,N,N],[6,"P1000000000000000",E,E,N,N],[6,"N1000000000000000",E,E,N,N],[6,"U10000000000000000",E,E,N,N],[6,"P10000000000000000",E,E,N,N],[6,"N10000000000000000",E,E,N,N],[6,"U100000000000000000",E,E,N,N],[6,"P100000000000000000",E,E,N,N],[6,"N100000000000000000",E,E,N,N],[6,"U1000000000000000000",E,E,N,N],[6,"P1000000000000000000",E,E,N,N],[6,"N1000000000000000000",E,E,N,N],[6,"U10000000000000000000",E,E,N,N],[0,"bit",R[110],"Type-level bits.",N,N],[3,"B0",R[114],"The type-level bit 0.",N,N],[3,"B1",E,"The type-level bit 1.",N,N],[11,"new",E,R[107],0,[[],["b0"]]],[11,"new",E,R[107],1,[[],["b1"]]],[0,"uint",R[110],"Type-level unsigned integers.",N,N],[3,"UTerm",R[120],"The terminating type for `UInt`; it always comes after the…",N,N],[3,"UInt",E,"`UInt` is defined recursively, where `B` is the least…",N,N],[6,"GetBitOut",E,E,N,N],[6,"SetBitOut",E,"Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",N,N],[8,"GetBit",E,E,N,N],[16,"Output",E,E,2,N],[8,"SetBit",E,"A type operator that, when implemented for unsigned…",N,N],[16,"Output",E,E,3,N],[11,"new",E,R[108],4,[[],["uterm"]]],[11,"new",E,R[108],5,[[],["uint"]]],[0,"int",R[110],"Type-level signed integers.",N,N],[3,"PInt",R[122],"Type-level signed integers with positive sign.",N,N],[3,"NInt",E,"Type-level signed integers with negative sign.",N,N],[3,"Z0",E,"The type-level signed integer 0.",N,N],[11,"new",E,R[109],6,[[],["pint"]]],[11,"new",E,R[109],7,[[],["nint"]]],[11,"new",E,"Instantiates a singleton representing the integer 0.",8,[[],["z0"]]],[0,"marker_traits",R[110],"All of the marker traits used in typenum.",N,N],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",N,N],[8,"Ord",E,"A Marker trait for the types `Greater`, `Equal`, and `Less`.",N,N],[10,R[125],E,E,9,[[],[R[101]]]],[8,"Bit",E,"The marker trait for compile time bits.",N,N],[18,"U8",E,E,10,N],[18,"BOOL",E,E,10,N],[10,"to_u8",E,E,10,[[],["u8"]]],[10,"to_bool",E,E,10,[[],["bool"]]],[8,"Unsigned",E,"The marker trait for compile time unsigned integers.",N,N],[18,"U8",E,E,11,N],[18,"U16",E,E,11,N],[18,"U32",E,E,11,N],[18,"U64",E,E,11,N],[18,"USIZE",E,E,11,N],[18,"I8",E,E,11,N],[18,"I16",E,E,11,N],[18,"I32",E,E,11,N],[18,"I64",E,E,11,N],[18,"ISIZE",E,E,11,N],[10,"to_u8",E,E,11,[[],["u8"]]],[10,"to_u16",E,E,11,[[],["u16"]]],[10,"to_u32",E,E,11,[[],["u32"]]],[10,"to_u64",E,E,11,[[],["u64"]]],[10,R[127],E,E,11,[[],["usize"]]],[10,"to_i8",E,E,11,[[],["i8"]]],[10,"to_i16",E,E,11,[[],["i16"]]],[10,"to_i32",E,E,11,[[],["i32"]]],[10,"to_i64",E,E,11,[[],["i64"]]],[10,R[126],E,E,11,[[],["isize"]]],[8,"Integer",E,"The marker trait for compile time signed integers.",N,N],[18,"I8",E,E,12,N],[18,"I16",E,E,12,N],[18,"I32",E,E,12,N],[18,"I64",E,E,12,N],[18,"ISIZE",E,E,12,N],[10,"to_i8",E,E,12,[[],["i8"]]],[10,"to_i16",E,E,12,[[],["i16"]]],[10,"to_i32",E,E,12,[[],["i32"]]],[10,"to_i64",E,E,12,[[],["i64"]]],[10,R[126],E,E,12,[[],["isize"]]],[8,"TypeArray",E,"The marker trait for type-level arrays of type-level…",N,N],[8,"PowerOfTwo",E,"The marker trait for type-level numbers which are a power…",N,N],[0,"type_operators",R[110],"Useful type operators that are not defined in `core::ops`.",N,N],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",N,N],[16,"Output",E,"Should always be `Self`",13,N],[8,"Abs",E,"A type operator that returns the absolute value.",N,N],[16,"Output",E,"The absolute value.",14,N],[8,"Pow",E,"A type operator that provides exponentiation by repeated…",N,N],[16,"Output",E,"The result of the exponentiation.",15,N],[10,"powi",E,R[111],15,[[["exp"]]]],[8,"Cmp",E,"A type operator for comparing `Self` and `Rhs`. It…",N,N],[16,"Output",E,"The result of the comparison. It should only ever be one…",16,N],[8,"Len",E,"A type operator that gives the length of an `Array` or the…",N,N],[16,"Output",E,"The length as a type-level unsigned integer.",17,N],[10,"len",E,R[111],17,[[["self"]]]],[8,R[129],E,"Division as a partial function. This type operator…",N,N],[16,"Output",E,"The type of the result of the division",18,N],[10,R[121],E,"Method for performing the division",18,[[["rhs"]]]],[8,"Min",E,"A type operator that returns the minimum of `Self` and…",N,N],[16,"Output",E,"The type of the minimum of `Self` and `Rhs`",19,N],[10,"min",E,"Method returning the minimum",19,[[["rhs"]]]],[8,"Max",E,"A type operator that returns the maximum of `Self` and…",N,N],[16,"Output",E,"The type of the maximum of `Self` and `Rhs`",20,N],[10,"max",E,"Method returning the maximum",20,[[["rhs"]]]],[8,"IsLess",E,"A type operator that returns `True` if `Self < Rhs`,…",N,N],[16,"Output",E,R[112],21,N],[10,R[123],E,R[113],21,[[["rhs"]]]],[8,"IsEqual",E,"A type operator that returns `True` if `Self == Rhs`,…",N,N],[16,"Output",E,R[112],22,N],[10,R[119],E,R[113],22,[[["rhs"]]]],[8,R[130],E,"A type operator that returns `True` if `Self > Rhs`,…",N,N],[16,"Output",E,R[112],23,N],[10,R[115],E,R[113],23,[[["rhs"]]]],[8,R[131],E,"A type operator that returns `True` if `Self <= Rhs`,…",N,N],[16,"Output",E,R[112],24,N],[10,R[116],E,R[113],24,[[["rhs"]]]],[8,R[132],E,"A type operator that returns `True` if `Self != Rhs`,…",N,N],[16,"Output",E,R[112],25,N],[10,R[117],E,R[113],25,[[["rhs"]]]],[8,R[133],E,"A type operator that returns `True` if `Self >= Rhs`,…",N,N],[16,"Output",E,R[112],26,N],[10,R[118],E,R[113],26,[[["rhs"]]]],[0,"operator_aliases",R[110],"Aliases for the type operators used in this crate. Their…",N,N],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",N,N],[6,"Or",E,"Alias for the associated type of `BitOr`: `Or<A, B> = <A…",N,N],[6,"Xor",E,"Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",N,N],[6,"Shleft",E,"Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",N,N],[6,"Shright",E,"Alias for the associated type of `Shr`: `Shright<A, B> =…",N,N],[6,"Sum",E,"Alias for the associated type of `Add`: `Sum<A, B> = <A as…",N,N],[6,"Diff",E,"Alias for the associated type of `Sub`: `Diff<A, B> = <A…",N,N],[6,"Prod",E,"Alias for the associated type of `Mul`: `Prod<A, B> = <A…",N,N],[6,"Quot",E,"Alias for the associated type of `Div`: `Quot<A, B> = <A…",N,N],[6,"Mod",E,"Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",N,N],[6,"PartialQuot",E,"Alias for the associated type of `PartialDiv`:…",N,N],[6,"Negate",E,"Alias for the associated type of `Neg`: `Negate<A> = <A as…",N,N],[6,"AbsVal",E,"Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",N,N],[6,"Exp",E,"Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",N,N],[6,"Add1",E,"Alias to make it easy to add 1: `Add1<A> = <A as…",N,N],[6,"Sub1",E,"Alias to make it easy to subtract 1: `Sub1<A> = <A as…",N,N],[6,"Square",E,"Alias to make it easy to square. `Square<A> = <A as…",N,N],[6,"Cube",E,"Alias to make it easy to cube. `Cube<A> = <Square<A> as…",N,N],[6,"Compare",E,"Alias for the associated type of `Cmp`: `Compare<A, B> =…",N,N],[6,"Length",E,"Alias for the associated type of `Len`: `Length<A> = <A as…",N,N],[6,"Minimum",E,"Alias for the associated type of `Min`: `Minimum<A, B> =…",N,N],[6,"Maximum",E,"Alias for the associated type of `Max`: `Maximum<A, B> =…",N,N],[6,"Le",E,"Alias for the associated type of `IsLess`: `Le<A, B> = <A…",N,N],[6,"Eq",E,"Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",N,N],[6,"Gr",E,"Alias for the associated type of `IsGreater`: `Gr<A, B> =…",N,N],[6,"GrEq",E,"Alias for the associated type of `IsGreaterOrEqual`:…",N,N],[6,"LeEq",E,"Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",N,N],[6,"NotEq",E,"Alias for the associated type of `IsNotEqual`: `NotEq<A,…",N,N],[0,"array",R[110],"A type-level array of type-level numbers.",N,N],[3,"ATerm",R[124],"The terminating type for type arrays.",N,N],[3,"TArr",E,"`TArr` is a type that acts as an array of types. It is…",N,N],[14,"op",R[110],"Convenient type operations.",N,N],[14,"cmp",E,"A convenience macro for comparing type numbers. Use `op!`…",N,N],[14,"tarr",E,"Create a new type-level arrray. Only usable on Rust 1.13.0…",N,N],[14,"assert_type_eq",E,"Asserts that two types are the same.",N,N],[14,"assert_type",E,"Asserts that a type is `True`, aka `B1`.",N,N],[11,"from",E,E,27,[[[T]],[T]]],[11,R[1],E,E,27,[[[U]],[R[0]]]],[11,"into",E,E,27,[[],[U]]],[11,R[2],E,E,27,[[],[R[0]]]],[11,R[3],E,E,27,[[["self"]],[T]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[R[6]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[1],E,E,28,[[[U]],[R[0]]]],[11,"into",E,E,28,[[],[U]]],[11,R[2],E,E,28,[[],[R[0]]]],[11,R[3],E,E,28,[[["self"]],[T]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[R[6]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[1],E,E,29,[[[U]],[R[0]]]],[11,"into",E,E,29,[[],[U]]],[11,R[2],E,E,29,[[],[R[0]]]],[11,R[3],E,E,29,[[["self"]],[T]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[R[6]]]],[11,R[123],R[114],E,0,[[["b"]]]],[11,R[119],E,E,0,[[["b"]]]],[11,R[115],E,E,0,[[["b"]]]],[11,R[116],E,E,0,[[["b"]]]],[11,R[117],E,E,0,[[["b"]]]],[11,R[118],E,E,0,[[["b"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[123],E,E,1,[[["b"]]]],[11,R[119],E,E,1,[[["b"]]]],[11,R[115],E,E,1,[[["b"]]]],[11,R[116],E,E,1,[[["b"]]]],[11,R[117],E,E,1,[[["b"]]]],[11,R[118],E,E,1,[[["b"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"powi",R[120],E,4,[[["n"]]]],[11,R[121],E,E,4,[[["n"]]]],[11,R[123],E,E,4,[[["b"]]]],[11,R[119],E,E,4,[[["b"]]]],[11,R[115],E,E,4,[[["b"]]]],[11,R[116],E,E,4,[[["b"]]]],[11,R[117],E,E,4,[[["b"]]]],[11,R[118],E,E,4,[[["b"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,"into",E,E,4,[[],[U]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,"powi",E,E,5,[[["n"]]]],[11,R[121],E,E,5,[[["n"]]]],[11,R[123],E,E,5,[[["b"]]]],[11,R[119],E,E,5,[[["b"]]]],[11,R[115],E,E,5,[[["b"]]]],[11,R[116],E,E,5,[[["b"]]]],[11,R[117],E,E,5,[[["b"]]]],[11,R[118],E,E,5,[[["b"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[1],E,E,5,[[[U]],[R[0]]]],[11,"into",E,E,5,[[],[U]]],[11,R[2],E,E,5,[[],[R[0]]]],[11,R[3],E,E,5,[[["self"]],[T]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[R[6]]]],[11,"powi",R[122],E,6,[[["n"]]]],[11,R[121],E,E,6,[[["n"]]]],[11,R[123],E,E,6,[[["b"]]]],[11,R[119],E,E,6,[[["b"]]]],[11,R[115],E,E,6,[[["b"]]]],[11,R[116],E,E,6,[[["b"]]]],[11,R[117],E,E,6,[[["b"]]]],[11,R[118],E,E,6,[[["b"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[1],E,E,6,[[[U]],[R[0]]]],[11,"into",E,E,6,[[],[U]]],[11,R[2],E,E,6,[[],[R[0]]]],[11,R[3],E,E,6,[[["self"]],[T]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[R[6]]]],[11,"powi",E,E,7,[[["n"]]]],[11,R[121],E,E,7,[[["n"]]]],[11,R[123],E,E,7,[[["b"]]]],[11,R[119],E,E,7,[[["b"]]]],[11,R[115],E,E,7,[[["b"]]]],[11,R[116],E,E,7,[[["b"]]]],[11,R[117],E,E,7,[[["b"]]]],[11,R[118],E,E,7,[[["b"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[1],E,E,7,[[[U]],[R[0]]]],[11,"into",E,E,7,[[],[U]]],[11,R[2],E,E,7,[[],[R[0]]]],[11,R[3],E,E,7,[[["self"]],[T]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[R[6]]]],[11,"powi",E,E,8,[[["n"]]]],[11,R[121],E,E,8,[[["n"]]]],[11,R[123],E,E,8,[[["b"]]]],[11,R[119],E,E,8,[[["b"]]]],[11,R[115],E,E,8,[[["b"]]]],[11,R[116],E,E,8,[[["b"]]]],[11,R[117],E,E,8,[[["b"]]]],[11,R[118],E,E,8,[[["b"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[1],E,E,8,[[[U]],[R[0]]]],[11,"into",E,E,8,[[],[U]]],[11,R[2],E,E,8,[[],[R[0]]]],[11,R[3],E,E,8,[[["self"]],[T]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[R[6]]]],[11,R[121],R[124],E,30,[[["n"]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[1],E,E,30,[[[U]],[R[0]]]],[11,"into",E,E,30,[[],[U]]],[11,R[2],E,E,30,[[],[R[0]]]],[11,R[3],E,E,30,[[["self"]],[T]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[R[6]]]],[11,R[121],E,E,31,[[["n"]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[1],E,E,31,[[[U]],[R[0]]]],[11,"into",E,E,31,[[],[U]]],[11,R[2],E,E,31,[[],[R[0]]]],[11,R[3],E,E,31,[[["self"]],[T]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[R[6]]]],[11,R[125],R[110],E,27,[[],[R[101]]]],[11,R[125],E,E,28,[[],[R[101]]]],[11,R[125],E,E,29,[[],[R[101]]]],[11,"to_u8",R[114],E,0,[[],["u8"]]],[11,"to_bool",E,E,0,[[],["bool"]]],[11,"to_u8",E,E,1,[[],["u8"]]],[11,"to_bool",E,E,1,[[],["bool"]]],[11,"to_u8",R[120],E,4,[[],["u8"]]],[11,"to_u16",E,E,4,[[],["u16"]]],[11,"to_u32",E,E,4,[[],["u32"]]],[11,"to_u64",E,E,4,[[],["u64"]]],[11,R[127],E,E,4,[[],["usize"]]],[11,"to_i8",E,E,4,[[],["i8"]]],[11,"to_i16",E,E,4,[[],["i16"]]],[11,"to_i32",E,E,4,[[],["i32"]]],[11,"to_i64",E,E,4,[[],["i64"]]],[11,R[126],E,E,4,[[],["isize"]]],[11,"to_u8",E,E,5,[[],["u8"]]],[11,"to_u16",E,E,5,[[],["u16"]]],[11,"to_u32",E,E,5,[[],["u32"]]],[11,"to_u64",E,E,5,[[],["u64"]]],[11,R[127],E,E,5,[[],["usize"]]],[11,"to_i8",E,E,5,[[],["i8"]]],[11,"to_i16",E,E,5,[[],["i16"]]],[11,"to_i32",E,E,5,[[],["i32"]]],[11,"to_i64",E,E,5,[[],["i64"]]],[11,R[126],E,E,5,[[],["isize"]]],[11,"to_i8",R[122],E,8,[[],["i8"]]],[11,"to_i16",E,E,8,[[],["i16"]]],[11,"to_i32",E,E,8,[[],["i32"]]],[11,"to_i64",E,E,8,[[],["i64"]]],[11,R[126],E,E,8,[[],["isize"]]],[11,"to_i8",E,E,6,[[],["i8"]]],[11,"to_i16",E,E,6,[[],["i16"]]],[11,"to_i32",E,E,6,[[],["i32"]]],[11,"to_i64",E,E,6,[[],["i64"]]],[11,R[126],E,E,6,[[],["isize"]]],[11,"to_i8",E,E,7,[[],["i8"]]],[11,"to_i16",E,E,7,[[],["i16"]]],[11,"to_i32",E,E,7,[[],["i32"]]],[11,"to_i64",E,E,7,[[],["i64"]]],[11,R[126],E,E,7,[[],["isize"]]],[11,"powi",E,E,8,[[["z0"]]]],[11,"powi",E,E,8,[[["pint"]]]],[11,"powi",E,E,8,[[["nint"]]]],[11,"powi",R[110],E,32,[[["nint"]]]],[11,"powi",E,E,33,[[["nint",["uint"]],["uint",["b0"]]]]],[11,"powi",E,E,33,[[["nint",["uint"]],["uint",["b1"]]]]],[11,"powi",R[122],E,6,[[["z0"]]]],[11,"powi",E,E,7,[[["z0"]]]],[11,"powi",E,E,6,[[["pint"]]]],[11,"powi",E,E,7,[[["pint",["uint"]],["uint",["b0"]]]]],[11,"powi",E,E,7,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"len",R[120],E,4,[[["self"]]]],[11,"len",E,E,5,[[["self"]]]],[11,"len",R[124],E,30,[[["self"]]]],[11,"len",E,E,31,[[["self"]]]],[11,R[121],R[120],E,4,[[["uint"]]]],[11,R[121],E,E,5,[[["uint"]]]],[11,R[121],R[124],E,30,[[["rhs"]]]],[11,R[121],E,E,31,[[["rhs"]]]],[11,"min",R[114],E,0,[[["b0"]],["b0"]]],[11,"min",E,E,0,[[["b1"]],["b0"]]],[11,"min",E,E,1,[[["b0"]],["b0"]]],[11,"min",E,E,1,[[["b1"]],["b1"]]],[11,"min",R[120],E,4,[[[U]]]],[11,"min",E,E,5,[[["ur"]]]],[11,"min",R[122],E,8,[[["z0"]]]],[11,"min",E,E,8,[[["pint"]]]],[11,"min",E,E,8,[[["nint"]]]],[11,"min",E,E,6,[[["z0"]]]],[11,"min",E,E,7,[[["z0"]]]],[11,"min",E,E,6,[[["pint"]]]],[11,"min",E,E,7,[[["pint"]]]],[11,"min",E,E,6,[[["nint"]]]],[11,"min",E,E,7,[[["nint"]]]],[11,"max",R[114],E,0,[[["b0"]],["b0"]]],[11,"max",E,E,0,[[["b1"]],["b1"]]],[11,"max",E,E,1,[[["b0"]],["b1"]]],[11,"max",E,E,1,[[["b1"]],["b1"]]],[11,"max",R[120],E,4,[[[U]]]],[11,"max",E,E,5,[[["ur"]]]],[11,"max",R[122],E,8,[[["z0"]]]],[11,"max",E,E,8,[[["pint"]]]],[11,"max",E,E,8,[[["nint"]]]],[11,"max",E,E,6,[[["z0"]]]],[11,"max",E,E,7,[[["z0"]]]],[11,"max",E,E,6,[[["pint"]]]],[11,"max",E,E,7,[[["pint"]]]],[11,"max",E,E,6,[[["nint"]]]],[11,"max",E,E,7,[[["nint"]]]],[11,"eq",R[114],E,0,[[["b0"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["b1"]],["bool"]]],[11,"eq",R[120],E,4,[[["self"],["uterm"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"eq",R[122],E,6,[[["self"],["pint"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"eq",E,E,7,[[["nint"],["self"]],["bool"]]],[11,"ne",E,E,7,[[["nint"],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["z0"]],["bool"]]],[11,"eq",R[124],E,30,[[["self"],["aterm"]],["bool"]]],[11,"eq",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"ne",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"eq",R[110],E,27,[[["self"],["greater"]],["bool"]]],[11,"eq",E,E,28,[[["less"],["self"]],["bool"]]],[11,"eq",E,E,29,[[["equal"],["self"]],["bool"]]],[11,"cmp",R[114],E,0,[[["b0"],["self"]],[R[101]]]],[11,"cmp",E,E,1,[[["self"],["b1"]],[R[101]]]],[11,"cmp",R[120],E,4,[[["self"],["uterm"]],[R[101]]]],[11,"cmp",E,E,5,[[["self"],["uint"]],[R[101]]]],[11,"cmp",R[122],E,6,[[["self"],["pint"]],[R[101]]]],[11,"cmp",E,E,7,[[["nint"],["self"]],[R[101]]]],[11,"cmp",E,E,8,[[["self"],["z0"]],[R[101]]]],[11,"cmp",R[124],E,30,[[["self"],["aterm"]],[R[101]]]],[11,"cmp",E,E,31,[[["self"],["tarr"]],[R[101]]]],[11,"cmp",R[110],E,27,[[["self"],["greater"]],[R[101]]]],[11,"cmp",E,E,28,[[["less"],["self"]],[R[101]]]],[11,"cmp",E,E,29,[[["equal"],["self"]],[R[101]]]],[11,R[102],R[114],E,0,[[["b0"],["self"]],[[R[101]],[R[44],[R[101]]]]]],[11,R[102],E,E,1,[[["self"],["b1"]],[[R[101]],[R[44],[R[101]]]]]],[11,R[102],R[120],E,4,[[["self"],["uterm"]],[[R[101]],[R[44],[R[101]]]]]],[11,R[102],E,E,5,[[["self"],["uint"]],[[R[101]],[R[44],[R[101]]]]]],[11,"lt",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"le",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"gt",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"ge",E,E,5,[[["self"],["uint"]],["bool"]]],[11,R[102],R[122],E,6,[[["self"],["pint"]],[[R[101]],[R[44],[R[101]]]]]],[11,"lt",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"le",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"gt",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"ge",E,E,6,[[["self"],["pint"]],["bool"]]],[11,R[102],E,E,7,[[["nint"],["self"]],[[R[101]],[R[44],[R[101]]]]]],[11,"lt",E,E,7,[[["nint"],["self"]],["bool"]]],[11,"le",E,E,7,[[["nint"],["self"]],["bool"]]],[11,"gt",E,E,7,[[["nint"],["self"]],["bool"]]],[11,"ge",E,E,7,[[["nint"],["self"]],["bool"]]],[11,R[102],E,E,8,[[["self"],["z0"]],[[R[101]],[R[44],[R[101]]]]]],[11,R[102],R[124],E,30,[[["self"],["aterm"]],[[R[101]],[R[44],[R[101]]]]]],[11,R[102],E,E,31,[[["self"],["tarr"]],[[R[101]],[R[44],[R[101]]]]]],[11,"lt",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"le",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"gt",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"ge",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,R[102],R[110],E,27,[[["self"],["greater"]],[[R[101]],[R[44],[R[101]]]]]],[11,R[102],E,E,28,[[["less"],["self"]],[[R[101]],[R[44],[R[101]]]]]],[11,R[102],E,E,29,[[["equal"],["self"]],[[R[101]],[R[44],[R[101]]]]]],[11,"fmt",R[114],E,0,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,1,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",R[120],E,4,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,5,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",R[122],E,6,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,7,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,8,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",R[124],E,30,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,31,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",R[110],E,27,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,28,[[[R[32]],["self"]],[R[0]]]],[11,"fmt",E,E,29,[[[R[32]],["self"]],[R[0]]]],[11,"rem",R[120],E,4,[[["uint"]]]],[11,"rem",E,E,5,[[["uint"]]]],[11,"rem",R[122],E,8,[[["i"]]]],[11,"rem",E,E,6,[[["pint"]]]],[11,"rem",E,E,6,[[["nint"]]]],[11,"rem",E,E,7,[[["pint"]]]],[11,"rem",E,E,7,[[["nint"]]]],[11,"rem",R[124],E,30,[[["rhs"]]]],[11,"rem",E,E,31,[[["rhs"]]]],[11,"add",R[120],E,4,[[["b0"]]]],[11,"add",E,E,5,[[["b0"]]]],[11,"add",E,E,4,[[["b1"]]]],[11,"add",E,E,5,[[["b1"]]]],[11,"add",E,E,5,[[["b1"]]]],[11,"add",E,E,4,[[[U]]]],[11,"add",E,E,5,[[["uterm"]]]],[11,"add",E,E,5,[[["b0"],["uint",["b0"]]]]],[11,"add",E,E,5,[[["b1"],["uint",["b1"]]]]],[11,"add",E,E,5,[[["b0"],["uint",["b0"]]]]],[11,"add",E,E,5,[[["b1"],["uint",["b1"]]]]],[11,"add",R[122],E,8,[[["i"]]]],[11,"add",E,E,6,[[["z0"]]]],[11,"add",E,E,7,[[["z0"]]]],[11,"add",E,E,6,[[["pint"]]]],[11,"add",E,E,7,[[["nint"]]]],[11,"add",E,E,6,[[["nint"]]]],[11,"add",E,E,7,[[["pint"]]]],[11,"add",R[124],E,30,[[["aterm"]]]],[11,"add",E,E,31,[[["tarr"]]]],[11,"sub",R[120],E,4,[[["b0"]]]],[11,"sub",E,E,5,[[["b0"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,4,[[["uterm"]]]],[11,"sub",E,E,5,[[["ur"]]]],[11,"sub",R[122],E,8,[[["z0"]]]],[11,"sub",E,E,8,[[["pint"]]]],[11,"sub",E,E,8,[[["nint"]]]],[11,"sub",E,E,6,[[["z0"]]]],[11,"sub",E,E,7,[[["z0"]]]],[11,"sub",E,E,6,[[["nint"]]]],[11,"sub",E,E,7,[[["pint"]]]],[11,"sub",E,E,6,[[["pint"]]]],[11,"sub",E,E,7,[[["nint"]]]],[11,"sub",R[124],E,30,[[["aterm"]]]],[11,"sub",E,E,31,[[["tarr"]]]],[11,"mul",R[120],E,5,[[["b0"]]]],[11,"mul",E,E,4,[[["b0"]]]],[11,"mul",E,E,4,[[["b1"]]]],[11,"mul",E,E,5,[[["b1"]]]],[11,"mul",E,E,5,[[["uterm"]]]],[11,"mul",E,E,4,[[[U]]]],[11,"mul",E,E,5,[[["uint"]]]],[11,"mul",E,E,5,[[["uint"]]]],[11,"mul",R[122],E,8,[[["i"]]]],[11,"mul",E,E,6,[[["z0"]]]],[11,"mul",E,E,7,[[["z0"]]]],[11,"mul",E,E,6,[[["pint"]]]],[11,"mul",E,E,7,[[["nint"]]]],[11,"mul",E,E,6,[[["nint"]]]],[11,"mul",E,E,7,[[["pint"]]]],[11,"mul",R[124],E,30,[[["rhs"]]]],[11,"mul",E,E,31,[[["rhs"]]]],[11,"mul",R[122],E,8,[[["aterm"]]]],[11,"mul",E,E,6,[[["aterm"]]]],[11,"mul",E,E,7,[[["aterm"]]]],[11,"mul",E,E,8,[[["tarr"]]]],[11,"mul",E,E,6,[[["tarr"]]]],[11,"mul",E,E,7,[[["tarr"]]]],[11,"div",R[120],E,4,[[["uint"]]]],[11,"div",E,E,5,[[["uint"]]]],[11,"div",R[122],E,8,[[["i"]]]],[11,"div",E,E,6,[[["pint"]]]],[11,"div",E,E,6,[[["nint"]]]],[11,"div",E,E,7,[[["pint"]]]],[11,"div",E,E,7,[[["nint"]]]],[11,"div",R[124],E,30,[[["rhs"]]]],[11,"div",E,E,31,[[["rhs"]]]],[11,"neg",R[122],E,8,[[]]],[11,"neg",E,E,6,[[]]],[11,"neg",E,E,7,[[]]],[11,"neg",R[124],E,30,[[]]],[11,"neg",E,E,31,[[]]],[11,"not",R[114],E,0,[[]]],[11,"not",E,E,1,[[]]],[11,"bitand",E,E,0,[[["rhs"]]]],[11,"bitand",E,E,1,[[["b0"]]]],[11,"bitand",E,E,1,[[["b1"]]]],[11,"bitand",R[120],E,4,[[["ur"]]]],[11,"bitand",E,E,5,[[["ur"]]]],[11,"bitor",R[114],E,0,[[["b0"]]]],[11,"bitor",E,E,0,[[["b1"]]]],[11,"bitor",E,E,1,[[["rhs"]]]],[11,"bitor",R[120],E,4,[[[U]]]],[11,"bitor",E,E,5,[[["uterm"]]]],[11,"bitor",E,E,5,[[["b0"],["uint",["b0"]]]]],[11,"bitor",E,E,5,[[["b1"],["uint",["b1"]]]]],[11,"bitor",E,E,5,[[["b0"],["uint",["b0"]]]]],[11,"bitor",E,E,5,[[["b1"],["uint",["b1"]]]]],[11,"bitxor",R[114],E,0,[[["b0"]]]],[11,"bitxor",E,E,1,[[["b0"]]]],[11,"bitxor",E,E,0,[[["b1"]]]],[11,"bitxor",E,E,1,[[["b1"]]]],[11,"bitxor",R[120],E,4,[[["ur"]]]],[11,"bitxor",E,E,5,[[["ur"]]]],[11,"shl",E,E,4,[[["b0"]]]],[11,"shl",E,E,4,[[["b1"]]]],[11,"shl",E,E,5,[[["b0"]]]],[11,"shl",E,E,5,[[["b1"]]]],[11,"shl",E,E,5,[[["uterm"]]]],[11,"shl",E,E,4,[[[U]]]],[11,"shl",E,E,5,[[["uint"]]]],[11,"shr",E,E,4,[[[U]]]],[11,"shr",E,E,5,[[["uterm"]]]],[11,"shr",E,E,4,[[["b0"]]]],[11,"shr",E,E,4,[[["b1"]]]],[11,"shr",E,E,5,[[["b0"]]]],[11,"shr",E,E,5,[[["b1"]]]],[11,"shr",E,E,5,[[["uint"]]]],[11,"hash",R[114],E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",R[120],E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["__hub"],["self"]]]],[11,"hash",R[122],E,6,[[["__hu"],["self"]]]],[11,"hash",E,E,7,[[["__hu"],["self"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",R[124],E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__hva"]]]],[11,"hash",R[110],E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"clone",R[114],E,0,[[["self"]],["b0"]]],[11,"clone",E,E,1,[[["self"]],["b1"]]],[11,"clone",R[120],E,4,[[["self"]],["uterm"]]],[11,"clone",E,E,5,[[["self"]],["uint"]]],[11,"clone",R[122],E,6,[[["self"]],["pint"]]],[11,"clone",E,E,7,[[["self"]],["nint"]]],[11,"clone",E,E,8,[[["self"]],["z0"]]],[11,"clone",R[124],E,30,[[["self"]],["aterm"]]],[11,"clone",E,E,31,[[["self"]],["tarr"]]],[11,"clone",R[110],E,27,[[["self"]],["greater"]]],[11,"clone",E,E,28,[[["self"]],["less"]]],[11,"clone",E,E,29,[[["self"]],["equal"]]],[11,R[128],R[114],E,0,[[],["b0"]]],[11,R[128],E,E,1,[[],["b1"]]],[11,R[128],R[120],E,4,[[],["uterm"]]],[11,R[128],E,E,5,[[],["uint"]]],[11,R[128],R[122],E,6,[[],["pint"]]],[11,R[128],E,E,7,[[],["nint"]]],[11,R[128],E,E,8,[[],["z0"]]],[11,R[128],R[110],E,27,[[],["greater"]]],[11,R[128],E,E,28,[[],["less"]]],[11,R[128],E,E,29,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,R[129]],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,R[130]],[8,R[131]],[8,R[132]],[8,R[133]],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["x25519_dalek"]={"doc":"Note that docs will only build on nightly Rust until…","i":[[3,R[431],"x25519_dalek","A `PublicKey` is the corresponding public key converted…",N,N],[3,R[432],E,"A `EphemeralSecret` is a short lived Diffie-Hellman secret…",N,N],[3,R[433],E,"A `StaticSecret` is a static Diffie-Hellman secret key…",N,N],[3,R[434],E,"A `SharedSecret` is a Diffie-Hellman shared secret that’s…",N,N],[5,"x25519",E,"The bare, byte-oriented x25519 function, exactly as…",N,[[]]],[11,R[378],E,R[449],0,[[["self"]]]],[11,R[426],E,R[427],1,[[[R[428]]],[R[429]]]],[11,"new",E,"Generate an x25519 `EphemeralSecret` key.",1,[[[T]],["self"]]],[11,R[426],E,R[427],2,[[[R[428]],["self"]],[R[429]]]],[11,"new",E,"Generate a x25519 `StaticSecret` key.",2,[[[T]],["self"]]],[11,R[379],E,"Save a x25519 `StaticSecret` key's bytes.",2,[[["self"]]]],[11,R[378],E,"View this shared secret key as a byte array.",3,[[["self"]]]],[17,"X25519_BASEPOINT_BYTES",E,"The X25519 basepoint, for use with the bare, byte-oriented…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,R[20],E,E,2,[[["self"]],[T]]],[11,R[21],E,E,2,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,"from",E,"Given a byte array, construct a x25519 `PublicKey`.",0,[[],[R[428]]]],[11,"from",E,"Given an x25519 `EphemeralSecret` key, compute its…",0,[[["ephemeralsecret"]],[R[428]]]],[11,"from",E,"Load a `StaticSecret` from a byte array.",2,[[],[R[430]]]],[11,"from",E,"Given an x25519 `StaticSecret` key, compute its…",0,[[[R[430]]],[R[428]]]],[11,"fmt",E,E,0,[[[R[32]],["self"]],[R[0]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"clone",E,E,0,[[["self"]],[R[428]]]],[11,"clone",E,E,2,[[["self"]],[R[430]]]]],"p":[[3,R[431]],[3,R[432]],[3,R[433]],[3,R[434]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);